// Generated by CIRCT unknown git version
module Decoder_83_prior(	// <stdin>:2:10
  input        io_in_0,
               io_in_1,
               io_in_2,
               io_in_3,
               io_in_4,
               io_in_5,
               io_in_6,
               io_in_7,
  output [2:0] io_out,
  output       io_display);

  assign io_out = io_in_7 ? 3'h7 : io_in_6 ? 3'h6 : io_in_5 ? 3'h5 : io_in_4 ? 3'h4 : io_in_3 ? 3'h3 :
                io_in_2 ? 3'h2 : {2'h0, io_in_1};	// <stdin>:2:10, Decoder_83_prior.scala:13:31, :14:20
  assign io_display = io_in_0 | io_in_1 | io_in_2 | io_in_3 | io_in_4 | io_in_5 | io_in_6 | io_in_7;	// <stdin>:2:10, Decoder_83_prior.scala:18:34
endmodule

module Seg(	// <stdin>:41:10
  input  [3:0] io_data_in,
  output [6:0] io_encode_out);

  assign io_encode_out = io_data_in == 4'h0 ? 7'h1 : io_data_in == 4'h1 ? 7'h4F : io_data_in == 4'h2 ? 7'h12 :
                io_data_in == 4'h3 ? 7'h6 : io_data_in == 4'h4 ? 7'h4C : {1'h0, io_data_in == 4'h5 ? 6'h24
                : io_data_in == 4'h6 ? 6'h20 : {2'h0, io_data_in == 4'h7 ? 4'hF : {1'h0, io_data_in == 4'h8
                ? 3'h0 : io_data_in == 4'h9 ? 3'h4 : 3'h1}}};	// <stdin>:41:10, Mux.scala:101:16, Seg.scala:11:21, :12:21, :13:21, :14:21, :15:21, :16:21, :17:21, :18:21, :19:21, :20:21
endmodule

module top(	// <stdin>:68:10
  input        clock,
               reset,
               io_sw_input_0,
               io_sw_input_1,
               io_sw_input_2,
               io_sw_input_3,
               io_sw_input_4,
               io_sw_input_5,
               io_sw_input_6,
               io_sw_input_7,
  output       io_led_output_0,
               io_led_output_1,
               io_led_output_2,
               io_led_output_3,
  output [6:0] io_seg_output);

  wire [2:0] _decoder_io_out;	// Top.scala:11:25
  Decoder_83_prior decoder (	// Top.scala:11:25
    .io_in_0    (io_sw_input_0),
    .io_in_1    (io_sw_input_1),
    .io_in_2    (io_sw_input_2),
    .io_in_3    (io_sw_input_3),
    .io_in_4    (io_sw_input_4),
    .io_in_5    (io_sw_input_5),
    .io_in_6    (io_sw_input_6),
    .io_in_7    (io_sw_input_7),
    .io_out     (_decoder_io_out),
    .io_display (io_led_output_3)
  );
  Seg seg (	// Top.scala:22:21
    .io_data_in    ({1'h0, _decoder_io_out}),	// Cat.scala:33:92, Top.scala:11:25
    .io_encode_out (io_seg_output)
  );
  assign io_led_output_0 = _decoder_io_out[0];	// <stdin>:68:10, Top.scala:11:25, :18:39
  assign io_led_output_1 = _decoder_io_out[1];	// <stdin>:68:10, Top.scala:11:25, :17:39
  assign io_led_output_2 = _decoder_io_out[2];	// <stdin>:68:10, Top.scala:11:25, :16:39
endmodule

