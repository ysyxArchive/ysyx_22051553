// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifdef RANDOMIZE_REG_INIT
  `define RANDOMIZE
`endif // RANDOMIZE_REG_INIT
`ifdef RANDOMIZE_MEM_INIT
  `define RANDOMIZE
`endif // RANDOMIZE_MEM_INIT

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifdef RANDOMIZE
  `ifdef VERILATOR
    `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
  `else  // VERILATOR
    `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
  `endif // VERILATOR
`else  // RANDOMIZE
  `define INIT_RANDOM_PROLOG_
`endif // RANDOMIZE

// VCS coverage exclude_file
module TagArray_combMem(	// Cache.scala:98:31
  input  [3:0]  R0_addr,
  input         R0_en,
                R0_clk,
  input  [3:0]  R1_addr,
  input         R1_en,
                R1_clk,
  input  [3:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [21:0] W0_data,
  input  [3:0]  W1_addr,
  input         W1_en,
                W1_clk,
  input  [21:0] W1_data,
  output [21:0] R0_data,
                R1_data);

  reg [21:0] Memory[0:15];	// Cache.scala:98:31
  reg        _GEN;	// Cache.scala:98:31
  reg [3:0]  _GEN_0;	// Cache.scala:98:31
  always @(posedge R0_clk) begin	// Cache.scala:98:31
    _GEN <= R0_en;	// Cache.scala:98:31
    _GEN_0 <= R0_addr;	// Cache.scala:98:31
  end // always @(posedge)
  reg        _GEN_1;	// Cache.scala:98:31
  reg [3:0]  _GEN_2;	// Cache.scala:98:31
  always @(posedge R1_clk) begin	// Cache.scala:98:31
    _GEN_1 <= R1_en;	// Cache.scala:98:31
    _GEN_2 <= R1_addr;	// Cache.scala:98:31
  end // always @(posedge)
  always @(posedge W0_clk) begin	// Cache.scala:98:31
    if (W0_en)	// Cache.scala:98:31
      Memory[W0_addr] <= W0_data;	// Cache.scala:98:31
    if (W1_en)	// Cache.scala:98:31
      Memory[W1_addr] <= W1_data;	// Cache.scala:98:31
  end // always @(posedge)
  `ifndef SYNTHESIS	// Cache.scala:98:31
    `ifdef RANDOMIZE_MEM_INIT	// Cache.scala:98:31
      integer initvar;	// Cache.scala:98:31
      reg [31:0] _RANDOM_MEM;	// Cache.scala:98:31
    `endif // RANDOMIZE_MEM_INIT
    `ifdef RANDOMIZE_REG_INIT	// Cache.scala:98:31
      reg [31:0] _RANDOM;	// Cache.scala:98:31
    `endif // RANDOMIZE_REG_INIT
    initial begin	// Cache.scala:98:31
      `INIT_RANDOM_PROLOG_	// Cache.scala:98:31
      `ifdef RANDOMIZE_MEM_INIT	// Cache.scala:98:31
        for (initvar = 0; initvar < 16; initvar = initvar + 1) begin
          _RANDOM_MEM = {`RANDOM};
          Memory[initvar] = _RANDOM_MEM[21:0];
        end	// Cache.scala:98:31
      `endif // RANDOMIZE_MEM_INIT
      `ifdef RANDOMIZE_REG_INIT	// Cache.scala:98:31
        _RANDOM = {`RANDOM};	// Cache.scala:98:31
        _GEN = _RANDOM[0];	// Cache.scala:98:31
        _GEN_0 = _RANDOM[4:1];	// Cache.scala:98:31
        _GEN_1 = _RANDOM[5];	// Cache.scala:98:31
        _GEN_2 = _RANDOM[9:6];	// Cache.scala:98:31
      `endif // RANDOMIZE_REG_INIT
    end // initial
  `endif // not def SYNTHESIS
  assign R0_data = _GEN ? Memory[_GEN_0] : 22'bx;	// Cache.scala:98:31
  assign R1_data = _GEN_1 ? Memory[_GEN_2] : 22'bx;	// Cache.scala:98:31
endmodule

// VCS coverage exclude_file
module DataArray_10_1_combMem(	// Cache.scala:99:49
  input  [3:0] R0_addr,
  input        R0_en,
               R0_clk,
  input  [3:0] R1_addr,
  input        R1_en,
               R1_clk,
  input  [3:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [7:0] W0_data,
  input  [3:0] W1_addr,
  input        W1_en,
               W1_clk,
  input  [7:0] W1_data,
  input  [3:0] W2_addr,
  input        W2_en,
               W2_clk,
  input  [7:0] W2_data,
  input  [3:0] W3_addr,
  input        W3_en,
               W3_clk,
  input  [7:0] W3_data,
  output [7:0] R0_data,
               R1_data);

  reg [7:0] Memory[0:15];	// Cache.scala:99:49
  reg       _GEN;	// Cache.scala:99:49
  reg [3:0] _GEN_0;	// Cache.scala:99:49
  always @(posedge R0_clk) begin	// Cache.scala:99:49
    _GEN <= R0_en;	// Cache.scala:99:49
    _GEN_0 <= R0_addr;	// Cache.scala:99:49
  end // always @(posedge)
  reg       _GEN_1;	// Cache.scala:99:49
  reg [3:0] _GEN_2;	// Cache.scala:99:49
  always @(posedge R1_clk) begin	// Cache.scala:99:49
    _GEN_1 <= R1_en;	// Cache.scala:99:49
    _GEN_2 <= R1_addr;	// Cache.scala:99:49
  end // always @(posedge)
  always @(posedge W0_clk) begin	// Cache.scala:99:49
    if (W0_en)	// Cache.scala:99:49
      Memory[W0_addr] <= W0_data;	// Cache.scala:99:49
    if (W1_en)	// Cache.scala:99:49
      Memory[W1_addr] <= W1_data;	// Cache.scala:99:49
    if (W2_en)	// Cache.scala:99:49
      Memory[W2_addr] <= W2_data;	// Cache.scala:99:49
    if (W3_en)	// Cache.scala:99:49
      Memory[W3_addr] <= W3_data;	// Cache.scala:99:49
  end // always @(posedge)
  `ifndef SYNTHESIS	// Cache.scala:99:49
    `ifdef RANDOMIZE_MEM_INIT	// Cache.scala:99:49
      integer initvar;	// Cache.scala:99:49
      reg [31:0] _RANDOM_MEM;	// Cache.scala:99:49
    `endif // RANDOMIZE_MEM_INIT
    `ifdef RANDOMIZE_REG_INIT	// Cache.scala:99:49
      reg [31:0] _RANDOM;	// Cache.scala:99:49
    `endif // RANDOMIZE_REG_INIT
    initial begin	// Cache.scala:99:49
      `INIT_RANDOM_PROLOG_	// Cache.scala:99:49
      `ifdef RANDOMIZE_MEM_INIT	// Cache.scala:99:49
        for (initvar = 0; initvar < 16; initvar = initvar + 1) begin
          _RANDOM_MEM = {`RANDOM};
          Memory[initvar] = _RANDOM_MEM[7:0];
        end	// Cache.scala:99:49
      `endif // RANDOMIZE_MEM_INIT
      `ifdef RANDOMIZE_REG_INIT	// Cache.scala:99:49
        _RANDOM = {`RANDOM};	// Cache.scala:99:49
        _GEN = _RANDOM[0];	// Cache.scala:99:49
        _GEN_0 = _RANDOM[4:1];	// Cache.scala:99:49
        _GEN_1 = _RANDOM[5];	// Cache.scala:99:49
        _GEN_2 = _RANDOM[9:6];	// Cache.scala:99:49
      `endif // RANDOMIZE_REG_INIT
    end // initial
  `endif // not def SYNTHESIS
  assign R0_data = _GEN ? Memory[_GEN_0] : 8'bx;	// Cache.scala:99:49
  assign R1_data = _GEN_1 ? Memory[_GEN_2] : 8'bx;	// Cache.scala:99:49
endmodule

// VCS coverage exclude_file
module regs_combMem(	// Regfile.scala:32:19
  input  [4:0]  R0_addr,
  input         R0_en,
                R0_clk,
  input  [4:0]  R1_addr,
  input         R1_en,
                R1_clk,
  input  [4:0]  R2_addr,
  input         R2_en,
                R2_clk,
  input  [4:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [63:0] W0_data,
  input  [4:0]  W1_addr,
  input         W1_en,
                W1_clk,
  input  [63:0] W1_data,
  output [63:0] R0_data,
                R1_data,
                R2_data);

  reg [63:0] Memory[0:31];	// Regfile.scala:32:19
  always @(posedge W0_clk) begin	// Regfile.scala:32:19
    if (W0_en)	// Regfile.scala:32:19
      Memory[W0_addr] <= W0_data;	// Regfile.scala:32:19
    if (W1_en)	// Regfile.scala:32:19
      Memory[W1_addr] <= W1_data;	// Regfile.scala:32:19
  end // always @(posedge)
  `ifndef SYNTHESIS	// Regfile.scala:32:19
    `ifdef RANDOMIZE_MEM_INIT	// Regfile.scala:32:19
      integer initvar;	// Regfile.scala:32:19
      reg [63:0] _RANDOM_MEM;	// Regfile.scala:32:19
    `endif // RANDOMIZE_MEM_INIT
    initial begin	// Regfile.scala:32:19
      `INIT_RANDOM_PROLOG_	// Regfile.scala:32:19
      `ifdef RANDOMIZE_MEM_INIT	// Regfile.scala:32:19
        for (initvar = 0; initvar < 32; initvar = initvar + 1) begin
          _RANDOM_MEM = {{`RANDOM}, {`RANDOM}};
          Memory[initvar] = _RANDOM_MEM[63:0];
        end	// Regfile.scala:32:19
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // not def SYNTHESIS
  assign R0_data = R0_en ? Memory[R0_addr] : 64'bx;	// Regfile.scala:32:19
  assign R1_data = R1_en ? Memory[R1_addr] : 64'bx;	// Regfile.scala:32:19
  assign R2_data = R2_en ? Memory[R2_addr] : 64'bx;	// Regfile.scala:32:19
endmodule

module Fetch(	// <stdin>:2:10
  input         clock,
                reset,
                io_fcfe_jump_flag,
  input  [31:0] io_fcfe_jump_pc,
  input         io_fcfe_flush,
                io_fcfe_stall,
  output [31:0] io_fdio_pc,
  output        io_pc_valid,
  output [31:0] io_pc_bits);

  reg         started;	// Fetch.scala:25:26
  reg  [31:0] pc;	// Fetch.scala:28:21
  reg  [31:0] old_pc;	// Fetch.scala:29:25
  wire        _next_pc_T_2 = io_fcfe_flush & io_fcfe_jump_flag;	// Fetch.scala:36:36
  wire [31:0] _next_pc_T_4 = io_fcfe_jump_pc + 32'h4;	// Fetch.scala:36:85
  wire [31:0] _next_pc_T_7 = pc + 32'h4;	// Fetch.scala:28:21, :36:85, :37:37
  wire [31:0] next_pc = _next_pc_T_2 ? _next_pc_T_4 : started ? _next_pc_T_7 : pc;	// Fetch.scala:25:26, :28:21, :36:{36,85}, :37:37, Mux.scala:101:16
  wire        _io_fdio_pc_T_2 = io_fcfe_flush & io_fcfe_jump_flag;	// Fetch.scala:53:36
  wire        _io_pc_bits_T_3 = pc == old_pc;	// Fetch.scala:28:21, :29:25, :54:17
  always @(posedge clock) begin
    if (reset) begin
      started <= 1'h0;	// Fetch.scala:25:26
      pc <= 32'h80000000;	// Fetch.scala:28:21
      old_pc <= 32'h0;	// Fetch.scala:29:25
    end
    else begin
      started <= 1'h1;	// Fetch.scala:25:26, :26:13
      if (io_fcfe_stall)
        pc <= old_pc;	// Fetch.scala:28:21, :29:25
      else if (_next_pc_T_2)	// Fetch.scala:36:36
        pc <= _next_pc_T_4;	// Fetch.scala:28:21, :36:85
      else if (started)	// Fetch.scala:25:26, :36:36
        pc <= _next_pc_T_7;	// Fetch.scala:28:21, :37:37
      if (started) begin	// Fetch.scala:25:26
        if (io_fcfe_stall) begin
        end
        else if (_io_fdio_pc_T_2)	// Fetch.scala:53:36
          old_pc <= io_fcfe_jump_pc;	// Fetch.scala:29:25
        else if (_io_pc_bits_T_3) begin	// Fetch.scala:53:36, :54:17
          if (_next_pc_T_2)	// Fetch.scala:36:36
            old_pc <= _next_pc_T_4;	// Fetch.scala:29:25, :36:85
          else if (started)	// Fetch.scala:25:26, :36:36
            old_pc <= _next_pc_T_7;	// Fetch.scala:29:25, :37:37
          else	// Fetch.scala:25:26, :36:36
            old_pc <= pc;	// Fetch.scala:28:21, :29:25
        end
        else	// Fetch.scala:53:36, :54:17
          old_pc <= pc;	// Fetch.scala:28:21, :29:25
      end
      else	// Fetch.scala:25:26
        old_pc <= 32'h0;	// Fetch.scala:29:25
    end
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:2:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:2:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:2:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:2:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:2:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:2:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:2:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:2:10
        `INIT_RANDOM_PROLOG_	// <stdin>:2:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:2:10
        _RANDOM_0 = `RANDOM;	// <stdin>:2:10
        _RANDOM_1 = `RANDOM;	// <stdin>:2:10
        _RANDOM_2 = `RANDOM;	// <stdin>:2:10
        started = _RANDOM_0[0];	// Fetch.scala:25:26
        pc = {_RANDOM_0[31:1], _RANDOM_1[0]};	// Fetch.scala:25:26, :28:21
        old_pc = {_RANDOM_1[31:1], _RANDOM_2[0]};	// Fetch.scala:28:21, :29:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:2:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:2:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_fdio_pc = io_fcfe_stall ? old_pc : _io_fdio_pc_T_2 ? io_fcfe_jump_pc : _io_pc_bits_T_3 ? next_pc : pc;	// <stdin>:2:10, Fetch.scala:28:21, :29:25, :53:36, :54:17, Mux.scala:101:16
  assign io_pc_valid = started;	// <stdin>:2:10, Fetch.scala:25:26
  assign io_pc_bits = io_fcfe_stall ? old_pc : io_fcfe_flush & io_fcfe_jump_flag ? io_fcfe_jump_pc :
                _io_pc_bits_T_3 ? next_pc : pc;	// <stdin>:2:10, Fetch.scala:28:21, :29:25, :54:17, :65:36, Mux.scala:101:16
endmodule

module ControlUnit(	// <stdin>:48:10
  input  [31:0] io_inst,
  output [1:0]  io_jump_type,
  output        io_branch_type,
  output [1:0]  io_opa_type,
  output [2:0]  io_opb_type,
                io_imm_type,
  output [5:0]  io_alu_op,
  output [1:0]  io_wb_type,
  output [2:0]  io_sd_type,
                io_ld_type,
  output [1:0]  io_csr_type);

  wire        _controlsig_T_1 = io_inst == 32'h13;	// Lookup.scala:31:38
  wire        _controlsig_T_3 = io_inst[6:0] == 7'h17;	// Lookup.scala:31:38
  wire        _controlsig_T_5 = io_inst[6:0] == 7'h37;	// Lookup.scala:31:38
  wire        _controlsig_T_7 = io_inst[6:0] == 7'h6F;	// Lookup.scala:31:38
  wire [9:0]  _GEN = {io_inst[14:12], io_inst[6:0]};	// Lookup.scala:31:38
  wire        _controlsig_T_9 = _GEN == 10'h67;	// Lookup.scala:31:38
  wire        _controlsig_T_11 = _GEN == 10'h63;	// Lookup.scala:31:38
  wire        _controlsig_T_13 = _GEN == 10'hE3;	// Lookup.scala:31:38
  wire        _controlsig_T_15 = _GEN == 10'h263;	// Lookup.scala:31:38
  wire        _controlsig_T_17 = _GEN == 10'h2E3;	// Lookup.scala:31:38
  wire        _controlsig_T_19 = _GEN == 10'h363;	// Lookup.scala:31:38
  wire        _controlsig_T_264 = _GEN == 10'h3E3;	// Lookup.scala:31:38
  wire        _controlsig_T_23 = _GEN == 10'h3;	// Lookup.scala:31:38
  wire        _controlsig_T_25 = _GEN == 10'h83;	// Lookup.scala:31:38
  wire        _controlsig_T_27 = _GEN == 10'h103;	// Lookup.scala:31:38
  wire        _controlsig_T_29 = _GEN == 10'h203;	// Lookup.scala:31:38
  wire        _controlsig_T_31 = _GEN == 10'h283;	// Lookup.scala:31:38
  wire        _controlsig_T_33 = _GEN == 10'h303;	// Lookup.scala:31:38
  wire        _controlsig_T_35 = _GEN == 10'h183;	// Lookup.scala:31:38
  wire        _controlsig_T_37 = _GEN == 10'h23;	// Lookup.scala:31:38
  wire        _controlsig_T_39 = _GEN == 10'hA3;	// Lookup.scala:31:38
  wire        _controlsig_T_41 = _GEN == 10'h123;	// Lookup.scala:31:38
  wire        _controlsig_T_43 = _GEN == 10'h1A3;	// Lookup.scala:31:38
  wire        _controlsig_T_45 = _GEN == 10'h13;	// Lookup.scala:31:38
  wire        _controlsig_T_47 = _GEN == 10'h113;	// Lookup.scala:31:38
  wire        _controlsig_T_49 = _GEN == 10'h193;	// Lookup.scala:31:38
  wire        _controlsig_T_51 = _GEN == 10'h213;	// Lookup.scala:31:38
  wire        _controlsig_T_53 = _GEN == 10'h313;	// Lookup.scala:31:38
  wire        _controlsig_T_55 = _GEN == 10'h393;	// Lookup.scala:31:38
  wire [15:0] _GEN_0 = {io_inst[31:26], io_inst[14:12], io_inst[6:0]};	// Lookup.scala:31:38
  wire        _controlsig_T_57 = _GEN_0 == 16'h93;	// Lookup.scala:31:38
  wire        _controlsig_T_59 = _GEN_0 == 16'h293;	// Lookup.scala:31:38
  wire        _controlsig_T_61 = _GEN_0 == 16'h4293;	// Lookup.scala:31:38
  wire [16:0] _GEN_1 = {io_inst[31:25], io_inst[14:12], io_inst[6:0]};	// Lookup.scala:31:38
  wire        _controlsig_T_63 = _GEN_1 == 17'h33;	// Lookup.scala:31:38
  wire        _controlsig_T_65 = _GEN_1 == 17'h8033;	// Lookup.scala:31:38
  wire        _controlsig_T_67 = _GEN_0 == 16'hB3;	// Lookup.scala:31:38
  wire        _controlsig_T_69 = _GEN_1 == 17'h133;	// Lookup.scala:31:38
  wire        _controlsig_T_71 = _GEN_1 == 17'h1B3;	// Lookup.scala:31:38
  wire        _controlsig_T_73 = _GEN_1 == 17'h233;	// Lookup.scala:31:38
  wire        _controlsig_T_75 = _GEN_1 == 17'h2B3;	// Lookup.scala:31:38
  wire        _controlsig_T_77 = _GEN_1 == 17'h82B3;	// Lookup.scala:31:38
  wire        _controlsig_T_79 = _GEN_1 == 17'h333;	// Lookup.scala:31:38
  wire        _controlsig_T_81 = _GEN_1 == 17'h3B3;	// Lookup.scala:31:38
  wire        _controlsig_T_83 = _GEN_1 == 17'h433;	// Lookup.scala:31:38
  wire        _controlsig_T_85 = _GEN_1 == 17'h4B3;	// Lookup.scala:31:38
  wire        _controlsig_T_87 = _GEN_1 == 17'h533;	// Lookup.scala:31:38
  wire        _controlsig_T_89 = _GEN_1 == 17'h5B3;	// Lookup.scala:31:38
  wire        _controlsig_T_91 = _GEN_1 == 17'h633;	// Lookup.scala:31:38
  wire        _controlsig_T_93 = _GEN_1 == 17'h6B3;	// Lookup.scala:31:38
  wire        _controlsig_T_95 = _GEN_1 == 17'h733;	// Lookup.scala:31:38
  wire        _controlsig_T_97 = _GEN_1 == 17'h7B3;	// Lookup.scala:31:38
  wire        _controlsig_T_99 = _GEN == 10'h1B;	// Lookup.scala:31:38
  wire        _controlsig_T_101 = _GEN_0 == 16'h9B;	// Lookup.scala:31:38
  wire        _controlsig_T_103 = _GEN_0 == 16'h29B;	// Lookup.scala:31:38
  wire        _controlsig_T_105 = _GEN_0 == 16'h429B;	// Lookup.scala:31:38
  wire        _controlsig_T_107 = _GEN_1 == 17'h3B;	// Lookup.scala:31:38
  wire        _controlsig_T_109 = _GEN_1 == 17'h803B;	// Lookup.scala:31:38
  wire        _controlsig_T_111 = _GEN_1 == 17'hBB;	// Lookup.scala:31:38
  wire        _controlsig_T_113 = _GEN_1 == 17'h2BB;	// Lookup.scala:31:38
  wire        _controlsig_T_115 = _GEN_1 == 17'h82BB;	// Lookup.scala:31:38
  wire        _controlsig_T_117 = _GEN_1 == 17'h43B;	// Lookup.scala:31:38
  wire        _controlsig_T_119 = _GEN_1 == 17'h63B;	// Lookup.scala:31:38
  wire        _controlsig_T_121 = _GEN_1 == 17'h6BB;	// Lookup.scala:31:38
  wire        _controlsig_T_123 = _GEN_1 == 17'h73B;	// Lookup.scala:31:38
  wire        _controlsig_T_125 = _GEN_1 == 17'h7BB;	// Lookup.scala:31:38
  wire        _controlsig_T_127 = _GEN == 10'hF3;	// Lookup.scala:31:38
  wire        _controlsig_T_129 = _GEN == 10'h173;	// Lookup.scala:31:38
  wire        _controlsig_T_131 = _GEN == 10'h1F3;	// Lookup.scala:31:38
  wire        _controlsig_T_133 = _GEN == 10'h2F3;	// Lookup.scala:31:38
  wire        _controlsig_T_135 = _GEN == 10'h373;	// Lookup.scala:31:38
  wire        _controlsig_T_137 = _GEN == 10'h3F3;	// Lookup.scala:31:38
  wire [1:0]  _controlsig_T_750 = {2{_controlsig_T_137}};	// Lookup.scala:31:38, :34:39
  wire        _GEN_2 = _controlsig_T_11 | _controlsig_T_13 | _controlsig_T_15 | _controlsig_T_17 |
                _controlsig_T_19 | _controlsig_T_264 | _controlsig_T_23 | _controlsig_T_25 |
                _controlsig_T_27 | _controlsig_T_29 | _controlsig_T_31 | _controlsig_T_33 |
                _controlsig_T_35 | _controlsig_T_37 | _controlsig_T_39 | _controlsig_T_41 |
                _controlsig_T_43 | _controlsig_T_45 | _controlsig_T_47 | _controlsig_T_49 |
                _controlsig_T_51 | _controlsig_T_53 | _controlsig_T_55 | _controlsig_T_57 |
                _controlsig_T_59 | _controlsig_T_61 | _controlsig_T_63 | _controlsig_T_65 |
                _controlsig_T_67 | _controlsig_T_69;	// Lookup.scala:31:38, :34:39
  wire        _GEN_3 = _controlsig_T_71 | _controlsig_T_73 | _controlsig_T_75 | _controlsig_T_77 |
                _controlsig_T_79 | _controlsig_T_81 | _controlsig_T_83 | _controlsig_T_85 |
                _controlsig_T_87 | _controlsig_T_89 | _controlsig_T_91 | _controlsig_T_93 |
                _controlsig_T_95 | _controlsig_T_97 | _controlsig_T_99 | _controlsig_T_101 |
                _controlsig_T_103 | _controlsig_T_105 | _controlsig_T_107 | _controlsig_T_109 |
                _controlsig_T_111 | _controlsig_T_113 | _controlsig_T_115 | _controlsig_T_117 |
                _controlsig_T_119 | _controlsig_T_121 | _controlsig_T_123 | _controlsig_T_125 |
                _controlsig_T_127 | _controlsig_T_129 | _controlsig_T_131;	// Lookup.scala:31:38, :34:39
  wire        _GEN_4 = _controlsig_T_7 | _controlsig_T_9;	// Lookup.scala:31:38, :34:39
  wire        _GEN_5 = _controlsig_T_11 | _controlsig_T_13 | _controlsig_T_15 | _controlsig_T_17 |
                _controlsig_T_19 | _controlsig_T_264;	// Lookup.scala:31:38, :34:39
  wire        _GEN_6 = _controlsig_T_3 | _controlsig_T_5;	// Lookup.scala:31:38, :34:39
  wire        _GEN_7 = _controlsig_T_45 | _controlsig_T_47 | _controlsig_T_49 | _controlsig_T_51 |
                _controlsig_T_53 | _controlsig_T_55 | _controlsig_T_57 | _controlsig_T_59 |
                _controlsig_T_61 | _controlsig_T_63 | _controlsig_T_65 | _controlsig_T_67 |
                _controlsig_T_69 | _controlsig_T_71 | _controlsig_T_73 | _controlsig_T_75 |
                _controlsig_T_77 | _controlsig_T_79 | _controlsig_T_81 | _controlsig_T_83 |
                _controlsig_T_85 | _controlsig_T_87;	// Lookup.scala:31:38, :34:39
  wire        _GEN_8 = _controlsig_T_89 | _controlsig_T_91 | _controlsig_T_93 | _controlsig_T_95 |
                _controlsig_T_97 | _controlsig_T_99 | _controlsig_T_101 | _controlsig_T_103 |
                _controlsig_T_105 | _controlsig_T_107 | _controlsig_T_109 | _controlsig_T_111 |
                _controlsig_T_113 | _controlsig_T_115 | _controlsig_T_117 | _controlsig_T_119 |
                _controlsig_T_121 | _controlsig_T_123 | _controlsig_T_125 | _controlsig_T_127 |
                _controlsig_T_129 | _controlsig_T_131 | ~(_controlsig_T_133 | _controlsig_T_135 |
                _controlsig_T_137);	// Lookup.scala:31:38, :34:39
  wire        _GEN_9 = _controlsig_T_37 | _controlsig_T_39 | _controlsig_T_41 | _controlsig_T_43;	// Lookup.scala:31:38, :34:39
  wire        _GEN_10 = _controlsig_T_3 | _controlsig_T_5 | _controlsig_T_7 | _controlsig_T_9;	// Lookup.scala:31:38, :34:39
  wire        _GEN_11 = _controlsig_T_45 | _controlsig_T_47 | _controlsig_T_49 | _controlsig_T_51 |
                _controlsig_T_53 | _controlsig_T_55 | _controlsig_T_57 | _controlsig_T_59 |
                _controlsig_T_61 | _controlsig_T_63 | _controlsig_T_65 | _controlsig_T_67 |
                _controlsig_T_69 | _controlsig_T_71 | _controlsig_T_73 | _controlsig_T_75 |
                _controlsig_T_77 | _controlsig_T_79 | _controlsig_T_81 | _controlsig_T_83;	// Lookup.scala:31:38, :34:39
  wire        _GEN_12 = _controlsig_T_85 | _controlsig_T_87 | _controlsig_T_89 | _controlsig_T_91 |
                _controlsig_T_93 | _controlsig_T_95 | _controlsig_T_97 | _controlsig_T_99 |
                _controlsig_T_101 | _controlsig_T_103 | _controlsig_T_105 | _controlsig_T_107 |
                _controlsig_T_109 | _controlsig_T_111 | _controlsig_T_113 | _controlsig_T_115 |
                _controlsig_T_117 | _controlsig_T_119 | _controlsig_T_121 | _controlsig_T_123 |
                _controlsig_T_125;	// Lookup.scala:31:38, :34:39
  wire        _GEN_13 = _controlsig_T_1 | _controlsig_T_3 | _controlsig_T_5 | _controlsig_T_7 | _controlsig_T_9 |
                _controlsig_T_11 | _controlsig_T_13 | _controlsig_T_15 | _controlsig_T_17 |
                _controlsig_T_19 | _controlsig_T_264 | _controlsig_T_23 | _controlsig_T_25 |
                _controlsig_T_27 | _controlsig_T_29 | _controlsig_T_31 | _controlsig_T_33 |
                _controlsig_T_35 | _controlsig_T_37 | _controlsig_T_39 | _controlsig_T_41 |
                _controlsig_T_43 | _controlsig_T_45 | _controlsig_T_47 | _controlsig_T_49 |
                _controlsig_T_51 | _controlsig_T_53 | _controlsig_T_55 | _controlsig_T_57 |
                _controlsig_T_59 | _controlsig_T_61;	// Lookup.scala:31:38, :34:39
  wire        _GEN_14 = _controlsig_T_63 | _controlsig_T_65 | _controlsig_T_67 | _controlsig_T_69 |
                _controlsig_T_71 | _controlsig_T_73 | _controlsig_T_75 | _controlsig_T_77 |
                _controlsig_T_79 | _controlsig_T_81 | _controlsig_T_83 | _controlsig_T_85 |
                _controlsig_T_87 | _controlsig_T_89 | _controlsig_T_91 | _controlsig_T_93 |
                _controlsig_T_95 | _controlsig_T_97 | _controlsig_T_99 | _controlsig_T_101 |
                _controlsig_T_103 | _controlsig_T_105 | _controlsig_T_107 | _controlsig_T_109 |
                _controlsig_T_111 | _controlsig_T_113 | _controlsig_T_115 | _controlsig_T_117 |
                _controlsig_T_119 | _controlsig_T_121 | _controlsig_T_123 | _controlsig_T_125;	// Lookup.scala:31:38, :34:39
  assign io_jump_type = _controlsig_T_1 | _controlsig_T_3 | _controlsig_T_5 ? 2'h0 : _controlsig_T_7 ? 2'h1 :
                {_controlsig_T_9, 1'h0};	// <stdin>:48:10, Lookup.scala:31:38, :34:39
  assign io_branch_type = ~_controlsig_T_1 & ~_controlsig_T_3 & ~_controlsig_T_5 & ~_controlsig_T_7 &
                ~_controlsig_T_9 & (_controlsig_T_11 | _controlsig_T_13 | _controlsig_T_15 |
                _controlsig_T_17 | _controlsig_T_19 | _controlsig_T_264);	// <stdin>:48:10, Lookup.scala:31:38, :34:39
  assign io_opa_type = _controlsig_T_1 ? 2'h0 : _controlsig_T_3 ? 2'h1 : _controlsig_T_5 ? 2'h0 : _GEN_4 ? 2'h1 :
                _GEN_2 | _GEN_3 ? 2'h2 : _controlsig_T_133 | _controlsig_T_135 ? 2'h3 : _controlsig_T_750;	// <stdin>:48:10, Lookup.scala:31:38, :34:39
  assign io_opb_type = _controlsig_T_1 ? 3'h0 : _GEN_6 ? 3'h1 : _GEN_4 ? 3'h3 : _GEN_5 ? 3'h2 : _controlsig_T_23 |
                _controlsig_T_25 | _controlsig_T_27 | _controlsig_T_29 | _controlsig_T_31 |
                _controlsig_T_33 | _controlsig_T_35 | _controlsig_T_37 | _controlsig_T_39 |
                _controlsig_T_41 | _controlsig_T_43 | _controlsig_T_45 | _controlsig_T_47 |
                _controlsig_T_49 | _controlsig_T_51 | _controlsig_T_53 | _controlsig_T_55 |
                _controlsig_T_57 | _controlsig_T_59 | _controlsig_T_61 ? 3'h1 : _controlsig_T_63 |
                _controlsig_T_65 | _controlsig_T_67 | _controlsig_T_69 | _controlsig_T_71 |
                _controlsig_T_73 | _controlsig_T_75 | _controlsig_T_77 | _controlsig_T_79 |
                _controlsig_T_81 | _controlsig_T_83 | _controlsig_T_85 | _controlsig_T_87 |
                _controlsig_T_89 | _controlsig_T_91 | _controlsig_T_93 | _controlsig_T_95 |
                _controlsig_T_97 ? 3'h2 : _controlsig_T_99 | _controlsig_T_101 | _controlsig_T_103 |
                _controlsig_T_105 ? 3'h1 : _controlsig_T_107 | _controlsig_T_109 | _controlsig_T_111 |
                _controlsig_T_113 | _controlsig_T_115 | _controlsig_T_117 | _controlsig_T_119 |
                _controlsig_T_121 | _controlsig_T_123 | _controlsig_T_125 ? 3'h2 : _controlsig_T_127 ? 3'h0
                : _controlsig_T_129 | _controlsig_T_131 ? 3'h4 : _controlsig_T_133 ? 3'h0 :
                _controlsig_T_135 ? 3'h4 : {_controlsig_T_137, 2'h0};	// <stdin>:48:10, Lookup.scala:31:38, :34:39
  assign io_imm_type = _controlsig_T_1 ? 3'h0 : _GEN_6 ? 3'h1 : _controlsig_T_7 ? 3'h2 : _controlsig_T_9 |
                _controlsig_T_11 | _controlsig_T_13 | _controlsig_T_15 | _controlsig_T_17 |
                _controlsig_T_19 | _controlsig_T_264 | _controlsig_T_23 | _controlsig_T_25 |
                _controlsig_T_27 | _controlsig_T_29 | _controlsig_T_31 | _controlsig_T_33 |
                _controlsig_T_35 ? 3'h0 : _GEN_9 ? 3'h3 : _GEN_7 | _GEN_8 ? 3'h0 : 3'h5;	// <stdin>:48:10, Lookup.scala:31:38, :34:39
  assign io_alu_op = _controlsig_T_1 ? 6'h3F : _GEN_10 ? 6'h0 : _controlsig_T_11 ? 6'h2 : _controlsig_T_13 ?
                6'h3 : _controlsig_T_15 ? 6'h4 : _controlsig_T_17 ? 6'h5 : _controlsig_T_19 ? 6'h6 :
                _controlsig_T_264 ? 6'h7 : _controlsig_T_23 | _controlsig_T_25 | _controlsig_T_27 |
                _controlsig_T_29 | _controlsig_T_31 | _controlsig_T_33 | _controlsig_T_35 |
                _controlsig_T_37 | _controlsig_T_39 | _controlsig_T_41 | _controlsig_T_43 |
                _controlsig_T_45 ? 6'h0 : _controlsig_T_47 ? 6'h4 : _controlsig_T_49 ? 6'h6 :
                _controlsig_T_51 ? 6'h8 : _controlsig_T_53 ? 6'h9 : _controlsig_T_55 ? 6'h10 :
                _controlsig_T_57 ? 6'hD : _controlsig_T_59 ? 6'hE : _controlsig_T_61 ? 6'hF :
                _controlsig_T_63 ? 6'h0 : _controlsig_T_65 ? 6'h1 : _controlsig_T_67 ? 6'hA :
                _controlsig_T_69 ? 6'h4 : _controlsig_T_71 ? 6'h6 : _controlsig_T_73 ? 6'h8 :
                _controlsig_T_75 ? 6'hB : _controlsig_T_77 ? 6'hC : _controlsig_T_79 ? 6'h9 :
                _controlsig_T_81 ? 6'h10 : _controlsig_T_83 ? 6'h12 : _controlsig_T_85 ? 6'h13 :
                _controlsig_T_87 ? 6'h14 : _controlsig_T_89 ? 6'h15 : _controlsig_T_91 ? 6'h16 :
                _controlsig_T_93 ? 6'h17 : _controlsig_T_95 ? 6'h18 : _controlsig_T_97 ? 6'h19 :
                _controlsig_T_99 ? 6'h1A : _controlsig_T_101 ? 6'h1B : _controlsig_T_103 ? 6'h1C :
                _controlsig_T_105 ? 6'h1D : _controlsig_T_107 ? 6'h1E : _controlsig_T_109 ? 6'h1F :
                _controlsig_T_111 ? 6'h20 : _controlsig_T_113 ? 6'h21 : _controlsig_T_115 ? 6'h22 :
                _controlsig_T_117 ? 6'h23 : _controlsig_T_119 ? 6'h24 : _controlsig_T_121 ? 6'h25 :
                _controlsig_T_123 ? 6'h26 : _controlsig_T_125 ? 6'h27 : _controlsig_T_127 ? 6'h0 :
                _controlsig_T_129 ? 6'h9 : _controlsig_T_131 ? 6'h28 : _controlsig_T_133 ? 6'h0 :
                _controlsig_T_135 ? 6'h9 : _controlsig_T_137 ? 6'h28 : 6'h3F;	// <stdin>:48:10, Lookup.scala:31:38, :34:39
  assign io_wb_type = _controlsig_T_1 ? 2'h0 : _GEN_10 ? 2'h1 : _GEN_5 ? 2'h0 : _controlsig_T_23 |
                _controlsig_T_25 | _controlsig_T_27 | _controlsig_T_29 | _controlsig_T_31 |
                _controlsig_T_33 | _controlsig_T_35 ? 2'h2 : _GEN_9 ? 2'h0 : _GEN_11 | _GEN_12 ? 2'h1 :
                _controlsig_T_127 | _controlsig_T_129 | _controlsig_T_131 | _controlsig_T_133 |
                _controlsig_T_135 ? 2'h3 : _controlsig_T_750;	// <stdin>:48:10, Lookup.scala:31:38, :34:39
  assign io_sd_type = _controlsig_T_1 | _controlsig_T_3 | _controlsig_T_5 | _controlsig_T_7 | _controlsig_T_9 |
                _controlsig_T_11 | _controlsig_T_13 | _controlsig_T_15 | _controlsig_T_17 |
                _controlsig_T_19 | _controlsig_T_264 | _controlsig_T_23 | _controlsig_T_25 |
                _controlsig_T_27 | _controlsig_T_29 | _controlsig_T_31 | _controlsig_T_33 |
                _controlsig_T_35 ? 3'h0 : _controlsig_T_37 ? 3'h1 : _controlsig_T_39 ? 3'h2 :
                _controlsig_T_41 ? 3'h3 : {_controlsig_T_43, 2'h0};	// <stdin>:48:10, Lookup.scala:31:38, :34:39
  assign io_ld_type = _controlsig_T_1 | _controlsig_T_3 | _controlsig_T_5 | _controlsig_T_7 | _controlsig_T_9 |
                _controlsig_T_11 | _controlsig_T_13 | _controlsig_T_15 | _controlsig_T_17 |
                _controlsig_T_19 | _controlsig_T_264 ? 3'h0 : _controlsig_T_23 ? 3'h1 : _controlsig_T_25 ?
                3'h2 : _controlsig_T_27 ? 3'h3 : _controlsig_T_29 ? 3'h5 : _controlsig_T_31 ? 3'h6 :
                _controlsig_T_33 ? 3'h7 : {_controlsig_T_35, 2'h0};	// <stdin>:48:10, Lookup.scala:31:38, :34:39
  assign io_csr_type = _GEN_13 | _GEN_14 ? 2'h0 : _controlsig_T_127 ? 2'h1 : _controlsig_T_129 ? 2'h2 :
                _controlsig_T_131 ? 2'h3 : _controlsig_T_133 ? 2'h1 : _controlsig_T_135 ? 2'h2 :
                _controlsig_T_750;	// <stdin>:48:10, Lookup.scala:31:38, :34:39
endmodule

module Eximm(	// <stdin>:892:10
  input  [31:0] io_inst,
  input  [2:0]  io_imm_type,
  output [63:0] io_eximm);

  wire [7:0][63:0] _GEN = {{64'h0}, {64'h0}, {{59'h0, io_inst[19:15]}}, {{{52{io_inst[31]}}, io_inst[7],
                io_inst[30:25], io_inst[11:8], 1'h0}}, {{{52{io_inst[31]}}, io_inst[31:25],
                io_inst[11:7]}}, {{{44{io_inst[31]}}, io_inst[19:12], io_inst[20], io_inst[30:21], 1'h0}},
                {{{32{io_inst[31]}}, io_inst[31:12], 12'h0}}, {{{52{io_inst[31]}}, io_inst[31:20]}}};	// Bitwise.scala:77:12, Cat.scala:33:92, Eximm.scala:30:{42,56}, :31:56, :32:{56,72,85}, :33:{56,72}, :34:{69,81,97}, :35:29, Mux.scala:81:{58,61}
  assign io_eximm = _GEN[io_imm_type];	// <stdin>:892:10, Mux.scala:81:{58,61}
endmodule

module Decode(	// <stdin>:953:10
  input         clock,
                reset,
                io_inst_valid,
  input  [63:0] io_inst_bits_data,
  input  [31:0] io_fdio_pc,
  input  [63:0] io_rfio_reg1_rdata,
                io_rfio_reg2_rdata,
  input         io_branch,
                io_stall,
                io_flush,
                io_fwde_fw_sel1,
                io_fwde_fw_sel2,
  input  [63:0] io_fwde_fw_data1,
                io_fwde_fw_data2,
  input         io_fwde_csr_fw_sel,
  input  [63:0] io_fwde_csr_fw_data,
                io_csrs_csr_rdata,
  output [4:0]  io_rfio_reg1_raddr,
                io_rfio_reg2_raddr,
  output [63:0] io_deio_op_a,
                io_deio_op_b,
  output [4:0]  io_deio_reg_waddr,
  output        io_deio_branch_type,
  output [63:0] io_deio_branch_addr,
  output [5:0]  io_deio_alu_op,
                io_deio_shamt,
  output [1:0]  io_deio_wb_type,
  output [2:0]  io_deio_sd_type,
  output [63:0] io_deio_reg2_rdata,
  output [2:0]  io_deio_ld_type,
  output [63:0] io_deio_csr_t,
  output [11:0] io_deio_csr_waddr,
  output        io_deio_csr_wen,
                io_deio_has_inst,
                io_jump_flag,
  output [31:0] io_jump_pc,
  output        io_load_use,
  output [4:0]  io_fwde_reg1_raddr,
                io_fwde_reg2_raddr,
  output [11:0] io_fwde_csr_raddr,
                io_csrs_csr_raddr);

  wire [63:0] _eximm_io_eximm;	// Decode.scala:55:23
  wire [1:0]  _cu_io_jump_type;	// Decode.scala:54:20
  wire [1:0]  _cu_io_opa_type;	// Decode.scala:54:20
  wire [2:0]  _cu_io_opb_type;	// Decode.scala:54:20
  wire [2:0]  _cu_io_imm_type;	// Decode.scala:54:20
  wire [2:0]  _cu_io_sd_type;	// Decode.scala:54:20
  wire [2:0]  _cu_io_ld_type;	// Decode.scala:54:20
  wire [1:0]  _cu_io_csr_type;	// Decode.scala:54:20
  wire [31:0] inst;	// Decode.scala:44:20
  assign inst = io_inst_valid ? (io_fdio_pc[2] ? io_inst_bits_data[63:32] : io_inst_bits_data[31:0]) :
                32'h13;	// Decode.scala:63:{10,16}, :64:{12,23}, :65:30, :66:30
  reg  [4:0]  lu_rd;	// Decode.scala:78:24
  wire        _io_deio_op_a_T_3 = _cu_io_opa_type == 2'h2;	// Decode.scala:54:20, :86:34
  wire        _load_use_T_12 = inst[19:15] == lu_rd;	// Decode.scala:69:20, :70:16, :78:24, :86:64
  wire        _io_deio_op_b_T_6 = _cu_io_opb_type == 3'h2;	// Decode.scala:54:20, :86:95
  wire        _load_use_T_8 = inst[24:20] == lu_rd;	// Decode.scala:69:20, :71:16, :78:24, :86:125
  wire        _io_jump_pc_T_3 = _cu_io_jump_type == 2'h2;	// Decode.scala:54:20, :86:34, :87:65
  wire        _load_use_T_16 = (_io_deio_op_a_T_3 & _load_use_T_12 | _io_deio_op_b_T_6 & _load_use_T_8 | (|_cu_io_sd_type)
                & _load_use_T_8 | _io_jump_pc_T_3 & _load_use_T_12) & (|lu_rd);	// Decode.scala:54:20, :78:24, :86:{34,57,64,95,118,125}, :87:{20,24,44,65,91}, :88:{7,17}
  wire [63:0] _io_jump_pc_T_4 = io_fwde_fw_sel1 ? io_fwde_fw_data1 : io_rfio_reg1_rdata;	// Decode.scala:107:38
  wire [63:0] _io_deio_reg2_rdata_T = io_fwde_fw_sel2 ? io_fwde_fw_data2 : io_rfio_reg2_rdata;	// Decode.scala:117:38
  wire [63:0] _io_deio_csr_t_T = io_fwde_csr_fw_sel ? io_fwde_csr_fw_data : io_csrs_csr_rdata;	// Decode.scala:119:37
  wire        _io_jump_pc_T = _cu_io_jump_type == 2'h1;	// Decode.scala:54:20, :139:38, Mux.scala:81:61
  wire [31:0] _GEN = _io_jump_pc_T_4[31:0] + _eximm_io_eximm[31:0];	// Decode.scala:55:23, :107:38, :144:121
  always @(posedge clock) begin
    if (reset)
      lu_rd <= 5'h0;	// Decode.scala:78:24
    else if (io_branch)
      lu_rd <= 5'h0;	// Decode.scala:78:24
    else if (io_stall) begin
    end
    else if (_load_use_T_16 | _cu_io_ld_type == 3'h0)	// Decode.scala:54:20, :83:17, :84:32, :88:7
      lu_rd <= 5'h0;	// Decode.scala:78:24
    else	// Decode.scala:54:20, :83:17, :84:32, :88:7
      lu_rd <= inst[11:7];	// Decode.scala:69:20, :72:15, :78:24
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:953:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:953:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:953:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:953:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:953:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:953:10
        `INIT_RANDOM_PROLOG_	// <stdin>:953:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:953:10
        _RANDOM_0 = `RANDOM;	// <stdin>:953:10
        lu_rd = _RANDOM_0[4:0];	// Decode.scala:78:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:953:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:953:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  ControlUnit cu (	// Decode.scala:54:20
    .io_inst        (inst),	// Decode.scala:69:20
    .io_jump_type   (_cu_io_jump_type),
    .io_branch_type (io_deio_branch_type),
    .io_opa_type    (_cu_io_opa_type),
    .io_opb_type    (_cu_io_opb_type),
    .io_imm_type    (_cu_io_imm_type),
    .io_alu_op      (io_deio_alu_op),
    .io_wb_type     (io_deio_wb_type),
    .io_sd_type     (_cu_io_sd_type),
    .io_ld_type     (_cu_io_ld_type),
    .io_csr_type    (_cu_io_csr_type)
  );
  Eximm eximm (	// Decode.scala:55:23
    .io_inst     (inst),	// Decode.scala:69:20
    .io_imm_type (_cu_io_imm_type),	// Decode.scala:54:20
    .io_eximm    (_eximm_io_eximm)
  );
  assign io_rfio_reg1_raddr = inst[19:15];	// <stdin>:953:10, Decode.scala:69:20, :70:16
  assign io_rfio_reg2_raddr = inst[24:20];	// <stdin>:953:10, Decode.scala:69:20, :71:16
  assign io_deio_op_a = (&_cu_io_opa_type) ? _eximm_io_eximm : _io_deio_op_a_T_3 ? _io_jump_pc_T_4 : {32'h0,
                _cu_io_opa_type == 2'h1 ? io_fdio_pc : 32'h0};	// <stdin>:953:10, Decode.scala:54:20, :55:23, :86:34, :107:38, Mux.scala:81:{58,61}
  assign io_deio_op_b = _cu_io_opb_type == 3'h4 ? _io_deio_csr_t_T : _cu_io_opb_type == 3'h3 ? 64'h4 :
                _io_deio_op_b_T_6 ? _io_deio_reg2_rdata_T : _cu_io_opb_type == 3'h1 ? _eximm_io_eximm :
                64'h0;	// <stdin>:953:10, Decode.scala:54:20, :55:23, :86:95, :117:38, :119:37, Mux.scala:81:{58,61}
  assign io_deio_reg_waddr = inst[11:7];	// <stdin>:953:10, Decode.scala:69:20, :72:15
  assign io_deio_branch_addr = {32'h0, io_fdio_pc} + {{52{inst[31]}}, inst[7], inst[30:25], inst[11:8], 1'h0};	// <stdin>:953:10, Cat.scala:33:92, Decode.scala:69:20, :84:17, :125:{39,58,79,88,101}, Mux.scala:81:58
  assign io_deio_shamt = inst[25:20];	// <stdin>:953:10, Decode.scala:69:20, :73:18
  assign io_deio_sd_type = _cu_io_sd_type;	// <stdin>:953:10, Decode.scala:54:20
  assign io_deio_reg2_rdata = _io_deio_reg2_rdata_T;	// <stdin>:953:10, Decode.scala:117:38
  assign io_deio_ld_type = _cu_io_ld_type;	// <stdin>:953:10, Decode.scala:54:20
  assign io_deio_csr_t = _io_deio_csr_t_T;	// <stdin>:953:10, Decode.scala:119:37
  assign io_deio_csr_waddr = (|_cu_io_csr_type) ? inst[31:20] : 12'h0;	// <stdin>:953:10, Decode.scala:54:20, :69:20, :133:{29,45}
  assign io_deio_csr_wen = |_cu_io_csr_type;	// <stdin>:953:10, Decode.scala:54:20, :133:45
  assign io_deio_has_inst = ~(inst == 32'h13 | io_flush);	// <stdin>:953:10, Decode.scala:63:16, :69:20, :136:{28,35,43}
  assign io_jump_flag = _io_jump_pc_T | _io_jump_pc_T_3;	// <stdin>:953:10, Decode.scala:87:65, :139:{38,63}
  assign io_jump_pc = _io_jump_pc_T ? io_fdio_pc + _eximm_io_eximm[31:0] : _io_jump_pc_T_3 ? {_GEN[31:1], 1'h0} :
                32'h80000000;	// <stdin>:953:10, Decode.scala:55:23, :84:17, :87:65, :139:38, :143:71, :144:{121,139}, Mux.scala:101:16
  assign io_load_use = _load_use_T_16;	// <stdin>:953:10, Decode.scala:88:7
  assign io_fwde_reg1_raddr = inst[19:15];	// <stdin>:953:10, Decode.scala:69:20, :70:16
  assign io_fwde_reg2_raddr = inst[24:20];	// <stdin>:953:10, Decode.scala:69:20, :71:16
  assign io_fwde_csr_raddr = inst[31:20];	// <stdin>:953:10, Decode.scala:69:20
  assign io_csrs_csr_raddr = inst[31:20];	// <stdin>:953:10, Decode.scala:69:20
endmodule

module BoothMul(	// <stdin>:1096:10
  input         clock,
                reset,
                io_mul_valid,
                io_mulw,
  input  [1:0]  io_mul_signed,
  input  [63:0] io_multiplicand,
                io_multiplier,
  output        io_out_valid,
  output [63:0] io_result_hi,
                io_result_lo);

  reg         out_valid;	// BoothMul.scala:30:28
  reg [63:0]  result_hi;	// BoothMul.scala:31:28
  reg [63:0]  result_lo;	// BoothMul.scala:32:28
  reg [66:0]  multiplierReg;	// BoothMul.scala:43:32
  reg [131:0] multiplicandReg;	// BoothMul.scala:44:34
  reg [131:0] resultReg;	// BoothMul.scala:45:28
  reg         state;	// BoothMul.scala:47:24
  reg [5:0]   shiftCounter;	// BoothMul.scala:52:31
  reg [5:0]   total;	// BoothMul.scala:53:24
  always @(posedge clock) begin
    if (reset) begin
      out_valid <= 1'h0;	// BoothMul.scala:29:28, :30:28
      result_hi <= 64'h0;	// BoothMul.scala:31:28
      result_lo <= 64'h0;	// BoothMul.scala:31:28, :32:28
      multiplierReg <= 67'h0;	// BoothMul.scala:43:32
      multiplicandReg <= 132'h0;	// BoothMul.scala:44:34
      resultReg <= 132'h0;	// BoothMul.scala:44:34, :45:28
      state <= 1'h0;	// BoothMul.scala:29:28, :47:24
      shiftCounter <= 6'h0;	// BoothMul.scala:52:31
      total <= 6'h0;	// BoothMul.scala:52:31, :53:24
    end
    else begin
      automatic logic _T_4;	// BoothMul.scala:114:31
      automatic logic _GEN;	// BoothMul.scala:30:28, :55:18, :114:41
      _T_4 = shiftCounter == total;	// BoothMul.scala:52:31, :53:24, :114:31
      _GEN = state & _T_4;	// BoothMul.scala:30:28, :47:24, :55:18, :114:{31,41}
      out_valid <= state & (_GEN | out_valid);	// BoothMul.scala:30:28, :47:24, :55:18, :57:23, :114:41
      if (state) begin	// BoothMul.scala:47:24
        automatic logic _GEN_0;	// BoothMul.scala:45:28, :55:18, :114:41
        _GEN_0 = ~state | _T_4;	// BoothMul.scala:45:28, :47:24, :55:18, :114:{31,41}
        if (_GEN) begin	// BoothMul.scala:30:28, :55:18, :114:41
          result_hi <= resultReg[127:64];	// BoothMul.scala:31:28, :45:28, :117:39
          result_lo <= resultReg[63:0];	// BoothMul.scala:32:28, :45:28, :118:39
        end
        if (_GEN_0) begin	// BoothMul.scala:45:28, :55:18, :114:41
        end
        else begin	// BoothMul.scala:45:28, :55:18, :114:41
          automatic logic [132:0]      _GEN_1;	// Mux.scala:81:58
          automatic logic [132:0]      _GEN_2;	// Mux.scala:81:58
          automatic logic [7:0][132:0] _GEN_3;	// Mux.scala:81:{58,61}
          _GEN_1 = {1'h0, multiplierReg[2:0] == 3'h2 | multiplierReg[2:0] == 3'h1 ? multiplicandReg : 132'h0};	// BoothMul.scala:29:28, :43:32, :44:34, :121:65, Mux.scala:81:{58,61}
          _GEN_2 = {1'h0, 132'h0 - multiplicandReg};	// BoothMul.scala:29:28, :44:34, :128:38, Mux.scala:81:58
          multiplierReg <= {2'h0, multiplierReg[66:2]};	// BoothMul.scala:43:32, :135:48, Cat.scala:33:92
          multiplicandReg <= {multiplicandReg[129:0], 2'h0};	// BoothMul.scala:44:34, :134:33, Cat.scala:33:92
          _GEN_3 = {{133'h0}, {_GEN_2}, {_GEN_2}, {133'h0 - {multiplicandReg, 1'h0}}, {{multiplicandReg,
                                                                                1'h0}}, {_GEN_1}, {_GEN_1}, {_GEN_1}};	// BoothMul.scala:29:28, :44:34, :126:54, :127:38, Mux.scala:81:{58,61}
          resultReg <= resultReg + _GEN_3[multiplierReg[2:0]][131:0];	// BoothMul.scala:43:32, :45:28, :121:{40,65}, Mux.scala:81:{58,61}
        end
        state <= (~state | ~_T_4) & state;	// BoothMul.scala:47:24, :55:18, :114:{31,41}, :115:23
        if (_GEN_0) begin	// BoothMul.scala:45:28, :55:18, :114:41
        end
        else	// BoothMul.scala:45:28, :55:18, :114:41
          shiftCounter <= shiftCounter + 6'h1;	// BoothMul.scala:52:31, :137:46
      end
      else begin	// BoothMul.scala:47:24
        automatic logic [2:0] _choose_T;	// Cat.scala:33:92
        automatic logic       _T_2;	// BoothMul.scala:64:31
        _choose_T = {io_mulw, io_mul_signed};	// Cat.scala:33:92
        _T_2 = io_mul_valid & ~out_valid;	// BoothMul.scala:30:28, :64:{31,34}
        result_hi <= 64'h0;	// BoothMul.scala:31:28
        result_lo <= 64'h0;	// BoothMul.scala:31:28, :32:28
        if (_T_2) begin	// BoothMul.scala:64:31
          automatic logic [7:0][66:0]  _GEN_4 = {{{32'h0, {2{io_multiplier[31]}}, io_multiplier[31:0], 1'h0}}, {{34'h0,
                                                                                io_multiplier[31:0], 1'h0}}, {67'h0}, {{34'h0, io_multiplier[31:0], 1'h0}},
                                                                                {{{2{io_multiplier[63]}}, io_multiplier, 1'h0}}, {{2'h0, io_multiplier, 1'h0}}, {67'h0},
                                                                                {{2'h0, io_multiplier, 1'h0}}};	// Bitwise.scala:77:12, BoothMul.scala:29:28, :43:32, :85:62, :87:65, :89:74, Cat.scala:33:92, Mux.scala:81:{58,61}
          automatic logic [7:0][131:0] _GEN_5 = {{{{100{io_multiplicand[31]}}, io_multiplicand[31:0]}}, {{{100{io_multiplicand[31]}},
                                                                                io_multiplicand[31:0]}}, {132'h0}, {{100'h0, io_multiplicand[31:0]}},
                                                                                {{{68{io_multiplicand[63]}}, io_multiplicand}}, {{{68{io_multiplicand[63]}},
                                                                                io_multiplicand}}, {132'h0}, {{68'h0, io_multiplicand}}};	// Bitwise.scala:77:12, BoothMul.scala:44:34, :97:65, :100:68, :101:66, Cat.scala:33:92, Mux.scala:81:{58,61}
          multiplierReg <= _GEN_4[_choose_T];	// BoothMul.scala:43:32, Cat.scala:33:92, Mux.scala:81:{58,61}
          multiplicandReg <= _GEN_5[_choose_T];	// BoothMul.scala:44:34, Cat.scala:33:92, Mux.scala:81:{58,61}
          resultReg <= 132'h0;	// BoothMul.scala:44:34, :45:28
        end
        state <= _T_2 | state;	// BoothMul.scala:47:24, :64:{31,45}, :65:23
        shiftCounter <= 6'h0;	// BoothMul.scala:52:31
        if (_T_2) begin	// BoothMul.scala:64:31
          automatic logic [7:0][5:0] _GEN_6 = {{6'h10}, {6'h11}, {6'h0}, {6'h11}, {6'h20}, {6'h21}, {6'h0}, {6'h21}};	// BoothMul.scala:52:31, Mux.scala:81:{58,61}
          total <= _GEN_6[_choose_T];	// BoothMul.scala:53:24, Cat.scala:33:92, Mux.scala:81:{58,61}
        end
        else	// BoothMul.scala:64:31
          total <= 6'h0;	// BoothMul.scala:52:31, :53:24
      end
    end
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:1096:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:1096:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:1096:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_6;	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_7;	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_8;	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_9;	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_10;	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_11;	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_12;	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_13;	// <stdin>:1096:10
      automatic logic [31:0] _RANDOM_14;	// <stdin>:1096:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:1096:10
        `INIT_RANDOM_PROLOG_	// <stdin>:1096:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:1096:10
        _RANDOM_0 = `RANDOM;	// <stdin>:1096:10
        _RANDOM_1 = `RANDOM;	// <stdin>:1096:10
        _RANDOM_2 = `RANDOM;	// <stdin>:1096:10
        _RANDOM_3 = `RANDOM;	// <stdin>:1096:10
        _RANDOM_4 = `RANDOM;	// <stdin>:1096:10
        _RANDOM_5 = `RANDOM;	// <stdin>:1096:10
        _RANDOM_6 = `RANDOM;	// <stdin>:1096:10
        _RANDOM_7 = `RANDOM;	// <stdin>:1096:10
        _RANDOM_8 = `RANDOM;	// <stdin>:1096:10
        _RANDOM_9 = `RANDOM;	// <stdin>:1096:10
        _RANDOM_10 = `RANDOM;	// <stdin>:1096:10
        _RANDOM_11 = `RANDOM;	// <stdin>:1096:10
        _RANDOM_12 = `RANDOM;	// <stdin>:1096:10
        _RANDOM_13 = `RANDOM;	// <stdin>:1096:10
        _RANDOM_14 = `RANDOM;	// <stdin>:1096:10
        out_valid = _RANDOM_0[1];	// BoothMul.scala:30:28
        result_hi = {_RANDOM_0[31:2], _RANDOM_1, _RANDOM_2[1:0]};	// BoothMul.scala:30:28, :31:28
        result_lo = {_RANDOM_2[31:2], _RANDOM_3, _RANDOM_4[1:0]};	// BoothMul.scala:31:28, :32:28
        multiplierReg = {_RANDOM_4[31:2], _RANDOM_5, _RANDOM_6[4:0]};	// BoothMul.scala:32:28, :43:32
        multiplicandReg = {_RANDOM_6[31:5], _RANDOM_7, _RANDOM_8, _RANDOM_9, _RANDOM_10[8:0]};	// BoothMul.scala:43:32, :44:34
        resultReg = {_RANDOM_10[31:9], _RANDOM_11, _RANDOM_12, _RANDOM_13, _RANDOM_14[12:0]};	// BoothMul.scala:44:34, :45:28
        state = _RANDOM_14[13];	// BoothMul.scala:45:28, :47:24
        shiftCounter = _RANDOM_14[19:14];	// BoothMul.scala:45:28, :52:31
        total = _RANDOM_14[25:20];	// BoothMul.scala:45:28, :53:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:1096:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:1096:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_out_valid = out_valid;	// <stdin>:1096:10, BoothMul.scala:30:28
  assign io_result_hi = result_hi;	// <stdin>:1096:10, BoothMul.scala:31:28
  assign io_result_lo = result_lo;	// <stdin>:1096:10, BoothMul.scala:32:28
endmodule

module Divider(	// <stdin>:1271:10
  input         clock,
                reset,
                io_div_valid,
                io_divw,
                io_div_signed,
  input  [63:0] io_dividend,
                io_divisor,
  output        io_out_valid,
  output [63:0] io_quotient);

  reg          out_valid;	// Divider.scala:33:28
  reg  [63:0]  quotient;	// Divider.scala:34:27
  reg  [127:0] partial_remainder;	// Divider.scala:43:36
  reg  [64:0]  sub65;	// Divider.scala:44:24
  reg  [32:0]  sub33;	// Divider.scala:45:24
  reg          sign_quo;	// Divider.scala:49:27
  reg          sign_rem;	// Divider.scala:50:27
  reg  [1:0]   state;	// Divider.scala:52:24
  reg  [6:0]   shiftCounter;	// Divider.scala:57:31
  wire [33:0]  temp_34;	// <stdin>:1312:5
  wire [65:0]  temp_66;	// <stdin>:1314:5
  wire         _T = state == 2'h0;	// Divider.scala:52:24, :68:18
  wire         _T_3 = state == 2'h1;	// Divider.scala:52:24, :68:18, :79:29
  wire         _T_4 = shiftCounter == 7'h20;	// Divider.scala:57:31, :161:31
  assign temp_34 = _T | ~_T_3 | _T_4 ? 34'h0 : {1'h0, partial_remainder[127:95]} + {1'h0, sub33};	// <stdin>:1313:{13,16}, Divider.scala:32:28, :43:36, :45:24, :68:18, :161:{31,40}, :174:{59,70}
  wire         _T_9 = state == 2'h2;	// Divider.scala:52:24, :68:18, :79:29
  wire         _T_10 = shiftCounter == 7'h40;	// Divider.scala:57:31, :188:31
  assign temp_66 = _T | _T_3 | ~_T_9 | _T_10 ? 66'h0 : {1'h0, partial_remainder[127:63]} + {1'h0, sub65};	// <stdin>:1315:{13,16}, Divider.scala:32:28, :43:36, :44:24, :68:18, :188:{31,40}, :199:{59,70}
  always @(posedge clock) begin
    if (reset) begin
      out_valid <= 1'h0;	// Divider.scala:32:28, :33:28
      quotient <= 64'h0;	// Divider.scala:34:27
      partial_remainder <= 128'h0;	// Divider.scala:43:36
      sub65 <= 65'h0;	// Divider.scala:44:24
      sub33 <= 33'h0;	// Divider.scala:45:24
      sign_quo <= 1'h0;	// Divider.scala:32:28, :49:27
      sign_rem <= 1'h0;	// Divider.scala:32:28, :50:27
      state <= 2'h0;	// Divider.scala:52:24
      shiftCounter <= 7'h0;	// Divider.scala:57:31
    end
    else begin
      automatic logic [1:0]       _choose_T;	// Cat.scala:33:92
      automatic logic             _T_2;	// Divider.scala:76:31
      automatic logic             _divisor_T_13;	// Mux.scala:81:61
      automatic logic             _divisor_T_15;	// Mux.scala:81:61
      automatic logic             _GEN;	// <stdin>:1297:14, Divider.scala:68:18, :76:45
      automatic logic             _T_7;	// Divider.scala:166:32
      automatic logic             _T_13;	// Divider.scala:191:32
      automatic logic [3:0][63:0] _GEN_0;	// Divider.scala:68:18, :71:22, :161:40, :188:40
      automatic logic [3:0][1:0]  _GEN_1;	// Divider.scala:52:24, :68:18, :76:45, :161:40, :188:40, :212:19
      _choose_T = {io_divw, io_div_signed};	// Cat.scala:33:92
      _T_2 = io_div_valid & ~out_valid;	// Divider.scala:33:28, :76:{31,34}
      _divisor_T_13 = _choose_T == 2'h1;	// Cat.scala:33:92, Divider.scala:79:29, Mux.scala:81:61
      _divisor_T_15 = _choose_T == 2'h2;	// Cat.scala:33:92, Divider.scala:79:29, Mux.scala:81:61
      _GEN = _T & _T_2;	// <stdin>:1297:14, Divider.scala:68:18, :76:{31,45}
      _T_7 = ~sign_quo & ~sign_rem;	// Divider.scala:49:27, :50:27, :166:{22,32,35}
      _T_13 = ~sign_quo & ~sign_rem;	// Divider.scala:49:27, :50:27, :191:{22,32,35}
      out_valid <= ~_T & (_T_3 ? _T_4 & _T_7 | out_valid : _T_9 ? _T_10 & _T_13 | out_valid : (&state) |
                                                out_valid);	// Divider.scala:33:28, :52:24, :68:18, :70:23, :161:{31,40}, :166:{32,45}, :188:{31,40}, :191:{32,45}, :213:23
      _GEN_0 = {{(&state) & sign_quo ? ~quotient + 64'h1 : quotient}, {_T_10 ? quotient : temp_66[65] ?
                                                {quotient[62:0], 1'h1} : {quotient[62:0], 1'h0}}, {_T_4 ? {{32{quotient[31]}},
                                                quotient[31:0]} : temp_34[33] ? {quotient[62:0], 1'h1} : {quotient[62:0], 1'h0}}, {64'h0}};	// Cat.scala:33:92, Divider.scala:32:28, :34:27, :49:27, :52:24, :68:18, :71:22, :73:23, :86:70, :161:{31,40}, :163:{26,37}, :175:{29,34}, :177:{30,45}, :180:{30,45}, :188:{31,40}, :200:{29,34}, :202:{30,45}, :205:{30,45}, :215:27, :216:{29,39}
      quotient <= _GEN_0[state];	// Divider.scala:34:27, :52:24, :68:18, :71:22, :161:40, :188:40
      if (_T) begin	// Divider.scala:68:18
        if (_T_2) begin	// Divider.scala:76:31
          automatic logic [63:0] _GEN_2;	// <stdin>:1297:14, Divider.scala:68:18, :76:45
          _GEN_2 = _GEN ? ((&_choose_T) ? {32'h0, io_dividend[31] ? ~(io_dividend[31:0]) + 32'h1 :
                                                                                io_dividend[31:0]} : _divisor_T_15 ? {32'h0, io_dividend[31:0]} : _divisor_T_13 &
                                                                                io_dividend[63] ? ~io_dividend + 64'h1 : io_dividend) : 64'h0;	// <stdin>:1297:14, Cat.scala:33:92, Divider.scala:34:27, :68:18, :76:45, :86:{51,57,70}, :88:47, :90:{39,51,57,76}, Mux.scala:81:{58,61}
          if (io_divw)
            partial_remainder <= {32'h0, _GEN_2[31:0], 64'h0};	// <stdin>:1297:14, Cat.scala:33:92, Divider.scala:34:27, :43:36, :68:18, :76:45, :95:44
          else
            partial_remainder <= {64'h0, _GEN_2};	// <stdin>:1297:14, Cat.scala:33:92, Divider.scala:34:27, :43:36, :68:18, :76:45
        end
        shiftCounter <= 7'h0;	// Divider.scala:57:31
      end
      else if (_T_3) begin	// Divider.scala:68:18
        if (~_T_4) begin	// Divider.scala:161:31
          partial_remainder <= {temp_34[33] ? {temp_34[31:0], partial_remainder[94:0]} : partial_remainder[126:0], 1'h0};	// Cat.scala:33:92, Divider.scala:32:28, :43:36, :175:{29,34}, :176:{39,53,78}, :179:{39,63}
          shiftCounter <= shiftCounter + 7'h1;	// Divider.scala:57:31, :183:46
        end
      end
      else if (~_T_9 | _T_10) begin	// <stdin>:1315:13, Divider.scala:43:36, :68:18, :188:{31,40}
      end
      else begin	// <stdin>:1315:13, Divider.scala:43:36, :68:18, :188:{31,40}
        partial_remainder <= {temp_66[65] ? {temp_66[63:0], partial_remainder[62:0]} : partial_remainder[126:0], 1'h0};	// Cat.scala:33:92, Divider.scala:32:28, :43:36, :200:{29,34}, :201:{39,53,78}, :204:{39,63}
        shiftCounter <= shiftCounter + 7'h1;	// Divider.scala:57:31, :183:46, :208:46
      end
      if (_GEN) begin	// <stdin>:1297:14, Divider.scala:68:18, :76:45
        automatic logic [63:0] _GEN_3;	// <stdin>:1299:13, Divider.scala:68:18, :76:45
        automatic logic [1:0]  _sign_quo_T_2 = {io_dividend[31], io_divisor[31]};	// Cat.scala:33:92, Divider.scala:90:51, :108:50
        automatic logic [1:0]  _sign_quo_T_11 = {io_dividend[63], io_divisor[63]};	// Cat.scala:33:92, Divider.scala:86:51, :104:50
        automatic logic [1:0]  _sign_rem_T_2 = {io_dividend[31], io_divisor[31]};	// Cat.scala:33:92, Divider.scala:90:51, :108:50
        automatic logic [1:0]  _sign_rem_T_11 = {io_dividend[63], io_divisor[63]};	// Cat.scala:33:92, Divider.scala:86:51, :104:50
        _GEN_3 = _GEN ? ((&_choose_T) ? {32'h0, io_divisor[31] ? ~(io_divisor[31:0]) + 32'h1 :
                                                                io_divisor[31:0]} : _divisor_T_15 ? {32'h0, io_divisor[31:0]} : _divisor_T_13 &
                                                                io_divisor[63] ? ~io_divisor + 64'h1 : io_divisor) : 64'h0;	// <stdin>:1297:14, :1299:13, Cat.scala:33:92, Divider.scala:34:27, :68:18, :76:45, :86:70, :90:76, :104:{50,56,68}, :106:46, :108:{39,50,56,74}, Mux.scala:81:{58,61}
        sub65 <= {1'h1, ~_GEN_3} + 65'h1;	// <stdin>:1299:13, Divider.scala:44:24, :68:18, :73:23, :76:45, :86:70, :113:{26,50}
        sub33 <= {1'h1, ~(_GEN_3[31:0])} + 33'h1;	// <stdin>:1299:13, Divider.scala:45:24, :68:18, :73:23, :76:45, :112:{26,48,56}
        sign_quo <= io_div_signed & (io_divw ? _sign_quo_T_2 != 2'h3 & (_sign_quo_T_2 == 2'h2 | _sign_quo_T_2
                                                                == 2'h1) : _sign_quo_T_11 != 2'h3 & (_sign_quo_T_11 == 2'h2 | _sign_quo_T_11 == 2'h1));	// Cat.scala:33:92, Divider.scala:49:27, :79:29, :115:32, :116:24, Mux.scala:81:{58,61}
        sign_rem <= io_div_signed & (io_divw ? _sign_rem_T_2 != 2'h3 & _sign_rem_T_2 != 2'h2 : _sign_rem_T_11
                                                                != 2'h3 & _sign_rem_T_11 != 2'h2);	// Cat.scala:33:92, Divider.scala:50:27, :79:29, :137:32, :138:24, Mux.scala:81:{58,61}
      end
      _GEN_1 = {{2'h0}, {_T_10 ? (_T_13 ? 2'h0 : 2'h3) : state}, {_T_4 ? (_T_7 ? 2'h0 : 2'h3) : state},
                                                {_T_2 ? (io_divw ? 2'h1 : 2'h2) : state}};	// Divider.scala:52:24, :68:18, :76:{31,45}, :79:{23,29}, :161:{31,40}, :166:{32,45}, :167:27, :170:27, :188:{31,40}, :191:{32,45}, :192:27, :195:27, :212:19, Mux.scala:81:61
      state <= _GEN_1[state];	// Divider.scala:52:24, :68:18, :76:45, :161:40, :188:40, :212:19
    end
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:1271:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:1271:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:1271:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:1271:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:1271:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:1271:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:1271:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:1271:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:1271:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:1271:10
      automatic logic [31:0] _RANDOM_6;	// <stdin>:1271:10
      automatic logic [31:0] _RANDOM_7;	// <stdin>:1271:10
      automatic logic [31:0] _RANDOM_8;	// <stdin>:1271:10
      automatic logic [31:0] _RANDOM_9;	// <stdin>:1271:10
      automatic logic [31:0] _RANDOM_10;	// <stdin>:1271:10
      automatic logic [31:0] _RANDOM_11;	// <stdin>:1271:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:1271:10
        `INIT_RANDOM_PROLOG_	// <stdin>:1271:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:1271:10
        _RANDOM_0 = `RANDOM;	// <stdin>:1271:10
        _RANDOM_1 = `RANDOM;	// <stdin>:1271:10
        _RANDOM_2 = `RANDOM;	// <stdin>:1271:10
        _RANDOM_3 = `RANDOM;	// <stdin>:1271:10
        _RANDOM_4 = `RANDOM;	// <stdin>:1271:10
        _RANDOM_5 = `RANDOM;	// <stdin>:1271:10
        _RANDOM_6 = `RANDOM;	// <stdin>:1271:10
        _RANDOM_7 = `RANDOM;	// <stdin>:1271:10
        _RANDOM_8 = `RANDOM;	// <stdin>:1271:10
        _RANDOM_9 = `RANDOM;	// <stdin>:1271:10
        _RANDOM_10 = `RANDOM;	// <stdin>:1271:10
        _RANDOM_11 = `RANDOM;	// <stdin>:1271:10
        out_valid = _RANDOM_0[1];	// Divider.scala:33:28
        quotient = {_RANDOM_0[31:2], _RANDOM_1, _RANDOM_2[1:0]};	// Divider.scala:33:28, :34:27
        partial_remainder = {_RANDOM_4[31:2], _RANDOM_5, _RANDOM_6, _RANDOM_7, _RANDOM_8[1:0]};	// Divider.scala:43:36
        sub65 = {_RANDOM_8[31:2], _RANDOM_9, _RANDOM_10[2:0]};	// Divider.scala:43:36, :44:24
        sub33 = {_RANDOM_10[31:3], _RANDOM_11[3:0]};	// Divider.scala:44:24, :45:24
        sign_quo = _RANDOM_11[4];	// Divider.scala:45:24, :49:27
        sign_rem = _RANDOM_11[5];	// Divider.scala:45:24, :50:27
        state = _RANDOM_11[7:6];	// Divider.scala:45:24, :52:24
        shiftCounter = _RANDOM_11[14:8];	// Divider.scala:45:24, :57:31
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:1271:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:1271:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_out_valid = out_valid;	// <stdin>:1271:10, Divider.scala:33:28
  assign io_quotient = quotient;	// <stdin>:1271:10, Divider.scala:34:27
endmodule

module Alu(	// <stdin>:1541:10
  input         clock,
                reset,
  input  [63:0] io_op_a,
                io_op_b,
  input  [5:0]  io_alu_op,
                io_shamt,
  output [63:0] io_result,
  output        io_mul_div_outvalid);

  wire         _DIV_io_out_valid;	// Alu.scala:75:21
  wire [63:0]  _DIV_io_quotient;	// Alu.scala:75:21
  wire         _BM_io_out_valid;	// Alu.scala:74:20
  wire [63:0]  _BM_io_result_hi;	// Alu.scala:74:20
  wire [63:0]  _BM_io_result_lo;	// Alu.scala:74:20
  wire         _bm_value_T = io_alu_op == 6'h12;	// Alu.scala:101:20
  wire         _bm_value_T_4 = io_alu_op == 6'h13;	// Alu.scala:101:45
  wire         _bm_value_T_5 = io_alu_op == 6'h14;	// Alu.scala:101:71
  wire         _bm_value_T_7 = io_alu_op == 6'h15;	// Alu.scala:102:19
  wire         _bm_value_T_1 = io_alu_op == 6'h23;	// Alu.scala:102:46
  wire         _T_8 = _bm_value_T | _bm_value_T_4 | _bm_value_T_5 | _bm_value_T_7 | _bm_value_T_1;	// Alu.scala:101:{20,45,71}, :102:{19,34,46}
  wire         _DIV_io_div_signed_T = io_alu_op == 6'h16;	// Alu.scala:128:20
  wire         _DIV_io_div_signed_T_1 = io_alu_op == 6'h24;	// Alu.scala:128:71
  wire         _DIV_io_divw_T_1 = io_alu_op == 6'h25;	// Alu.scala:129:19
  wire         _T_15 = _DIV_io_div_signed_T | io_alu_op == 6'h17 | _DIV_io_div_signed_T_1 | _DIV_io_divw_T_1;	// Alu.scala:128:{20,45,71,85}, :129:19
  wire [126:0] _GEN = {63'h0, io_op_a};	// Alu.scala:158:41
  wire [126:0] _GEN_0 = {121'h0, io_op_b[5:0]};	// Alu.scala:158:{41,51}
  wire [63:0]  _GEN_1 = {58'h0, io_op_b[5:0]};	// Alu.scala:158:51, :159:41
  wire [63:0]  _res_T_34 = io_op_a >> _GEN_1;	// Alu.scala:159:41
  wire [63:0]  _res_T_38 = $signed($signed(io_op_a) >>> _GEN_1);	// Alu.scala:159:41, :160:48
  wire [126:0] _res_T_60 = _GEN << io_shamt;	// Alu.scala:158:41, :161:42
  wire [63:0]  _GEN_2 = {58'h0, io_shamt};	// Alu.scala:159:41, :162:42
  wire [63:0]  _res_T_47 = io_op_a & io_op_b;	// Alu.scala:164:41
  wire [63:0]  _res_T_100 = io_op_a % io_op_b;	// Alu.scala:167:42
  wire [31:0]  _res_T_58 = io_op_a[31:0] + io_op_b[31:0];	// Alu.scala:168:44
  wire [31:0]  _GEN_3 = {26'h0, io_shamt};	// Alu.scala:170:50
  wire [31:0]  _res_T_65 = io_op_a[31:0] >> _GEN_3;	// Alu.scala:170:{43,50}
  wire [31:0]  _res_T_69 = $signed($signed(io_op_a[31:0]) >>> _GEN_3);	// Alu.scala:170:{43,50}, :171:57
  wire [31:0]  _res_T_78 = io_op_a[31:0] - io_op_b[31:0];	// Alu.scala:168:44, :173:43
  wire [126:0] _res_T_81 = _GEN << _GEN_0;	// Alu.scala:158:41, :174:43
  wire [31:0]  _GEN_4 = {26'h0, io_op_b[5:0]};	// Alu.scala:158:51, :170:50, :175:49
  wire [31:0]  _res_T_87 = io_op_a[31:0] >> _GEN_4;	// Alu.scala:170:43, :175:49
  wire [31:0]  _res_T_92 = $signed($signed(io_op_a[31:0]) >>> _GEN_4);	// Alu.scala:170:43, :175:49, :176:56
  wire [63:0]  _res_T_97 = $signed(io_op_a) % $signed(io_op_b);	// Alu.scala:177:50
  wire [63:0]  _res_T_126 = io_alu_op == 6'h9 ? io_op_a | io_op_b : io_alu_op == 6'h8 ? io_op_a ^ io_op_b : io_alu_op
                == 6'h7 ? {63'h0, io_op_a >= io_op_b} : io_alu_op == 6'h6 ? {63'h0, io_op_a < io_op_b} :
                io_alu_op == 6'h5 ? {63'h0, $signed(io_op_a) >= $signed(io_op_b)} : io_alu_op == 6'h4 ?
                {63'h0, $signed(io_op_a) < $signed(io_op_b)} : io_alu_op == 6'h3 ? {63'h0, io_op_a !=
                io_op_b} : io_alu_op == 6'h2 ? {63'h0, io_op_a == io_op_b} : io_alu_op == 6'h1 ? io_op_a -
                io_op_b : io_alu_op == 6'h0 ? io_op_a + io_op_b : 64'h0;	// Alu.scala:148:48, :149:48, :150:41, :151:41, :152:48, :153:48, :154:42, :155:42, :156:41, :157:40, :158:41, Mux.scala:81:{58,61}, :101:16
  wire [126:0] _res_T_132 = io_alu_op == 6'hC ? {{63{_res_T_38[63]}}, _res_T_38} : io_alu_op == 6'hB ?
                {{63{_res_T_34[63]}}, _res_T_34} : io_alu_op == 6'hA ? _GEN << _GEN_0 :
                {{63{_res_T_126[63]}}, _res_T_126};	// Alu.scala:158:41, :159:41, :160:48, Mux.scala:81:{58,61}
  wire [63:0]  _GEN_5 = {{32{_res_T_58[31]}}, _res_T_58};	// Alu.scala:168:44, Mux.scala:81:58
  BoothMul BM (	// Alu.scala:74:20
    .clock           (clock),
    .reset           (reset),
    .io_mul_valid    (_T_8),	// Alu.scala:102:34
    .io_mulw         (_T_8 & _bm_value_T_1),	// Alu.scala:88:16, :102:{34,46,61}, :105:24
    .io_mul_signed   (_T_8 ? (_bm_value_T | _bm_value_T_4 | _bm_value_T_1 ? 2'h3 : {_bm_value_T_5, 1'h0}) : 2'h0),	// <stdin>:1541:10, Alu.scala:89:22, :101:{20,45,71}, :102:{34,46,61}, :106:30, :109:21, Mux.scala:101:16
    .io_multiplicand (_T_8 ? io_op_a : 64'h0),	// Alu.scala:90:24, :102:{34,61}, :114:32, Mux.scala:101:16
    .io_multiplier   (_T_8 ? io_op_b : 64'h0),	// Alu.scala:91:22, :102:{34,61}, :115:30, Mux.scala:101:16
    .io_out_valid    (_BM_io_out_valid),
    .io_result_hi    (_BM_io_result_hi),
    .io_result_lo    (_BM_io_result_lo)
  );
  Divider DIV (	// Alu.scala:75:21
    .clock         (clock),
    .reset         (reset),
    .io_div_valid  (_T_15),	// Alu.scala:128:85
    .io_divw       (_T_15 & (_DIV_io_div_signed_T_1 | _DIV_io_divw_T_1)),	// Alu.scala:95:17, :128:{71,85}, :129:{19,35}, :132:{25,57}
    .io_div_signed (_T_15 & (_DIV_io_div_signed_T | _DIV_io_div_signed_T_1)),	// Alu.scala:96:23, :128:{20,71,85}, :129:35, :133:{31,62}
    .io_dividend   (_T_15 ? io_op_a : 64'h0),	// Alu.scala:97:21, :128:85, :129:35, :134:29, Mux.scala:101:16
    .io_divisor    (_T_15 ? io_op_b : 64'h0),	// Alu.scala:98:20, :128:85, :129:35, :135:28, Mux.scala:101:16
    .io_out_valid  (_DIV_io_out_valid),
    .io_quotient   (_DIV_io_quotient)
  );
  assign io_result = _BM_io_out_valid ? (_bm_value_T | _bm_value_T_1 ? _BM_io_result_lo : _bm_value_T_4 |
                _bm_value_T_5 | _bm_value_T_7 ? _BM_io_result_hi : 64'h0) : _DIV_io_out_valid ?
                _DIV_io_quotient : (&io_alu_op) ? 64'h0 : io_alu_op == 6'h28 ? ~io_op_a & io_op_b :
                io_alu_op == 6'h27 ? {{32{_res_T_100[31]}}, _res_T_100[31:0]} : io_alu_op == 6'h26 ?
                {{32{_res_T_97[31]}}, _res_T_97[31:0]} : io_alu_op == 6'h22 ? {{32{_res_T_92[31]}},
                _res_T_92} : io_alu_op == 6'h21 ? {{32{_res_T_87[31]}}, _res_T_87} : io_alu_op == 6'h20 ?
                {{32{_res_T_81[31]}}, _res_T_81[31:0]} : io_alu_op == 6'h1F ? {{32{_res_T_78[31]}},
                _res_T_78} : io_alu_op == 6'h1E ? _GEN_5 : io_alu_op == 6'h1D ? {{32{_res_T_69[31]}},
                _res_T_69} : io_alu_op == 6'h1C ? {{32{_res_T_65[31]}}, _res_T_65} : io_alu_op == 6'h1B ?
                {{32{_res_T_60[31]}}, _res_T_60[31:0]} : io_alu_op == 6'h1A ? _GEN_5 : io_alu_op == 6'h19 ?
                _res_T_100 : io_alu_op == 6'h18 ? $signed(io_op_a) % $signed(io_op_b) : io_alu_op == 6'h11
                ? ~_res_T_47 : io_alu_op == 6'h10 ? _res_T_47 : io_alu_op == 6'hF ?
                $signed($signed(io_op_a) >>> _GEN_2) : io_alu_op == 6'hE ? io_op_a >> _GEN_2 : io_alu_op ==
                6'hD ? _res_T_60[63:0] : _res_T_132[63:0];	// <stdin>:1541:10, Alu.scala:74:20, :75:21, :101:{20,45,71}, :102:{19,46}, :121:42, :122:73, :142:15, :143:12, :161:42, :162:42, :163:49, :164:41, :165:33, :166:48, :167:42, :169:56, :170:50, :171:57, :173:43, :174:{43,59}, :175:49, :176:56, :177:{50,67}, :178:54, :179:{35,44}, Mux.scala:81:{58,61}, :101:16
  assign io_mul_div_outvalid = _BM_io_out_valid | _DIV_io_out_valid;	// <stdin>:1541:10, Alu.scala:74:20, :75:21, :77:44
endmodule

module Excute(	// <stdin>:1819:10
  input         clock,
                reset,
  input  [63:0] io_deio_op_a,
                io_deio_op_b,
  input  [4:0]  io_deio_reg_waddr,
  input         io_deio_branch_type,
  input  [63:0] io_deio_branch_addr,
  input  [5:0]  io_deio_alu_op,
                io_deio_shamt,
  input  [1:0]  io_deio_wb_type,
  input  [2:0]  io_deio_sd_type,
  input  [63:0] io_deio_reg2_rdata,
  input  [2:0]  io_deio_ld_type,
  input  [63:0] io_deio_csr_t,
  input  [11:0] io_deio_csr_waddr,
  input         io_deio_csr_wen,
                io_deio_has_inst,
                io_fcex_stall,
  output [63:0] io_emio_reg_wdata,
  output [4:0]  io_emio_reg_waddr,
  output [1:0]  io_emio_wb_type,
  output [2:0]  io_emio_ld_type,
                io_emio_ld_addr_lowbit,
  output [63:0] io_emio_csr_wdata,
  output        io_emio_csr_wen,
  output [11:0] io_emio_csr_waddr,
  output        io_emio_has_inst,
                io_fcex_jump_flag,
  output [31:0] io_fcex_jump_pc,
  output        io_fcex_mul_div,
                io_fcex_mul_div_valid,
  output [63:0] io_raddr,
                io_waddr,
                io_wdata,
  output [7:0]  io_wmask,
  output        io_cl_type,
  output [4:0]  io_fwex_reg_waddr,
  output [63:0] io_fwex_reg_wdata,
  output        io_fwex_reg_we,
  output [63:0] io_fwex_csr_wdata,
  output        io_fwex_csr_wen,
  output [11:0] io_fwex_csr_waddr,
  output        io_clex_valid,
  output [2:0]  io_clex_ld_type,
  output [63:0] io_clex_raddr,
  output [2:0]  io_clex_sd_type,
  output [63:0] io_clex_waddr,
  output [7:0]  io_clex_wmask,
  output [63:0] io_clex_wdata);

  wire [63:0]  _io_raddr_T_3;	// Excute.scala:103:20
  wire [63:0]  _alu_io_result;	// Excute.scala:36:21
  wire         _alu_io_mul_div_outvalid;	// Excute.scala:36:21
  reg          aluvalid_buffer;	// Excute.scala:44:34
  reg  [63:0]  alu_buffer;	// Excute.scala:45:29
  wire         _mul_div_type_T_16 = io_deio_alu_op == 6'h12 | io_deio_alu_op == 6'h13 | io_deio_alu_op == 6'h14 |
                io_deio_alu_op == 6'h15 | io_deio_alu_op == 6'h23 | io_deio_alu_op == 6'h16 |
                io_deio_alu_op == 6'h17 | io_deio_alu_op == 6'h24 | io_deio_alu_op == 6'h25;	// Excute.scala:61:{37,73,109}, :62:{25,62,98,133}, :63:{25,43,61}
  wire         _CLINT_type_T_6 = ((|io_deio_ld_type) | (|io_deio_sd_type)) & (|(_alu_io_result[63:25])) & _alu_io_result <
                64'h200C000;	// Excute.scala:36:21, :69:{36,44,63}, :70:{24,42,60}
  wire [63:0]  _io_fwex_reg_wdata_T_1 = _alu_io_mul_div_outvalid | aluvalid_buffer ? (aluvalid_buffer ? alu_buffer :
                _alu_io_result) : 64'h0;	// Excute.scala:36:21, :44:34, :45:29, :58:42, :59:21, :77:32
  assign _io_raddr_T_3 = (|io_deio_ld_type) & ~_CLINT_type_T_6 ? _alu_io_result : 64'h0;	// Excute.scala:36:21, :45:29, :69:36, :70:42, :103:{20,48,63}
  wire [126:0] _io_wdata_T = {63'h0, io_deio_reg2_rdata} << {121'h0, _alu_io_result[2:0], 3'h0};	// Cat.scala:33:92, Excute.scala:36:21, :106:36, :108:36
  wire [8:0]   _io_wmask_T_3 = 9'h3 << _alu_io_result[2:0];	// Excute.scala:36:21, :106:36, :112:37
  wire [10:0]  _io_wmask_T_5 = 11'hF << _alu_io_result[2:0];	// Excute.scala:36:21, :106:36, :113:37
  wire         _io_clex_wmask_T_1 = io_deio_sd_type == 3'h1;	// Mux.scala:81:61
  wire         _io_clex_wmask_T_2 = io_deio_sd_type == 3'h2;	// Mux.scala:81:61
  wire         _io_clex_wmask_T_4 = io_deio_sd_type == 3'h3;	// Mux.scala:81:61
  wire         _io_clex_wmask_T_6 = io_deio_sd_type == 3'h4;	// Mux.scala:81:61
  wire         _io_fwex_reg_wdata_T = io_deio_wb_type == 2'h1;	// Excute.scala:139:40
  always @(posedge clock) begin
    if (reset) begin
      aluvalid_buffer <= 1'h0;	// <stdin>:1819:10, Excute.scala:44:34
      alu_buffer <= 64'h0;	// Excute.scala:45:29
    end
    else begin
      automatic logic _T_2;	// Excute.scala:50:51
      automatic logic _T_4;	// Excute.scala:53:31
      _T_2 = _alu_io_mul_div_outvalid & io_fcex_stall & ~aluvalid_buffer;	// Excute.scala:36:21, :44:34, :50:{51,54}
      _T_4 = ~io_fcex_stall & aluvalid_buffer;	// Excute.scala:44:34, :53:{16,31}
      aluvalid_buffer <= _T_2 | ~_T_4 & aluvalid_buffer;	// Excute.scala:44:34, :50:{51,71}, :51:25, :53:{31,50}, :54:25
      if (_T_2)	// Excute.scala:50:51
        alu_buffer <= _alu_io_result;	// Excute.scala:36:21, :45:29
      else if (_T_4)	// Excute.scala:50:51, :53:31
        alu_buffer <= 64'h0;	// Excute.scala:45:29
    end
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:1819:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:1819:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:1819:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:1819:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:1819:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:1819:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:1819:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:1819:10
        `INIT_RANDOM_PROLOG_	// <stdin>:1819:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:1819:10
        _RANDOM_0 = `RANDOM;	// <stdin>:1819:10
        _RANDOM_1 = `RANDOM;	// <stdin>:1819:10
        _RANDOM_2 = `RANDOM;	// <stdin>:1819:10
        aluvalid_buffer = _RANDOM_0[0];	// Excute.scala:44:34
        alu_buffer = {_RANDOM_0[31:1], _RANDOM_1, _RANDOM_2[0]};	// Excute.scala:44:34, :45:29
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:1819:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:1819:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  Alu alu (	// Excute.scala:36:21
    .clock               (clock),
    .reset               (reset),
    .io_op_a             (io_deio_op_a),
    .io_op_b             (io_deio_op_b),
    .io_alu_op           (io_deio_alu_op),
    .io_shamt            (io_deio_shamt),
    .io_result           (_alu_io_result),
    .io_mul_div_outvalid (_alu_io_mul_div_outvalid)
  );
  assign io_emio_reg_wdata = io_deio_csr_wen ? io_deio_csr_t : _mul_div_type_T_16 ? _io_fwex_reg_wdata_T_1 :
                _alu_io_result;	// <stdin>:1819:10, Excute.scala:36:21, :63:43, :77:32, Mux.scala:101:16
  assign io_emio_reg_waddr = io_deio_reg_waddr;	// <stdin>:1819:10
  assign io_emio_wb_type = io_deio_wb_type;	// <stdin>:1819:10
  assign io_emio_ld_type = io_deio_ld_type;	// <stdin>:1819:10
  assign io_emio_ld_addr_lowbit = _io_raddr_T_3[2:0];	// <stdin>:1819:10, Excute.scala:86:39, :103:20
  assign io_emio_csr_wdata = _alu_io_result;	// <stdin>:1819:10, Excute.scala:36:21
  assign io_emio_csr_wen = io_deio_csr_wen;	// <stdin>:1819:10
  assign io_emio_csr_waddr = io_deio_csr_waddr;	// <stdin>:1819:10
  assign io_emio_has_inst = io_deio_has_inst;	// <stdin>:1819:10
  assign io_fcex_jump_flag = io_deio_branch_type & (|_alu_io_result);	// <stdin>:1819:10, Excute.scala:36:21, :96:{55,74}
  assign io_fcex_jump_pc = io_deio_branch_addr[31:0];	// <stdin>:1819:10, Excute.scala:97:21
  assign io_fcex_mul_div = _mul_div_type_T_16;	// <stdin>:1819:10, Excute.scala:63:43
  assign io_fcex_mul_div_valid = _alu_io_mul_div_outvalid;	// <stdin>:1819:10, Excute.scala:36:21
  assign io_raddr = _io_raddr_T_3;	// <stdin>:1819:10, Excute.scala:103:20
  assign io_waddr = (|io_deio_sd_type) & ~_CLINT_type_T_6 ? _alu_io_result : 64'h0;	// <stdin>:1819:10, Excute.scala:36:21, :45:29, :69:63, :70:42, :103:63, :107:{20,47}
  assign io_wdata = _io_wdata_T[63:0];	// <stdin>:1819:10, Excute.scala:108:{14,36}
  assign io_wmask = _io_clex_wmask_T_6 ? 8'hFF : _io_clex_wmask_T_4 ? _io_wmask_T_5[7:0] : _io_clex_wmask_T_2 ?
                _io_wmask_T_3[7:0] : _io_clex_wmask_T_1 ? 8'h1 << _alu_io_result[2:0] : 8'h0;	// <stdin>:1819:10, Excute.scala:36:21, :106:36, :111:37, :112:37, :113:37, Mux.scala:81:{58,61}
  assign io_cl_type = _CLINT_type_T_6;	// <stdin>:1819:10, Excute.scala:70:42
  assign io_fwex_reg_waddr = io_deio_reg_waddr;	// <stdin>:1819:10
  assign io_fwex_reg_wdata = _io_fwex_reg_wdata_T ? (_mul_div_type_T_16 ? _io_fwex_reg_wdata_T_1 : _alu_io_result) :
                (&io_deio_wb_type) ? io_deio_csr_t : 64'h0;	// <stdin>:1819:10, Excute.scala:36:21, :45:29, :63:43, :77:32, :139:{40,70}, Mux.scala:101:16
  assign io_fwex_reg_we = _io_fwex_reg_wdata_T | (&io_deio_wb_type);	// <stdin>:1819:10, Excute.scala:139:{40,51,70}
  assign io_fwex_csr_wdata = _alu_io_result;	// <stdin>:1819:10, Excute.scala:36:21
  assign io_fwex_csr_wen = io_deio_csr_wen;	// <stdin>:1819:10
  assign io_fwex_csr_waddr = io_deio_csr_waddr;	// <stdin>:1819:10
  assign io_clex_valid = _CLINT_type_T_6;	// <stdin>:1819:10, Excute.scala:70:42
  assign io_clex_ld_type = io_deio_ld_type;	// <stdin>:1819:10
  assign io_clex_raddr = _alu_io_result;	// <stdin>:1819:10, Excute.scala:36:21
  assign io_clex_sd_type = io_deio_sd_type;	// <stdin>:1819:10
  assign io_clex_waddr = _alu_io_result;	// <stdin>:1819:10, Excute.scala:36:21
  assign io_clex_wmask = _io_clex_wmask_T_6 ? 8'hFF : {4'h0, _io_clex_wmask_T_4 ? 4'hF : {2'h0, _io_clex_wmask_T_2 ?
                2'h3 : {1'h0, _io_clex_wmask_T_1}}};	// <stdin>:1819:10, Excute.scala:112:37, :113:37, Mux.scala:81:{58,61}
  assign io_clex_wdata = io_deio_reg2_rdata;	// <stdin>:1819:10
endmodule

module Mem(	// <stdin>:1966:10
  input         clock,
                reset,
  input  [63:0] io_emio_reg_wdata,
  input  [4:0]  io_emio_reg_waddr,
  input  [1:0]  io_emio_wb_type,
  input  [2:0]  io_emio_ld_type,
                io_emio_ld_addr_lowbit,
  input  [63:0] io_emio_csr_wdata,
  input         io_emio_csr_wen,
  input  [11:0] io_emio_csr_waddr,
  input         io_emio_has_inst,
                io_rdata_valid,
  input  [63:0] io_rdata_bits_data,
  input         io_rdata_io_data_valid,
  input  [63:0] io_rdata_io_data_bits,
  input         io_clmem_Clrvalue_valid,
  input  [63:0] io_clmem_Clrvalue_bits,
  input         io_stall,
  output [63:0] io_mwio_reg_wdata,
  output [4:0]  io_mwio_reg_waddr,
  output [1:0]  io_mwio_wb_type,
  output [63:0] io_mwio_csr_wdata,
  output        io_mwio_csr_wen,
  output [11:0] io_mwio_csr_waddr,
  output        io_mwio_has_inst,
  output [4:0]  io_fwmem_reg_waddr,
  output [63:0] io_fwmem_reg_wdata,
  output        io_fwmem_reg_we,
  output [63:0] io_fwmem_csr_wdata,
  output        io_fwmem_csr_wen,
  output [11:0] io_fwmem_csr_waddr);

  reg              clmemvalid_buffer;	// Mem.scala:30:36
  reg              rdatavalid_buffer;	// Mem.scala:31:36
  reg              rdataiovalid_buffer;	// Mem.scala:32:38
  reg  [63:0]      clmem_buffer;	// Mem.scala:33:31
  reg  [63:0]      rdata_buffer;	// Mem.scala:34:31
  reg  [63:0]      rdataio_buffer;	// Mem.scala:35:33
  wire [63:0]      get_value;	// Mem.scala:59:25
  assign get_value = clmemvalid_buffer ? clmem_buffer : rdatavalid_buffer ? rdata_buffer : rdataiovalid_buffer ?
                rdataio_buffer : io_clmem_Clrvalue_valid ? io_clmem_Clrvalue_bits : io_rdata_valid ?
                io_rdata_bits_data : io_rdata_io_data_valid ? io_rdata_io_data_bits : 64'h0;	// Mem.scala:30:36, :31:36, :32:38, :33:31, :34:31, :35:33, :66:15, Mux.scala:101:16
  wire [63:0]      rvalue;	// Mem.scala:83:22
  wire             _rvalue_T_148 = io_emio_ld_addr_lowbit == 3'h2;	// Mux.scala:81:61
  wire             _rvalue_T_162 = io_emio_ld_addr_lowbit == 3'h4;	// Mux.scala:81:61
  wire             _rvalue_T_152 = io_emio_ld_addr_lowbit == 3'h6;	// Mux.scala:81:61
  wire [7:0][63:0] _GEN = {{{{56{get_value[63]}}, get_value[63:56]}}, {{{56{get_value[55]}}, get_value[55:48]}},
                {{{56{get_value[47]}}, get_value[47:40]}}, {{{56{get_value[39]}}, get_value[39:32]}},
                {{{56{get_value[31]}}, get_value[31:24]}}, {{{56{get_value[23]}}, get_value[23:16]}},
                {{{56{get_value[15]}}, get_value[15:8]}}, {{{56{get_value[7]}}, get_value[7:0]}}};	// Bitwise.scala:77:12, Cat.scala:33:92, Mem.scala:89:{50,65}, :90:{50,66}, :91:{50,66}, :92:{50,66}, :93:{50,66}, :94:{50,66}, :95:{50,66}, :96:{50,66}, Mux.scala:81:{58,61}
  wire             _rvalue_T_160 = io_emio_ld_addr_lowbit == 3'h0;	// Mux.scala:81:61
  wire [7:0][7:0]  _GEN_0 = {{get_value[7:0]}, {get_value[7:0]}, {get_value[47:40]}, {get_value[39:32]},
                {get_value[31:24]}, {get_value[23:16]}, {get_value[15:8]}, {get_value[7:0]}};	// Mem.scala:89:{50,65}, :90:66, :91:66, :92:66, :93:66, :94:66, Mux.scala:81:{58,61}
  wire [7:0][63:0] _GEN_1 = {{_rvalue_T_162 ? {32'h0, get_value[63:32]} : _rvalue_T_160 ? {32'h0, get_value[31:0]} :
                64'h0}, {_rvalue_T_152 ? {48'h0, get_value[63:48]} : _rvalue_T_162 ? {48'h0,
                get_value[47:32]} : _rvalue_T_148 ? {48'h0, get_value[31:16]} : _rvalue_T_160 ? {48'h0,
                get_value[15:0]} : 64'h0}, {{56'h0, (&io_emio_ld_addr_lowbit) ? get_value[63:56] :
                _rvalue_T_152 ? get_value[55:48] : _GEN_0[io_emio_ld_addr_lowbit]}}, {get_value},
                {_rvalue_T_162 ? {{32{get_value[63]}}, get_value[63:32]} : _rvalue_T_160 ?
                {{32{get_value[31]}}, get_value[31:0]} : 64'h0}, {_rvalue_T_152 ? {{48{get_value[63]}},
                get_value[63:48]} : _rvalue_T_162 ? {{48{get_value[47]}}, get_value[47:32]} : _rvalue_T_148
                ? {{48{get_value[31]}}, get_value[31:16]} : _rvalue_T_160 ? {{48{get_value[15]}},
                get_value[15:0]} : 64'h0}, {_GEN[io_emio_ld_addr_lowbit]}, {64'h0}};	// Bitwise.scala:77:12, Cat.scala:33:92, Mem.scala:33:31, :89:50, :90:50, :92:50, :94:50, :95:66, :96:{50,66}, :101:66, :102:66, :103:66, :104:66, :109:66, :110:66, Mux.scala:81:{58,61}
  assign rvalue = _GEN_1[io_emio_ld_type];	// Mem.scala:85:12, Mux.scala:81:{58,61}
  wire             _io_fwmem_reg_wdata_T = io_emio_wb_type == 2'h1;	// Mem.scala:149:30
  wire             _io_fwmem_reg_wdata_T_3 = io_emio_wb_type == 2'h2;	// Mem.scala:150:30, Mux.scala:81:61
  always @(posedge clock) begin
    if (reset) begin
      clmemvalid_buffer <= 1'h0;	// Mem.scala:30:36
      rdatavalid_buffer <= 1'h0;	// Mem.scala:30:36, :31:36
      rdataiovalid_buffer <= 1'h0;	// Mem.scala:30:36, :32:38
      clmem_buffer <= 64'h0;	// Mem.scala:33:31
      rdata_buffer <= 64'h0;	// Mem.scala:33:31, :34:31
      rdataio_buffer <= 64'h0;	// Mem.scala:33:31, :35:33
    end
    else begin
      automatic logic _T_2;	// Mem.scala:37:46
      automatic logic _T_7;	// Mem.scala:44:37
      automatic logic _T_12;	// Mem.scala:51:45
      _T_2 = io_clmem_Clrvalue_valid & io_stall & ~clmemvalid_buffer;	// Mem.scala:30:36, :37:{46,49}
      _T_7 = io_rdata_valid & io_stall & ~rdatavalid_buffer;	// Mem.scala:31:36, :44:{37,40}
      _T_12 = io_rdata_io_data_valid & io_stall & ~rdataiovalid_buffer;	// Mem.scala:32:38, :51:{45,48}
      clmemvalid_buffer <= _T_2 | ~(~io_stall & clmemvalid_buffer) & clmemvalid_buffer;	// Mem.scala:30:36, :37:{46,68}, :38:27, :40:{16,26,47}, :41:27
      rdatavalid_buffer <= _T_7 | ~(~io_stall & rdatavalid_buffer) & rdatavalid_buffer;	// Mem.scala:31:36, :44:{37,59}, :45:27, :47:{16,26,47}, :48:27
      rdataiovalid_buffer <= _T_12 | ~(~io_stall & rdataiovalid_buffer) & rdataiovalid_buffer;	// Mem.scala:32:38, :51:{45,69}, :52:29, :54:{16,26,49}, :55:29
      if (_T_2)	// Mem.scala:37:46
        clmem_buffer <= io_clmem_Clrvalue_bits;	// Mem.scala:33:31
      if (_T_7)	// Mem.scala:44:37
        rdata_buffer <= io_rdata_bits_data;	// Mem.scala:34:31
      if (_T_12)	// Mem.scala:51:45
        rdataio_buffer <= io_rdata_io_data_bits;	// Mem.scala:35:33
    end
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:1966:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:1966:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:1966:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:1966:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:1966:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:1966:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:1966:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:1966:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:1966:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:1966:10
      automatic logic [31:0] _RANDOM_6;	// <stdin>:1966:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:1966:10
        `INIT_RANDOM_PROLOG_	// <stdin>:1966:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:1966:10
        _RANDOM_0 = `RANDOM;	// <stdin>:1966:10
        _RANDOM_1 = `RANDOM;	// <stdin>:1966:10
        _RANDOM_2 = `RANDOM;	// <stdin>:1966:10
        _RANDOM_3 = `RANDOM;	// <stdin>:1966:10
        _RANDOM_4 = `RANDOM;	// <stdin>:1966:10
        _RANDOM_5 = `RANDOM;	// <stdin>:1966:10
        _RANDOM_6 = `RANDOM;	// <stdin>:1966:10
        clmemvalid_buffer = _RANDOM_0[0];	// Mem.scala:30:36
        rdatavalid_buffer = _RANDOM_0[1];	// Mem.scala:30:36, :31:36
        rdataiovalid_buffer = _RANDOM_0[2];	// Mem.scala:30:36, :32:38
        clmem_buffer = {_RANDOM_0[31:3], _RANDOM_1, _RANDOM_2[2:0]};	// Mem.scala:30:36, :33:31
        rdata_buffer = {_RANDOM_2[31:3], _RANDOM_3, _RANDOM_4[2:0]};	// Mem.scala:33:31, :34:31
        rdataio_buffer = {_RANDOM_4[31:3], _RANDOM_5, _RANDOM_6[2:0]};	// Mem.scala:34:31, :35:33
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:1966:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:1966:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_mwio_reg_wdata = _io_fwmem_reg_wdata_T | (&io_emio_wb_type) ? io_emio_reg_wdata : _io_fwmem_reg_wdata_T_3 ?
                rvalue : 64'h0;	// <stdin>:1966:10, Mem.scala:33:31, :149:{30,41,60}, :150:30, Mux.scala:101:16
  assign io_mwio_reg_waddr = io_emio_reg_waddr;	// <stdin>:1966:10
  assign io_mwio_wb_type = io_emio_wb_type;	// <stdin>:1966:10
  assign io_mwio_csr_wdata = io_emio_csr_wdata;	// <stdin>:1966:10
  assign io_mwio_csr_wen = io_emio_csr_wen;	// <stdin>:1966:10
  assign io_mwio_csr_waddr = io_emio_csr_waddr;	// <stdin>:1966:10
  assign io_mwio_has_inst = io_emio_has_inst;	// <stdin>:1966:10
  assign io_fwmem_reg_waddr = io_emio_reg_waddr;	// <stdin>:1966:10
  assign io_fwmem_reg_wdata = _io_fwmem_reg_wdata_T | (&io_emio_wb_type) ? io_emio_reg_wdata : _io_fwmem_reg_wdata_T_3 ?
                rvalue : 64'h0;	// <stdin>:1966:10, Mem.scala:33:31, :149:{30,60}, :150:30, :164:41, Mux.scala:101:16
  assign io_fwmem_reg_we = |io_emio_wb_type;	// <stdin>:1966:10, Mem.scala:161:40
  assign io_fwmem_csr_wdata = io_emio_csr_wdata;	// <stdin>:1966:10
  assign io_fwmem_csr_wen = io_emio_csr_wen;	// <stdin>:1966:10
  assign io_fwmem_csr_waddr = io_emio_csr_waddr;	// <stdin>:1966:10
endmodule

module Wb(	// <stdin>:2231:10
  input  [63:0] io_mwio_reg_wdata,
  input  [4:0]  io_mwio_reg_waddr,
  input  [1:0]  io_mwio_wb_type,
  input  [63:0] io_mwio_csr_wdata,
  input         io_mwio_csr_wen,
  input  [11:0] io_mwio_csr_waddr,
  input         io_mwio_has_inst,
                io_stall,
  output [4:0]  io_rfio_rd,
  output        io_rfio_reg_wen,
  output [63:0] io_rfio_reg_wdata,
  output [4:0]  io_fwwb_reg_waddr,
  output [63:0] io_fwwb_reg_wdata,
  output        io_fwwb_reg_we,
  output [63:0] io_fwwb_csr_wdata,
  output        io_fwwb_csr_wen,
  output [11:0] io_fwwb_csr_waddr,
                io_csrs_rd,
  output        io_csrs_csr_wen,
  output [63:0] io_csrs_csr_wdata);

  assign io_rfio_rd = io_mwio_reg_waddr;	// <stdin>:2231:10
  assign io_rfio_reg_wen = ~io_stall & (|io_mwio_wb_type);	// <stdin>:2231:10, Wb.scala:32:{27,59}
  assign io_rfio_reg_wdata = io_mwio_reg_wdata;	// <stdin>:2231:10
  assign io_fwwb_reg_waddr = io_mwio_reg_waddr;	// <stdin>:2231:10
  assign io_fwwb_reg_wdata = io_mwio_reg_wdata;	// <stdin>:2231:10
  assign io_fwwb_reg_we = |io_mwio_wb_type;	// <stdin>:2231:10, Wb.scala:32:59
  assign io_fwwb_csr_wdata = io_mwio_csr_wdata;	// <stdin>:2231:10
  assign io_fwwb_csr_wen = io_mwio_csr_wen;	// <stdin>:2231:10
  assign io_fwwb_csr_waddr = io_mwio_csr_waddr;	// <stdin>:2231:10
  assign io_csrs_rd = io_mwio_csr_waddr;	// <stdin>:2231:10
  assign io_csrs_csr_wen = ~io_stall & io_mwio_csr_wen;	// <stdin>:2231:10, Wb.scala:32:27, :47:27
  assign io_csrs_csr_wdata = io_mwio_csr_wdata;	// <stdin>:2231:10
endmodule

module CLINT(	// <stdin>:2255:10
  input         clock,
                reset,
                io_clex_valid,
  input  [2:0]  io_clex_ld_type,
  input  [63:0] io_clex_raddr,
  input  [2:0]  io_clex_sd_type,
  input  [63:0] io_clex_waddr,
  input  [7:0]  io_clex_wmask,
  input  [63:0] io_clex_wdata,
  output        io_clmem_Clrvalue_valid,
  output [63:0] io_clmem_Clrvalue_bits,
  output        io_timer_int);

  reg [31:0] MSIP;	// CLINT.scala:33:23
  reg [63:0] MTIMECMP;	// CLINT.scala:34:27
  reg [63:0] MTIME;	// CLINT.scala:35:24
  reg [63:0] rvalue_buf;	// CLINT.scala:38:29
  reg        valid_buf;	// CLINT.scala:39:28
  always @(posedge clock) begin
    if (reset) begin
      MSIP <= 32'h0;	// CLINT.scala:33:23
      MTIMECMP <= 64'h0;	// CLINT.scala:34:27
      MTIME <= 64'h0;	// CLINT.scala:34:27, :35:24
      rvalue_buf <= 64'h0;	// CLINT.scala:34:27, :38:29
      valid_buf <= 1'h0;	// CLINT.scala:39:28
    end
    else begin
      automatic logic _T_1;	// CLINT.scala:58:34
      automatic logic _T_2;	// CLINT.scala:58:34
      automatic logic _T_3;	// CLINT.scala:58:34
      automatic logic _T_5 = io_clex_waddr == 64'h2000000;	// CLINT.scala:58:34, :76:34
      automatic logic _T_10 = io_clex_waddr == 64'h2004000;	// CLINT.scala:58:34, :76:34
      _T_1 = io_clex_raddr == 64'h2000000;	// CLINT.scala:58:34
      _T_2 = io_clex_raddr == 64'h2004000;	// CLINT.scala:58:34
      _T_3 = io_clex_raddr == 64'h200BFF8;	// CLINT.scala:58:34
      if (~io_clex_valid | (|io_clex_ld_type) | ~((|io_clex_sd_type) & _T_5)) begin	// CLINT.scala:47:10, :51:24, :56:{30,34}, :72:{36,40}, :76:34
      end
      else if (&io_clex_wmask)	// CLINT.scala:47:10, :51:24, :56:{30,34}, :72:{36,40}, :76:34, :80:42
        MSIP <= io_clex_wdata[31:0];	// CLINT.scala:33:23, :82:50
      else if (io_clex_wmask == 8'hF)	// CLINT.scala:47:10, :51:24, :56:{30,34}, :72:{36,40}, :76:34, :80:42
        MSIP <= io_clex_wdata[31:0];	// CLINT.scala:33:23, :85:50
      else if (io_clex_wmask == 8'h3)	// CLINT.scala:47:10, :51:24, :56:{30,34}, :72:{36,40}, :76:34, :80:42
        MSIP <= {MSIP[31:16], io_clex_wdata[15:0]};	// CLINT.scala:33:23, :88:{45,67}, Cat.scala:33:92
      else if (io_clex_wmask == 8'h1)	// CLINT.scala:47:10, :51:24, :56:{30,34}, :72:{36,40}, :76:34, :80:42
        MSIP <= {MSIP[31:8], io_clex_wdata[7:0]};	// CLINT.scala:33:23, :91:{45,66}, Cat.scala:33:92
      if (~io_clex_valid | (|io_clex_ld_type) | ~(|io_clex_sd_type) | _T_5 | ~_T_10) begin	// CLINT.scala:47:10, :48:14, :51:24, :56:{30,34}, :72:{36,40}, :76:34
      end
      else if (&io_clex_wmask)	// CLINT.scala:47:10, :48:14, :51:24, :56:{30,34}, :72:{36,40}, :76:34, :98:42
        MTIMECMP <= io_clex_wdata;	// CLINT.scala:34:27
      else if (io_clex_wmask == 8'hF)	// CLINT.scala:47:10, :48:14, :51:24, :56:{30,34}, :72:{36,40}, :76:34, :80:42, :98:42
        MTIMECMP <= {MTIMECMP[63:32], io_clex_wdata[31:0]};	// CLINT.scala:34:27, :103:{53,75}, Cat.scala:33:92
      else if (io_clex_wmask == 8'h3)	// CLINT.scala:47:10, :48:14, :51:24, :56:{30,34}, :72:{36,40}, :76:34, :80:42, :98:42
        MTIMECMP <= {MTIMECMP[63:16], io_clex_wdata[15:0]};	// CLINT.scala:34:27, :106:{53,75}, Cat.scala:33:92
      else if (io_clex_wmask == 8'h1)	// CLINT.scala:47:10, :48:14, :51:24, :56:{30,34}, :72:{36,40}, :76:34, :80:42, :98:42
        MTIMECMP <= {MTIMECMP[63:8], io_clex_wdata[7:0]};	// CLINT.scala:34:27, :109:{53,74}, Cat.scala:33:92
      if (~io_clex_valid | (|io_clex_ld_type) | ~(|io_clex_sd_type) | _T_5 | _T_10 | io_clex_waddr !=
                                                64'h200BFF8)	// CLINT.scala:47:10, :48:14, :49:11, :51:24, :56:{30,34}, :58:34, :72:{36,40}, :76:34
        MTIME <= MTIME + 64'h1;	// CLINT.scala:35:24, :49:20
      else if (&io_clex_wmask)	// CLINT.scala:47:10, :48:14, :49:11, :51:24, :56:{30,34}, :58:34, :72:{36,40}, :76:34, :116:42
        MTIME <= io_clex_wdata;	// CLINT.scala:35:24
      else if (io_clex_wmask == 8'hF)	// CLINT.scala:47:10, :48:14, :49:11, :51:24, :56:{30,34}, :58:34, :72:{36,40}, :76:34, :80:42, :116:42
        MTIME <= {MTIME[63:32], io_clex_wdata[31:0]};	// CLINT.scala:35:24, :121:{47,69}, Cat.scala:33:92
      else if (io_clex_wmask == 8'h3)	// CLINT.scala:47:10, :48:14, :49:11, :51:24, :56:{30,34}, :58:34, :72:{36,40}, :76:34, :80:42, :116:42
        MTIME <= {MTIME[63:16], io_clex_wdata[15:0]};	// CLINT.scala:35:24, :124:{47,69}, Cat.scala:33:92
      else if (io_clex_wmask == 8'h1)	// CLINT.scala:47:10, :48:14, :49:11, :51:24, :56:{30,34}, :58:34, :72:{36,40}, :76:34, :80:42, :116:42
        MTIME <= {MTIME[63:8], io_clex_wdata[7:0]};	// CLINT.scala:35:24, :127:{47,68}, Cat.scala:33:92
      if (io_clex_valid & (|io_clex_ld_type)) begin	// CLINT.scala:45:16, :51:24, :56:{30,34}
        if (_T_1)	// CLINT.scala:58:34
          rvalue_buf <= {32'h0, MSIP};	// CLINT.scala:33:23, :38:29, :61:32
        else if (_T_2)	// CLINT.scala:58:34
          rvalue_buf <= MTIMECMP;	// CLINT.scala:34:27, :38:29
        else if (_T_3)	// CLINT.scala:58:34
          rvalue_buf <= MTIME;	// CLINT.scala:35:24, :38:29
        else	// CLINT.scala:58:34
          rvalue_buf <= 64'h0;	// CLINT.scala:34:27, :38:29
      end
      else	// CLINT.scala:45:16, :51:24, :56:{30,34}
        rvalue_buf <= 64'h0;	// CLINT.scala:34:27, :38:29
      valid_buf <= io_clex_valid & (|io_clex_ld_type) & (_T_1 | _T_2 | _T_3);	// CLINT.scala:39:28, :44:15, :51:24, :56:{30,34}, :58:34, :60:31
    end
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:2255:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:2255:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:2255:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:2255:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:2255:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:2255:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:2255:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:2255:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:2255:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:2255:10
      automatic logic [31:0] _RANDOM_6;	// <stdin>:2255:10
      automatic logic [31:0] _RANDOM_7;	// <stdin>:2255:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:2255:10
        `INIT_RANDOM_PROLOG_	// <stdin>:2255:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:2255:10
        _RANDOM_0 = `RANDOM;	// <stdin>:2255:10
        _RANDOM_1 = `RANDOM;	// <stdin>:2255:10
        _RANDOM_2 = `RANDOM;	// <stdin>:2255:10
        _RANDOM_3 = `RANDOM;	// <stdin>:2255:10
        _RANDOM_4 = `RANDOM;	// <stdin>:2255:10
        _RANDOM_5 = `RANDOM;	// <stdin>:2255:10
        _RANDOM_6 = `RANDOM;	// <stdin>:2255:10
        _RANDOM_7 = `RANDOM;	// <stdin>:2255:10
        MSIP = _RANDOM_0;	// CLINT.scala:33:23
        MTIMECMP = {_RANDOM_1, _RANDOM_2};	// CLINT.scala:34:27
        MTIME = {_RANDOM_3, _RANDOM_4};	// CLINT.scala:35:24
        rvalue_buf = {_RANDOM_5, _RANDOM_6};	// CLINT.scala:38:29
        valid_buf = _RANDOM_7[0];	// CLINT.scala:39:28
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:2255:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:2255:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_clmem_Clrvalue_valid = valid_buf;	// <stdin>:2255:10, CLINT.scala:39:28
  assign io_clmem_Clrvalue_bits = rvalue_buf;	// <stdin>:2255:10, CLINT.scala:38:29
  assign io_timer_int = MTIME >= MTIMECMP;	// <stdin>:2255:10, CLINT.scala:34:27, :35:24, :140:28
endmodule

module Forward(	// <stdin>:2386:10
  input  [4:0]  io_fwde_reg1_raddr,
                io_fwde_reg2_raddr,
  input  [11:0] io_fwde_csr_raddr,
  input  [4:0]  io_fwex_reg_waddr,
  input  [63:0] io_fwex_reg_wdata,
  input         io_fwex_reg_we,
  input  [63:0] io_fwex_csr_wdata,
  input         io_fwex_csr_wen,
  input  [11:0] io_fwex_csr_waddr,
  input  [4:0]  io_fwmem_reg_waddr,
  input  [63:0] io_fwmem_reg_wdata,
  input         io_fwmem_reg_we,
  input  [63:0] io_fwmem_csr_wdata,
  input         io_fwmem_csr_wen,
  input  [11:0] io_fwmem_csr_waddr,
  input  [4:0]  io_fwwb_reg_waddr,
  input  [63:0] io_fwwb_reg_wdata,
  input         io_fwwb_reg_we,
  input  [63:0] io_fwwb_csr_wdata,
  input         io_fwwb_csr_wen,
  input  [11:0] io_fwwb_csr_waddr,
  output        io_fwde_fw_sel1,
                io_fwde_fw_sel2,
  output [63:0] io_fwde_fw_data1,
                io_fwde_fw_data2,
  output        io_fwde_csr_fw_sel,
  output [63:0] io_fwde_csr_fw_data);

  wire reg1_ex_hazard = (|io_fwde_reg1_raddr) & io_fwex_reg_we & io_fwex_reg_waddr == io_fwde_reg1_raddr;	// Forward.scala:46:{46,73,95}
  wire reg2_ex_hazard = (|io_fwde_reg2_raddr) & io_fwex_reg_we & io_fwex_reg_waddr == io_fwde_reg2_raddr;	// Forward.scala:47:{46,73,95}
  wire reg1_mem_hazard = (|io_fwde_reg1_raddr) & io_fwmem_reg_we & io_fwmem_reg_waddr == io_fwde_reg1_raddr;	// Forward.scala:46:46, :49:{75,98}
  wire reg2_mem_hazard = (|io_fwde_reg2_raddr) & io_fwmem_reg_we & io_fwmem_reg_waddr == io_fwde_reg2_raddr;	// Forward.scala:47:46, :50:{75,98}
  wire reg1_wb_hazard = (|io_fwde_reg1_raddr) & io_fwwb_reg_we & io_fwwb_reg_waddr == io_fwde_reg1_raddr;	// Forward.scala:46:46, :52:{73,95}
  wire reg2_wb_hazard = (|io_fwde_reg2_raddr) & io_fwwb_reg_we & io_fwwb_reg_waddr == io_fwde_reg2_raddr;	// Forward.scala:47:46, :53:{73,95}
  wire csr_ex_harzard = io_fwex_csr_wen & io_fwex_csr_waddr == io_fwde_csr_raddr;	// Forward.scala:74:{42,64}
  wire csr_mem_harzard = io_fwmem_csr_wen & io_fwmem_csr_waddr == io_fwde_csr_raddr;	// Forward.scala:75:{44,67}
  wire csr_wb_harzard = io_fwwb_csr_wen & io_fwwb_csr_waddr == io_fwde_csr_raddr;	// Forward.scala:76:{42,64}
  assign io_fwde_fw_sel1 = reg1_ex_hazard | reg1_mem_hazard | reg1_wb_hazard;	// <stdin>:2386:10, Forward.scala:46:73, :49:75, :52:73, :55:57
  assign io_fwde_fw_sel2 = reg2_ex_hazard | reg2_mem_hazard | reg2_wb_hazard;	// <stdin>:2386:10, Forward.scala:47:73, :50:75, :53:73, :56:57
  assign io_fwde_fw_data1 = reg1_ex_hazard ? io_fwex_reg_wdata : reg1_mem_hazard ? io_fwmem_reg_wdata : reg1_wb_hazard
                ? io_fwwb_reg_wdata : 64'h0;	// <stdin>:2386:10, Forward.scala:46:73, :49:75, :52:73, Mux.scala:101:16
  assign io_fwde_fw_data2 = reg2_ex_hazard ? io_fwex_reg_wdata : reg2_mem_hazard ? io_fwmem_reg_wdata : reg2_wb_hazard
                ? io_fwwb_reg_wdata : 64'h0;	// <stdin>:2386:10, Forward.scala:47:73, :50:75, :53:73, Mux.scala:101:16
  assign io_fwde_csr_fw_sel = csr_ex_harzard | csr_mem_harzard | csr_wb_harzard;	// <stdin>:2386:10, Forward.scala:74:42, :75:44, :76:42, :78:60
  assign io_fwde_csr_fw_data = csr_ex_harzard ? io_fwex_csr_wdata : csr_mem_harzard ? io_fwmem_csr_wdata : csr_wb_harzard
                ? io_fwwb_csr_wdata : 64'h0;	// <stdin>:2386:10, Forward.scala:74:42, :75:44, :76:42, Mux.scala:101:16
endmodule

module Regfile(	// <stdin>:2443:10
  input         clock,
  input  [4:0]  io_RfDe_reg1_raddr,
                io_RfDe_reg2_raddr,
                io_RfWb_rd,
  input         io_RfWb_reg_wen,
  input  [63:0] io_RfWb_reg_wdata,
  output [63:0] io_RfDe_reg1_rdata,
                io_RfDe_reg2_rdata);

  wire [63:0] _regs_ext_R0_data;	// Regfile.scala:32:19
  wire [63:0] _regs_ext_R1_data;	// Regfile.scala:32:19
  wire [63:0] _regs_ext_R2_data;	// Regfile.scala:32:19
  regs_combMem regs_ext (	// Regfile.scala:32:19
    .R0_addr (io_RfWb_rd),
    .R0_en   (1'h1),	// <stdin>:2443:10
    .R0_clk  (clock),
    .R1_addr (io_RfDe_reg1_raddr),
    .R1_en   (1'h1),	// <stdin>:2443:10
    .R1_clk  (clock),
    .R2_addr (io_RfDe_reg2_raddr),
    .R2_en   (1'h1),	// <stdin>:2443:10
    .R2_clk  (clock),
    .W0_addr (5'h0),	// Regfile.scala:37:9
    .W0_en   (1'h1),	// <stdin>:2443:10
    .W0_clk  (clock),
    .W0_data (64'h0),	// Regfile.scala:37:13
    .W1_addr (io_RfWb_rd),
    .W1_en   (1'h1),	// <stdin>:2443:10
    .W1_clk  (clock),
    .W1_data (io_RfWb_reg_wen & (|io_RfWb_rd) ? io_RfWb_reg_wdata : _regs_ext_R0_data),	// Regfile.scala:32:19, :39:{28,45,60}
    .R0_data (_regs_ext_R0_data),
    .R1_data (_regs_ext_R1_data),
    .R2_data (_regs_ext_R2_data)
  );
  assign io_RfDe_reg1_rdata = (|io_RfDe_reg1_raddr) ? _regs_ext_R1_data : 64'h0;	// <stdin>:2443:10, Regfile.scala:32:19, :37:13, :48:{30,50}
  assign io_RfDe_reg2_rdata = (|io_RfDe_reg2_raddr) ? _regs_ext_R2_data : 64'h0;	// <stdin>:2443:10, Regfile.scala:32:19, :37:13, :49:{30,50}
endmodule

module FlowControl(	// <stdin>:2466:10
  input         io_fcde_jump_flag,
  input  [31:0] io_fcde_jump_pc,
  input         io_fcde_load_use,
                io_fcex_jump_flag,
  input  [31:0] io_fcex_jump_pc,
  input         io_fcex_mul_div,
                io_fcex_mul_div_valid,
                io_fctr_pop_NOP,
  input  [2:0]  io_fctr_trap_state,
  input         io_fctr_jump_flag,
  input  [31:0] io_fctr_jump_pc,
  input  [2:0]  io_fcIcache_state,
  input         io_fcIcache_hit,
  input  [2:0]  io_fcDcache_state,
  input         io_fcDcache_hit,
                io_fcio_req,
  input  [1:0]  io_fcio_state,
  output        io_fcfe_jump_flag,
  output [31:0] io_fcfe_jump_pc,
  output        io_fcfe_flush,
                io_fcfe_stall,
                io_fcde_flush,
                io_fcde_stall,
                io_fcex_stall,
                io_fcmem_stall,
                io_fcwb_stall,
                io_fcio_stall,
                io_sdb_stall);

  wire Icache_stall;	// <stdin>:2471:5
  wire Dcache_stall;	// <stdin>:2473:5
  wire IO_stall;	// <stdin>:2475:5
  wire MULDIV_stall;	// <stdin>:2477:5
  assign Icache_stall = (|io_fcIcache_state) & ~io_fcIcache_hit;	// FlowControl.scala:140:{29,37,40,58}
  assign Dcache_stall = (|io_fcDcache_state) & ~io_fcDcache_hit;	// FlowControl.scala:148:{28,36,39,56}
  assign IO_stall = io_fcio_req & io_fcio_state == 2'h0 | io_fcio_state == 2'h1;	// FlowControl.scala:155:{22,39,59}, :156:18, :157:{30,49}
  assign MULDIV_stall = ~io_fcex_mul_div_valid & io_fcex_mul_div;	// FlowControl.scala:165:32, :166:22, :167:32
  wire _SFBundle_T_3 = io_fctr_trap_state == 3'h4 | (&io_fctr_trap_state);	// FlowControl.scala:179:{33,47,70}
  wire _SFBundle_T_14 = io_fctr_pop_NOP | io_fctr_trap_state == 3'h1 | io_fctr_trap_state == 3'h2 |
                io_fctr_trap_state == 3'h3 | io_fctr_trap_state == 3'h5 | io_fctr_trap_state == 3'h6;	// FlowControl.scala:180:{60,93}, :181:{36,71,87,109}
  wire SFBundle_0 = IO_stall | Icache_stall | Dcache_stall | io_fcde_load_use | ~_SFBundle_T_3 &
                (_SFBundle_T_14 | ~io_fctr_jump_flag & ~io_fcex_jump_flag & ~io_fcde_jump_flag &
                MULDIV_stall);	// FlowControl.scala:179:47, :181:87, Mux.scala:101:16
  wire SFBundle_1 = IO_stall | Icache_stall | Dcache_stall | ~io_fcde_load_use & ~_SFBundle_T_3 &
                ~_SFBundle_T_14 & ~io_fctr_jump_flag & ~io_fcex_jump_flag & ~io_fcde_jump_flag &
                MULDIV_stall;	// FlowControl.scala:179:47, :181:87, Mux.scala:101:16
  wire SFBundle_2 = IO_stall | Icache_stall | Dcache_stall | ~io_fcde_load_use & ~_SFBundle_T_3 &
                ~_SFBundle_T_14 & ~io_fctr_jump_flag & ~io_fcex_jump_flag & ~io_fcde_jump_flag &
                MULDIV_stall;	// FlowControl.scala:179:47, :181:87, Mux.scala:101:16
  wire SFBundle_4 = IO_stall | Icache_stall | Dcache_stall | ~io_fcde_load_use & ~_SFBundle_T_3 &
                ~_SFBundle_T_14 & ~io_fctr_jump_flag & ~io_fcex_jump_flag & ~io_fcde_jump_flag &
                MULDIV_stall;	// FlowControl.scala:179:47, :181:87, Mux.scala:101:16
  assign io_fcfe_jump_flag = io_fcde_jump_flag | io_fcex_jump_flag | io_fctr_jump_flag;	// <stdin>:2466:10, FlowControl.scala:202:65
  assign io_fcfe_jump_pc = io_fctr_jump_flag ? io_fctr_jump_pc : io_fcex_jump_flag ? io_fcex_jump_pc :
                io_fcde_jump_flag ? io_fcde_jump_pc : 32'h80000000;	// <stdin>:2466:10, Mux.scala:101:16
  assign io_fcfe_flush = ~IO_stall & ~Icache_stall & ~Dcache_stall & ~io_fcde_load_use & (_SFBundle_T_3 |
                ~_SFBundle_T_14 & (io_fctr_jump_flag | io_fcex_jump_flag | io_fcde_jump_flag));	// <stdin>:2466:10, FlowControl.scala:179:47, :181:87, Mux.scala:101:16
  assign io_fcfe_stall = SFBundle_0;	// <stdin>:2466:10, Mux.scala:101:16
  assign io_fcde_flush = ~IO_stall & ~Icache_stall & ~Dcache_stall & (io_fcde_load_use | _SFBundle_T_3 |
                _SFBundle_T_14 | ~io_fctr_jump_flag & io_fcex_jump_flag);	// <stdin>:2466:10, FlowControl.scala:179:47, :181:87, Mux.scala:101:16
  assign io_fcde_stall = SFBundle_1;	// <stdin>:2466:10, Mux.scala:101:16
  assign io_fcex_stall = SFBundle_2;	// <stdin>:2466:10, Mux.scala:101:16
  assign io_fcmem_stall = IO_stall | Icache_stall | Dcache_stall | ~io_fcde_load_use & ~_SFBundle_T_3 &
                ~_SFBundle_T_14 & ~io_fctr_jump_flag & ~io_fcex_jump_flag & ~io_fcde_jump_flag &
                MULDIV_stall;	// <stdin>:2466:10, FlowControl.scala:179:47, :181:87, Mux.scala:101:16
  assign io_fcwb_stall = SFBundle_4;	// <stdin>:2466:10, Mux.scala:101:16
  assign io_fcio_stall = SFBundle_2;	// <stdin>:2466:10, Mux.scala:101:16
  assign io_sdb_stall = SFBundle_0 & SFBundle_1 & SFBundle_2 & SFBundle_4;	// <stdin>:2466:10, FlowControl.scala:216:67, Mux.scala:101:16
endmodule

module CSRs(	// <stdin>:2675:10
  input         clock,
                reset,
  input  [11:0] io_CSRDe_csr_raddr,
                io_CSRWb_rd,
  input         io_CSRWb_csr_wen,
  input  [63:0] io_CSRWb_csr_wdata,
  input  [11:0] io_CSRTr_rd,
  input         io_CSRTr_csr_wen,
  input  [63:0] io_CSRTr_csr_wdata,
  input         io_timer_int,
  output [63:0] io_CSRDe_csr_rdata,
                io_CSRTr_MTVEC,
                io_CSRTr_MCAUSE,
                io_CSRTr_MEPC,
                io_CSRTr_MIE,
                io_CSRTr_MIP,
                io_CSRTr_MSTATUS);

  reg [63:0] MTVEC;	// CSRs.scala:43:24
  reg [63:0] MCAUSE;	// CSRs.scala:44:25
  reg [63:0] MEPC;	// CSRs.scala:45:23
  reg [63:0] MIE;	// CSRs.scala:46:22
  reg [63:0] MIP;	// CSRs.scala:47:22
  reg [63:0] MSTATUS;	// CSRs.scala:48:26
  reg [63:0] MSCRATCH;	// CSRs.scala:49:27
  always @(posedge clock) begin
    if (reset) begin
      MTVEC <= 64'h0;	// CSRs.scala:43:24
      MCAUSE <= 64'h0;	// CSRs.scala:43:24, :44:25
      MEPC <= 64'h0;	// CSRs.scala:43:24, :45:23
      MIE <= 64'h0;	// CSRs.scala:43:24, :46:22
      MIP <= 64'h0;	// CSRs.scala:43:24, :47:22
      MSTATUS <= 64'h0;	// CSRs.scala:43:24, :48:26
      MSCRATCH <= 64'h0;	// CSRs.scala:43:24, :49:27
    end
    else begin
      automatic logic [11:0] _T = io_CSRWb_rd | io_CSRTr_rd;	// CSRs.scala:56:24
      automatic logic        _T_1 = _T == 12'h305;	// CSRs.scala:56:{24,38}
      automatic logic        _T_2 = _T == 12'h342;	// CSRs.scala:56:{24,38}
      automatic logic        _T_3 = _T == 12'h341;	// CSRs.scala:56:{24,38}
      automatic logic        _T_4 = _T == 12'h304;	// CSRs.scala:56:{24,38}
      automatic logic        _T_5 = _T == 12'h344;	// CSRs.scala:56:{24,38}
      automatic logic        _T_6 = _T == 12'h300;	// CSRs.scala:56:{24,38}
      if (_T_1) begin	// CSRs.scala:56:38
        if (io_CSRWb_csr_wen)
          MTVEC <= io_CSRWb_csr_wdata;	// CSRs.scala:43:24
        else if (io_CSRTr_csr_wen)
          MTVEC <= io_CSRTr_csr_wdata;	// CSRs.scala:43:24
        else
          MTVEC <= 64'h0;	// CSRs.scala:43:24
      end
      if (_T_1 | ~_T_2) begin	// CSRs.scala:44:25, :56:38
      end
      else if (io_CSRWb_csr_wen)	// CSRs.scala:44:25, :56:38
        MCAUSE <= io_CSRWb_csr_wdata;	// CSRs.scala:44:25
      else if (io_CSRTr_csr_wen)	// CSRs.scala:44:25, :56:38
        MCAUSE <= io_CSRTr_csr_wdata;	// CSRs.scala:44:25
      else	// CSRs.scala:44:25, :56:38
        MCAUSE <= 64'h0;	// CSRs.scala:43:24, :44:25
      if (_T_1 | _T_2 | ~_T_3) begin	// CSRs.scala:45:23, :56:38
      end
      else if (io_CSRWb_csr_wen)	// CSRs.scala:45:23, :56:38
        MEPC <= io_CSRWb_csr_wdata;	// CSRs.scala:45:23
      else if (io_CSRTr_csr_wen)	// CSRs.scala:45:23, :56:38
        MEPC <= io_CSRTr_csr_wdata;	// CSRs.scala:45:23
      else	// CSRs.scala:45:23, :56:38
        MEPC <= 64'h0;	// CSRs.scala:43:24, :45:23
      if (_T_1 | _T_2 | _T_3 | ~_T_4) begin	// CSRs.scala:46:22, :56:38
      end
      else if (io_CSRWb_csr_wen)	// CSRs.scala:46:22, :56:38
        MIE <= io_CSRWb_csr_wdata;	// CSRs.scala:46:22
      else if (io_CSRTr_csr_wen)	// CSRs.scala:46:22, :56:38
        MIE <= io_CSRTr_csr_wdata;	// CSRs.scala:46:22
      else	// CSRs.scala:46:22, :56:38
        MIE <= 64'h0;	// CSRs.scala:43:24, :46:22
      if (_T_1 | _T_2 | _T_3 | _T_4 | ~_T_5) begin	// CSRs.scala:52:23, :56:38
        if (io_timer_int)
          MIP <= {MIP[63:8], 1'h1, MIP[6:0]};	// CSRs.scala:47:22, :53:{23,39}, Cat.scala:33:92
      end
      else if (io_CSRWb_csr_wen)	// CSRs.scala:52:23, :56:38
        MIP <= io_CSRWb_csr_wdata;	// CSRs.scala:47:22
      else if (io_CSRTr_csr_wen)	// CSRs.scala:52:23, :56:38
        MIP <= io_CSRTr_csr_wdata;	// CSRs.scala:47:22
      else	// CSRs.scala:52:23, :56:38
        MIP <= 64'h0;	// CSRs.scala:43:24, :47:22
      if (_T_1 | _T_2 | _T_3 | _T_4 | _T_5 | ~_T_6) begin	// CSRs.scala:48:26, :56:38
      end
      else if (io_CSRWb_csr_wen)	// CSRs.scala:48:26, :56:38
        MSTATUS <= io_CSRWb_csr_wdata;	// CSRs.scala:48:26
      else if (io_CSRTr_csr_wen)	// CSRs.scala:48:26, :56:38
        MSTATUS <= io_CSRTr_csr_wdata;	// CSRs.scala:48:26
      else	// CSRs.scala:48:26, :56:38
        MSTATUS <= 64'h0;	// CSRs.scala:43:24, :48:26
      if (_T_1 | _T_2 | _T_3 | _T_4 | _T_5 | _T_6 | _T != 12'h340) begin	// CSRs.scala:49:27, :56:{24,38}
      end
      else if (io_CSRWb_csr_wen)	// CSRs.scala:49:27, :56:{24,38}
        MSCRATCH <= io_CSRWb_csr_wdata;	// CSRs.scala:49:27
      else if (io_CSRTr_csr_wen)	// CSRs.scala:49:27, :56:{24,38}
        MSCRATCH <= io_CSRTr_csr_wdata;	// CSRs.scala:49:27
      else	// CSRs.scala:49:27, :56:{24,38}
        MSCRATCH <= 64'h0;	// CSRs.scala:43:24, :49:27
    end
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:2675:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:2675:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:2675:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:2675:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:2675:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:2675:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:2675:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:2675:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:2675:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:2675:10
      automatic logic [31:0] _RANDOM_6;	// <stdin>:2675:10
      automatic logic [31:0] _RANDOM_7;	// <stdin>:2675:10
      automatic logic [31:0] _RANDOM_8;	// <stdin>:2675:10
      automatic logic [31:0] _RANDOM_9;	// <stdin>:2675:10
      automatic logic [31:0] _RANDOM_10;	// <stdin>:2675:10
      automatic logic [31:0] _RANDOM_11;	// <stdin>:2675:10
      automatic logic [31:0] _RANDOM_12;	// <stdin>:2675:10
      automatic logic [31:0] _RANDOM_13;	// <stdin>:2675:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:2675:10
        `INIT_RANDOM_PROLOG_	// <stdin>:2675:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:2675:10
        _RANDOM_0 = `RANDOM;	// <stdin>:2675:10
        _RANDOM_1 = `RANDOM;	// <stdin>:2675:10
        _RANDOM_2 = `RANDOM;	// <stdin>:2675:10
        _RANDOM_3 = `RANDOM;	// <stdin>:2675:10
        _RANDOM_4 = `RANDOM;	// <stdin>:2675:10
        _RANDOM_5 = `RANDOM;	// <stdin>:2675:10
        _RANDOM_6 = `RANDOM;	// <stdin>:2675:10
        _RANDOM_7 = `RANDOM;	// <stdin>:2675:10
        _RANDOM_8 = `RANDOM;	// <stdin>:2675:10
        _RANDOM_9 = `RANDOM;	// <stdin>:2675:10
        _RANDOM_10 = `RANDOM;	// <stdin>:2675:10
        _RANDOM_11 = `RANDOM;	// <stdin>:2675:10
        _RANDOM_12 = `RANDOM;	// <stdin>:2675:10
        _RANDOM_13 = `RANDOM;	// <stdin>:2675:10
        MTVEC = {_RANDOM_0, _RANDOM_1};	// CSRs.scala:43:24
        MCAUSE = {_RANDOM_2, _RANDOM_3};	// CSRs.scala:44:25
        MEPC = {_RANDOM_4, _RANDOM_5};	// CSRs.scala:45:23
        MIE = {_RANDOM_6, _RANDOM_7};	// CSRs.scala:46:22
        MIP = {_RANDOM_8, _RANDOM_9};	// CSRs.scala:47:22
        MSTATUS = {_RANDOM_10, _RANDOM_11};	// CSRs.scala:48:26
        MSCRATCH = {_RANDOM_12, _RANDOM_13};	// CSRs.scala:49:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:2675:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:2675:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_CSRDe_csr_rdata = io_CSRDe_csr_raddr == 12'h340 ? MSCRATCH : io_CSRDe_csr_raddr == 12'h300 ? MSTATUS :
                io_CSRDe_csr_raddr == 12'h344 | io_CSRDe_csr_raddr == 12'h304 ? MIE : io_CSRDe_csr_raddr ==
                12'h341 ? MEPC : io_CSRDe_csr_raddr == 12'h342 ? MCAUSE : io_CSRDe_csr_raddr == 12'h305 ?
                MTVEC : 64'h0;	// <stdin>:2675:10, CSRs.scala:43:24, :44:25, :45:23, :46:22, :48:26, :49:27, :56:38, Mux.scala:81:{58,61}
  assign io_CSRTr_MTVEC = MTVEC;	// <stdin>:2675:10, CSRs.scala:43:24
  assign io_CSRTr_MCAUSE = MCAUSE;	// <stdin>:2675:10, CSRs.scala:44:25
  assign io_CSRTr_MEPC = MEPC;	// <stdin>:2675:10, CSRs.scala:45:23
  assign io_CSRTr_MIE = MIE;	// <stdin>:2675:10, CSRs.scala:46:22
  assign io_CSRTr_MIP = MIP;	// <stdin>:2675:10, CSRs.scala:47:22
  assign io_CSRTr_MSTATUS = MSTATUS;	// <stdin>:2675:10, CSRs.scala:48:26
endmodule

module Trap(	// <stdin>:2764:10
  input         clock,
                reset,
                io_ex_hasinst,
                io_mem_hasinst,
                io_wb_hasinst,
  input  [63:0] io_csrtr_MTVEC,
                io_csrtr_MCAUSE,
                io_csrtr_MEPC,
                io_csrtr_MIE,
                io_csrtr_MIP,
                io_csrtr_MSTATUS,
  input  [31:0] io_inst,
                io_pc,
  output [11:0] io_csrtr_rd,
  output        io_csrtr_csr_wen,
  output [63:0] io_csrtr_csr_wdata,
  output        io_fctr_pop_NOP,
  output [2:0]  io_fctr_trap_state,
  output        io_fctr_jump_flag,
  output [31:0] io_fctr_jump_pc);

  reg  [63:0]      cause;	// Trap.scala:45:24
  reg  [31:0]      pc;	// Trap.scala:46:21
  reg  [2:0]       state;	// Trap.scala:48:24
  wire             _T = state == 3'h0;	// Trap.scala:48:24, :64:18
  wire             _T_2 = io_inst == 32'h73 & io_csrtr_MSTATUS[3];	// Trap.scala:52:36, :71:{26,57}
  wire             _T_3 = io_inst == 32'h30200073;	// Trap.scala:80:32
  wire             _T_7 = io_csrtr_MIP[7] & io_csrtr_MSTATUS[3] & io_csrtr_MIE[7];	// Trap.scala:52:36, :85:{36,57,72}
  wire             _T_24 = io_csrtr_MCAUSE == 64'h8000000000000007;	// Trap.scala:131:36
  wire [7:0][63:0] _GEN = {{{io_csrtr_MSTATUS[63:4], io_csrtr_MSTATUS[7], io_csrtr_MSTATUS[2:0]}}, {_T_24 ?
                {io_csrtr_MIP[63:8], 1'h0, io_csrtr_MIP[6:0]} : 64'h0}, {64'h0}, {{io_csrtr_MSTATUS[63:8],
                io_csrtr_MSTATUS[3], io_csrtr_MSTATUS[6:4], 1'h0, io_csrtr_MSTATUS[2:0]}}, {cause},
                {{32'h0, pc}}, {64'h0}, {64'h0}};	// Cat.scala:33:92, Trap.scala:45:24, :46:21, :52:36, :58:24, :64:18, :67:32, :104:32, :111:32, :119:{32,55,100,133}, :131:36, :133:{40,59,84}, :143:{32,55,79,100}
  wire [7:0][11:0] _GEN_0 = {{12'h300}, {_T_24 ? 12'h344 : 12'h0}, {12'h0}, {12'h300}, {12'h342}, {12'h341}, {12'h0},
                {12'h0}};	// Trap.scala:61:17, :64:18, :69:25, :106:25, :113:25, :121:25, :131:36, :135:33, :145:25
  wire             _T_26 = state == 3'h4;	// Trap.scala:48:24, :115:19, :154:18
  always @(posedge clock) begin
    if (reset) begin
      cause <= 64'h0;	// Trap.scala:45:24
      pc <= 32'h0;	// Trap.scala:46:21
      state <= 3'h0;	// Trap.scala:48:24
    end
    else begin
      automatic logic            _GEN_1;	// Trap.scala:46:21, :80:62, :85:76
      automatic logic            _GEN_2 = io_ex_hasinst | io_mem_hasinst | io_wb_hasinst;	// Trap.scala:48:24, :99:70, :100:23
      automatic logic [7:0][2:0] _GEN_3;	// Trap.scala:48:24, :64:18, :71:74, :99:70, :108:19, :115:19, :123:19, :126:70, :139:19, :147:19
      _GEN_1 = _T_3 | ~_T_7;	// Trap.scala:46:21, :80:{32,62}, :85:{57,76}
      if (_T) begin	// Trap.scala:64:18
        if (_T_2)	// Trap.scala:71:57
          cause <= 64'hB;	// Trap.scala:45:24, :75:23
        else if (_GEN_1) begin	// Trap.scala:46:21, :71:57, :80:62, :85:76
        end
        else	// Trap.scala:46:21, :71:57, :80:62, :85:76
          cause <= 64'h8000000000000007;	// Trap.scala:45:24, :131:36
      end
      if (_T & (_T_2 | ~_GEN_1))	// Trap.scala:46:21, :64:18, :71:{57,74}, :74:20, :80:62, :85:76
        pc <= io_pc;	// Trap.scala:46:21
      _GEN_3 = {{3'h0}, {3'h7}, {_GEN_2 ? state : 3'h6}, {3'h0}, {3'h4}, {3'h3}, {_GEN_2 ? state : 3'h2},
                                                {_T_2 ? 3'h1 : _T_3 ? 3'h5 : _T_7 ? 3'h1 : state}};	// Trap.scala:48:24, :64:18, :71:{57,74}, :79:23, :80:{32,62}, :83:23, :85:{57,76}, :94:23, :99:70, :100:23, :108:19, :115:19, :123:19, :126:70, :127:23, :139:19, :147:19
      state <= _GEN_3[state];	// Trap.scala:48:24, :64:18, :71:74, :99:70, :108:19, :115:19, :123:19, :126:70, :139:19, :147:19
    end
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:2764:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:2764:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:2764:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:2764:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:2764:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:2764:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:2764:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:2764:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:2764:10
        `INIT_RANDOM_PROLOG_	// <stdin>:2764:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:2764:10
        _RANDOM_0 = `RANDOM;	// <stdin>:2764:10
        _RANDOM_1 = `RANDOM;	// <stdin>:2764:10
        _RANDOM_2 = `RANDOM;	// <stdin>:2764:10
        _RANDOM_3 = `RANDOM;	// <stdin>:2764:10
        cause = {_RANDOM_0, _RANDOM_1};	// Trap.scala:45:24
        pc = _RANDOM_2;	// Trap.scala:46:21
        state = _RANDOM_3[2:0];	// Trap.scala:48:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:2764:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:2764:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_csrtr_rd = _GEN_0[state];	// <stdin>:2764:10, Trap.scala:48:24, :61:17, :64:18, :69:25, :106:25, :113:25, :121:25, :131:36, :145:25
  assign io_csrtr_csr_wen = ~_T & state != 3'h1 & (state == 3'h2 | state == 3'h3 | state == 3'h4 | state != 3'h5 &
                (state == 3'h6 ? _T_24 : (&state)));	// <stdin>:2764:10, Trap.scala:48:24, :59:22, :64:18, :68:30, :79:23, :83:23, :100:23, :105:30, :108:19, :115:19, :127:23, :131:36
  assign io_csrtr_csr_wdata = _GEN[state];	// <stdin>:2764:10, Trap.scala:48:24, :58:24, :64:18, :67:32, :104:32, :111:32, :119:32, :131:36, :143:32
  assign io_fctr_pop_NOP = _T & (_T_2 | _T_3 | _T_7);	// <stdin>:2764:10, Trap.scala:62:21, :64:18, :71:{57,74}, :78:33, :80:{32,62}, :85:57
  assign io_fctr_trap_state = state;	// <stdin>:2764:10, Trap.scala:48:24
  assign io_fctr_jump_flag = _T_26 | (&state);	// <stdin>:2764:10, Trap.scala:48:24, :154:18, :156:31
  assign io_fctr_jump_pc = _T_26 ? io_csrtr_MTVEC[31:0] : (&state) ? io_csrtr_MEPC[31:0] : 32'h0;	// <stdin>:2764:10, Trap.scala:46:21, :48:24, :153:21, :154:18, :157:29, :161:29
endmodule

module AXIArbitor(	// <stdin>:2898:10
  input         clock,
                reset,
                io_master0_req_valid,
                io_master0_req_bits_rw,
  input  [31:0] io_master0_req_bits_addr,
  input  [63:0] io_master0_req_bits_data,
  input  [7:0]  io_master0_req_bits_mask,
  input         io_master1_req_valid,
                io_master1_req_bits_rw,
  input  [31:0] io_master1_req_bits_addr,
  input  [63:0] io_master1_req_bits_data,
  input         io_master2_req_valid,
                io_master2_req_bits_rw,
  input  [31:0] io_master2_req_bits_addr,
  input  [63:0] io_master2_req_bits_data,
  input         io_AXI_O_aw_ready,
                io_AXI_O_w_ready,
                io_AXI_O_b_valid,
                io_AXI_O_ar_ready,
                io_AXI_O_r_valid,
  input  [63:0] io_AXI_O_r_bits_data,
  input         io_AXI_O_r_bits_last,
  output        io_master0_resp_valid,
  output [63:0] io_master0_resp_bits_data,
  output        io_master1_resp_valid,
  output [63:0] io_master1_resp_bits_data,
  output        io_master1_resp_bits_choose,
                io_master2_resp_valid,
  output [63:0] io_master2_resp_bits_data,
  output        io_master2_resp_bits_choose,
                io_AXI_O_aw_valid,
  output [31:0] io_AXI_O_aw_bits_addr,
  output [7:0]  io_AXI_O_aw_bits_len,
  output        io_AXI_O_w_valid,
  output [63:0] io_AXI_O_w_bits_data,
  output [7:0]  io_AXI_O_w_bits_strb,
  output        io_AXI_O_w_bits_last,
                io_AXI_O_ar_valid,
  output [31:0] io_AXI_O_ar_bits_addr,
  output [7:0]  io_AXI_O_ar_bits_len);

  wire [3:0]       master_choose;	// <stdin>:2903:5
  assign master_choose = io_master0_req_valid ? 4'h9 : io_master1_req_valid ? 4'hA : io_master2_req_valid ? 4'hC :
                4'h0;	// <stdin>:2904:22, AXIArbitor.scala:52:19, Mux.scala:101:16
  reg  [3:0]       choose_buffer;	// AXIArbitor.scala:60:32
  reg  [31:0]      addr;	// AXIArbitor.scala:64:23
  reg  [3:0]       burst_len;	// AXIArbitor.scala:67:28
  reg  [1:0]       state;	// AXIArbitor.scala:138:24
  reg              aw_comp;	// AXIArbitor.scala:141:26
  reg              w_comp;	// AXIArbitor.scala:142:25
  reg  [3:0]       w_count;	// AXIArbitor.scala:144:26
  wire             _T = state == 2'h0;	// AXIArbitor.scala:138:24, :203:18
  wire             _T_2 = state == 2'h1;	// AXIArbitor.scala:138:24, :203:18, :213:27
  wire             _GEN = _T | ~_T_2;	// AXIArbitor.scala:166:27, :203:18
  wire [7:0]       _GEN_0 = {4'h0, burst_len};	// <stdin>:2904:22, AXIArbitor.scala:67:28, :220:34
  wire             _GEN_1 = ~_T & _T_2 & ~aw_comp;	// AXIArbitor.scala:141:26, :174:23, :203:18, :221:37
  wire             _GEN_2 = _T | ~(_T_2 & choose_buffer[3]);	// AXIArbitor.scala:60:32, :104:30, :177:26, :203:18, :225:34
  wire             _GEN_3 = ~_T & _T_2 & burst_len == w_count;	// AXIArbitor.scala:67:28, :144:26, :174:23, :179:26, :203:18, :227:51
  wire             _GEN_4 = ~_T & _T_2 & ~w_comp;	// AXIArbitor.scala:142:25, :174:23, :181:22, :203:18, :228:36
  wire             _T_4 = aw_comp & w_comp & ~_T & _T_2 & io_AXI_O_b_valid;	// AXIArbitor.scala:141:26, :142:25, :174:23, :203:18, :236:36
  wire             _GEN_5 = ~(choose_buffer[0]) & choose_buffer[1];	// AXIArbitor.scala:60:32, :108:30, :109:30, :157:27, :242:39, :244:45
  wire             _GEN_6 = ~(choose_buffer[0]) & ~(choose_buffer[1]);	// AXIArbitor.scala:60:32, :108:30, :109:30, :157:27, :160:27, :242:39, :244:45, :247:43
  wire             _T_7 = state == 2'h2;	// AXIArbitor.scala:138:24, :171:28, :203:18
  wire             _GEN_7 = ~_T & ~_T_2 & _T_7;	// AXIArbitor.scala:166:27, :174:23, :196:23, :203:18
  wire             _GEN_8 = _T | _T_2 | ~_T_7;	// AXIArbitor.scala:188:27, :203:18
  wire             _GEN_9 = io_AXI_O_r_valid & choose_buffer[0];	// AXIArbitor.scala:60:32, :108:30, :155:31, :265:55, :266:39
  wire             _GEN_10 = ~io_AXI_O_r_valid | choose_buffer[0] | ~(choose_buffer[1]);	// AXIArbitor.scala:60:32, :108:30, :109:30, :158:31, :160:27, :244:45, :247:43, :265:55, :266:39
  wire             _GEN_11 = ~io_AXI_O_r_valid | choose_buffer[0] | choose_buffer[1];	// AXIArbitor.scala:60:32, :108:30, :109:30, :158:31, :161:31, :265:55, :266:39
  wire             _GEN_12 = ~_T & ~_T_2 & ~_T_7 & (&state) & io_AXI_O_r_valid & io_AXI_O_r_bits_last;	// AXIArbitor.scala:138:24, :152:12, :166:27, :174:23, :188:27, :203:18
  wire             _GEN_13 = _T_2 | _T_7 | ~(&state);	// AXIArbitor.scala:138:24, :155:31, :203:18
  wire [3:0][63:0] _GEN_14 = {{_GEN_13 ? 64'h0 : _GEN_12 ? (choose_buffer[0] | _GEN_9 ? io_AXI_O_r_bits_data : 64'h0) :
                _GEN_9 ? io_AXI_O_r_bits_data : 64'h0}, {64'h0}, {64'h0}, {64'h0}};	// AXIArbitor.scala:60:32, :108:30, :152:12, :155:31, :203:18, :265:55, :266:39, :277:25, :281:39, :283:47, Mux.scala:101:16
  wire             _GEN_15 = ~_GEN_12 | choose_buffer[0];	// AXIArbitor.scala:60:32, :108:30, :152:12, :203:18, :265:55, :277:25, :281:39
  wire [3:0][63:0] _GEN_16 = {{_GEN_13 ? 64'h0 : _GEN_15 ? (_GEN_10 ? 64'h0 : io_AXI_O_r_bits_data) : choose_buffer[1] |
                ~_GEN_10 ? io_AXI_O_r_bits_data : 64'h0}, {64'h0}, {64'h0}, {64'h0}};	// AXIArbitor.scala:60:32, :109:30, :155:31, :158:31, :203:18, :265:55, :266:39, :277:25, :281:39, :284:45, :286:47, Mux.scala:101:16
  wire [3:0][63:0] _GEN_17 = {{_GEN_13 ? 64'h0 : _GEN_15 ? (_GEN_11 ? 64'h0 : io_AXI_O_r_bits_data) : choose_buffer[1] &
                _GEN_11 ? 64'h0 : io_AXI_O_r_bits_data}, {64'h0}, {64'h0}, {64'h0}};	// AXIArbitor.scala:60:32, :109:30, :155:31, :161:31, :203:18, :265:55, :266:39, :277:25, :281:39, :284:45, :289:47, Mux.scala:101:16
  always @(posedge clock) begin
    if (reset) begin
      choose_buffer <= 4'h0;	// <stdin>:2904:22, AXIArbitor.scala:60:32
      addr <= 32'h0;	// AXIArbitor.scala:64:23
      burst_len <= 4'h0;	// <stdin>:2904:22, AXIArbitor.scala:67:28
      state <= 2'h0;	// AXIArbitor.scala:138:24
      aw_comp <= 1'h0;	// AXIArbitor.scala:141:26, Mux.scala:101:16
      w_comp <= 1'h0;	// AXIArbitor.scala:142:25, Mux.scala:101:16
      w_count <= 4'h0;	// <stdin>:2904:22, AXIArbitor.scala:144:26
    end
    else begin
      automatic logic [3:0][1:0] _GEN_18;	// AXIArbitor.scala:203:18, :207:35, :236:46, :259:26
      if (_T) begin	// AXIArbitor.scala:203:18
        if (master_choose[3])	// AXIArbitor.scala:70:33
          choose_buffer <= master_choose;	// AXIArbitor.scala:60:32, :70:33
        else	// AXIArbitor.scala:70:33
          choose_buffer <= 4'h0;	// <stdin>:2904:22, AXIArbitor.scala:60:32
      end
      if (master_choose[3]) begin	// AXIArbitor.scala:70:33
        if (master_choose[0])	// AXIArbitor.scala:70:33, :74:30
          addr <= io_master0_req_bits_addr;	// AXIArbitor.scala:64:23
        else if (master_choose[1])	// AXIArbitor.scala:70:33, :74:30, :75:30
          addr <= io_master1_req_bits_addr;	// AXIArbitor.scala:64:23
        else if (master_choose[2])	// AXIArbitor.scala:70:33, :74:30, :75:30, :76:30
          addr <= io_master2_req_bits_addr;	// AXIArbitor.scala:64:23
        else	// AXIArbitor.scala:70:33, :74:30, :75:30, :76:30
          addr <= 32'h0;	// AXIArbitor.scala:64:23
      end
      else	// AXIArbitor.scala:70:33
        addr <= 32'h0;	// AXIArbitor.scala:64:23
      if (~(master_choose[3]) | master_choose[0])	// AXIArbitor.scala:70:33, :74:30, :126:21
        burst_len <= 4'h0;	// <stdin>:2904:22, AXIArbitor.scala:67:28
      else if (master_choose[1])	// AXIArbitor.scala:70:33, :74:30, :75:30, :126:21
        burst_len <= 4'hF;	// AXIArbitor.scala:67:28, Mux.scala:101:16
      else	// AXIArbitor.scala:70:33, :74:30, :75:30, :126:21
        burst_len <= {4{master_choose[2]}};	// AXIArbitor.scala:67:28, :70:33, :76:30, Mux.scala:101:16
      _GEN_18 = {{(&state) & _GEN_12 ? 2'h0 : state}, {~_T & ~_T_2 & _T_7 & _GEN_7 & io_AXI_O_ar_ready ?
                                                2'h3 : state}, {_T_4 ? 2'h0 : state}, {master_choose[3] ? (master_choose[3] &
                                                (master_choose[0] ? io_master0_req_bits_rw : master_choose[1] ? io_master1_req_bits_rw :
                                                master_choose[2] & io_master2_req_bits_rw) ? 2'h2 : 2'h1) : state}};	// AXIArbitor.scala:70:{19,33}, :74:30, :75:30, :76:30, :138:24, :151:13, :152:12, :166:27, :168:27, :171:28, :174:23, :196:23, :203:18, :207:35, :210:30, :211:27, :213:27, :236:{36,46}, :237:23, :259:26, :260:23, :277:25, Mux.scala:101:16
      state <= _GEN_18[state];	// AXIArbitor.scala:138:24, :203:18, :207:35, :236:46, :259:26
      if (_GEN) begin	// AXIArbitor.scala:166:27, :203:18
      end
      else begin	// AXIArbitor.scala:166:27, :203:18
        aw_comp <= ~_T_4 & (_GEN_1 & io_AXI_O_aw_ready | aw_comp);	// AXIArbitor.scala:141:26, :174:23, :203:18, :222:{21,27,46}, :236:{36,46}, :238:25
        w_comp <= ~_T_4 & (_GEN_4 & io_AXI_O_w_ready & _GEN_3 | w_comp);	// AXIArbitor.scala:142:25, :179:26, :181:22, :203:18, :222:21, :229:{20,26,64}, :236:{36,46}, :238:25, :239:24
        if (_T_4)	// AXIArbitor.scala:236:36
          w_count <= 4'h0;	// <stdin>:2904:22, AXIArbitor.scala:144:26
        else	// AXIArbitor.scala:236:36
          w_count <= w_count + 4'h1;	// AXIArbitor.scala:144:26, :231:32
      end
    end
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:2898:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:2898:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:2898:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:2898:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:2898:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:2898:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:2898:10
        `INIT_RANDOM_PROLOG_	// <stdin>:2898:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:2898:10
        _RANDOM_0 = `RANDOM;	// <stdin>:2898:10
        _RANDOM_1 = `RANDOM;	// <stdin>:2898:10
        choose_buffer = _RANDOM_0[3:0];	// AXIArbitor.scala:60:32
        addr = {_RANDOM_0[31:5], _RANDOM_1[4:0]};	// AXIArbitor.scala:60:32, :64:23
        burst_len = _RANDOM_1[8:5];	// AXIArbitor.scala:64:23, :67:28
        state = _RANDOM_1[10:9];	// AXIArbitor.scala:64:23, :138:24
        aw_comp = _RANDOM_1[11];	// AXIArbitor.scala:64:23, :141:26
        w_comp = _RANDOM_1[12];	// AXIArbitor.scala:64:23, :142:25
        w_count = _RANDOM_1[16:13];	// AXIArbitor.scala:64:23, :144:26
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:2898:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:2898:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_master0_resp_valid = ~_T & (_T_2 ? _T_4 & choose_buffer[0] : ~_T_7 & (&state) & _GEN_12 & choose_buffer[0]);	// <stdin>:2898:10, AXIArbitor.scala:60:32, :108:30, :138:24, :152:12, :154:27, :174:23, :188:27, :203:18, :236:{36,46}, :242:39
  assign io_master0_resp_bits_data = _GEN_14[state];	// <stdin>:2898:10, AXIArbitor.scala:138:24, :155:31, :203:18
  assign io_master1_resp_valid = ~_T & (_T_2 ? _T_4 & _GEN_5 : ~_T_7 & (&state) & _GEN_12 & _GEN_5);	// <stdin>:2898:10, AXIArbitor.scala:138:24, :152:12, :157:27, :174:23, :188:27, :203:18, :236:{36,46}, :242:39, :244:45
  assign io_master1_resp_bits_data = _GEN_16[state];	// <stdin>:2898:10, AXIArbitor.scala:138:24, :158:31, :203:18
  assign io_master1_resp_bits_choose = choose_buffer[1];	// <stdin>:2898:10, AXIArbitor.scala:60:32, :109:30
  assign io_master2_resp_valid = ~_T & (_T_2 ? _T_4 & _GEN_6 : ~_T_7 & (&state) & _GEN_12 & _GEN_6);	// <stdin>:2898:10, AXIArbitor.scala:138:24, :152:12, :160:27, :174:23, :188:27, :203:18, :236:{36,46}, :242:39, :244:45
  assign io_master2_resp_bits_data = _GEN_17[state];	// <stdin>:2898:10, AXIArbitor.scala:138:24, :161:31, :203:18
  assign io_master2_resp_bits_choose = choose_buffer[2];	// <stdin>:2898:10, AXIArbitor.scala:60:32, :110:30
  assign io_AXI_O_aw_valid = _GEN_1;	// <stdin>:2898:10, AXIArbitor.scala:174:23, :203:18
  assign io_AXI_O_aw_bits_addr = _GEN ? 32'h0 : addr;	// <stdin>:2898:10, AXIArbitor.scala:64:23, :166:27, :203:18
  assign io_AXI_O_aw_bits_len = _GEN ? 8'h0 : _GEN_0;	// <stdin>:2898:10, AXIArbitor.scala:166:27, :167:26, :203:18, :220:34, Mux.scala:101:16
  assign io_AXI_O_w_valid = _GEN_4;	// <stdin>:2898:10, AXIArbitor.scala:181:22, :203:18
  assign io_AXI_O_w_bits_data = _GEN_2 ? 64'h0 : choose_buffer[0] ? io_master0_req_bits_data : choose_buffer[1] ?
                io_master1_req_bits_data : choose_buffer[2] ? io_master2_req_bits_data : 64'h0;	// <stdin>:2898:10, AXIArbitor.scala:60:32, :108:30, :109:30, :110:30, :177:26, :203:18, Mux.scala:101:16
  assign io_AXI_O_w_bits_strb = _GEN_2 ? 8'h0 : choose_buffer[0] ? io_master0_req_bits_mask : choose_buffer[1] ? 8'hFF :
                {8{choose_buffer[2]}};	// <stdin>:2898:10, AXIArbitor.scala:60:32, :108:30, :109:30, :110:30, :177:26, :178:26, :203:18, Mux.scala:101:16
  assign io_AXI_O_w_bits_last = _GEN_3;	// <stdin>:2898:10, AXIArbitor.scala:179:26, :203:18
  assign io_AXI_O_ar_valid = _GEN_7;	// <stdin>:2898:10, AXIArbitor.scala:196:23, :203:18
  assign io_AXI_O_ar_bits_addr = _GEN_8 ? 32'h0 : addr;	// <stdin>:2898:10, AXIArbitor.scala:64:23, :188:27, :203:18
  assign io_AXI_O_ar_bits_len = _GEN_8 ? 8'h0 : _GEN_0;	// <stdin>:2898:10, AXIArbitor.scala:188:27, :189:26, :203:18, :220:34, Mux.scala:101:16
endmodule

module Cache(	// <stdin>:3134:10, :6946:10
  input         clock,
                reset,
                io_cpu_req_valid,
  input  [31:0] io_cpu_req_bits_addr,
  input  [63:0] io_cpu_req_bits_data,
  input  [7:0]  io_cpu_req_bits_mask,
  input         io_axi_resp_valid,
  input  [63:0] io_axi_resp_bits_data,
  input         io_axi_resp_bits_choose,
  output        io_cpu_resp_valid,
  output [63:0] io_cpu_resp_bits_data,
  output        io_axi_req_valid,
                io_axi_req_bits_rw,
  output [31:0] io_axi_req_bits_addr,
  output [63:0] io_axi_req_bits_data,
  output [2:0]  io_fccache_state,
  output        io_fccache_hit);

  wire              _T_642;	// Cache.scala:272:91
  wire              _T_641;	// Cache.scala:272:91
  wire              _T_640;	// Cache.scala:272:91
  wire              _T_639;	// Cache.scala:272:91
  wire              _T_638;	// Cache.scala:272:91
  wire              _T_637;	// Cache.scala:272:91
  wire              _T_636;	// Cache.scala:272:91
  wire              _T_635;	// Cache.scala:272:91
  wire              _T_632;	// Cache.scala:272:91
  wire              _T_631;	// Cache.scala:272:91
  wire              _T_630;	// Cache.scala:272:91
  wire              _T_629;	// Cache.scala:272:91
  wire              _T_628;	// Cache.scala:272:91
  wire              _T_627;	// Cache.scala:272:91
  wire              _T_626;	// Cache.scala:272:91
  wire              _T_625;	// Cache.scala:272:91
  wire              _T_622;	// Cache.scala:272:91
  wire              _T_621;	// Cache.scala:272:91
  wire              _T_620;	// Cache.scala:272:91
  wire              _T_619;	// Cache.scala:272:91
  wire              _T_618;	// Cache.scala:272:91
  wire              _T_617;	// Cache.scala:272:91
  wire              _T_616;	// Cache.scala:272:91
  wire              _T_615;	// Cache.scala:272:91
  wire              _T_612;	// Cache.scala:272:91
  wire              _T_611;	// Cache.scala:272:91
  wire              _T_610;	// Cache.scala:272:91
  wire              _T_609;	// Cache.scala:272:91
  wire              _T_608;	// Cache.scala:272:91
  wire              _T_607;	// Cache.scala:272:91
  wire              _T_606;	// Cache.scala:272:91
  wire              _T_605;	// Cache.scala:272:91
  wire              _T_602;	// Cache.scala:272:91
  wire              _T_601;	// Cache.scala:272:91
  wire              _T_600;	// Cache.scala:272:91
  wire              _T_599;	// Cache.scala:272:91
  wire              _T_598;	// Cache.scala:272:91
  wire              _T_597;	// Cache.scala:272:91
  wire              _T_596;	// Cache.scala:272:91
  wire              _T_595;	// Cache.scala:272:91
  wire              _T_592;	// Cache.scala:272:91
  wire              _T_591;	// Cache.scala:272:91
  wire              _T_590;	// Cache.scala:272:91
  wire              _T_589;	// Cache.scala:272:91
  wire              _T_588;	// Cache.scala:272:91
  wire              _T_587;	// Cache.scala:272:91
  wire              _T_586;	// Cache.scala:272:91
  wire              _T_585;	// Cache.scala:272:91
  wire              _T_582;	// Cache.scala:272:91
  wire              _T_581;	// Cache.scala:272:91
  wire              _T_580;	// Cache.scala:272:91
  wire              _T_579;	// Cache.scala:272:91
  wire              _T_578;	// Cache.scala:272:91
  wire              _T_577;	// Cache.scala:272:91
  wire              _T_576;	// Cache.scala:272:91
  wire              _T_575;	// Cache.scala:272:91
  wire              _T_572;	// Cache.scala:272:91
  wire              _T_571;	// Cache.scala:272:91
  wire              _T_570;	// Cache.scala:272:91
  wire              _T_569;	// Cache.scala:272:91
  wire              _T_568;	// Cache.scala:272:91
  wire              _T_567;	// Cache.scala:272:91
  wire              _T_566;	// Cache.scala:272:91
  wire              _T_565;	// Cache.scala:272:91
  wire              _T_562;	// Cache.scala:272:91
  wire              _T_561;	// Cache.scala:272:91
  wire              _T_560;	// Cache.scala:272:91
  wire              _T_559;	// Cache.scala:272:91
  wire              _T_558;	// Cache.scala:272:91
  wire              _T_557;	// Cache.scala:272:91
  wire              _T_556;	// Cache.scala:272:91
  wire              _T_555;	// Cache.scala:272:91
  wire              _T_552;	// Cache.scala:272:91
  wire              _T_551;	// Cache.scala:272:91
  wire              _T_550;	// Cache.scala:272:91
  wire              _T_549;	// Cache.scala:272:91
  wire              _T_548;	// Cache.scala:272:91
  wire              _T_547;	// Cache.scala:272:91
  wire              _T_546;	// Cache.scala:272:91
  wire              _T_545;	// Cache.scala:272:91
  wire              _T_542;	// Cache.scala:272:91
  wire              _T_541;	// Cache.scala:272:91
  wire              _T_540;	// Cache.scala:272:91
  wire              _T_539;	// Cache.scala:272:91
  wire              _T_538;	// Cache.scala:272:91
  wire              _T_537;	// Cache.scala:272:91
  wire              _T_536;	// Cache.scala:272:91
  wire              _T_535;	// Cache.scala:272:91
  wire              _T_532;	// Cache.scala:272:91
  wire              _T_531;	// Cache.scala:272:91
  wire              _T_530;	// Cache.scala:272:91
  wire              _T_529;	// Cache.scala:272:91
  wire              _T_528;	// Cache.scala:272:91
  wire              _T_527;	// Cache.scala:272:91
  wire              _T_526;	// Cache.scala:272:91
  wire              _T_525;	// Cache.scala:272:91
  wire              _T_522;	// Cache.scala:272:91
  wire              _T_521;	// Cache.scala:272:91
  wire              _T_520;	// Cache.scala:272:91
  wire              _T_519;	// Cache.scala:272:91
  wire              _T_518;	// Cache.scala:272:91
  wire              _T_517;	// Cache.scala:272:91
  wire              _T_516;	// Cache.scala:272:91
  wire              _T_515;	// Cache.scala:272:91
  wire              _T_512;	// Cache.scala:272:91
  wire              _T_511;	// Cache.scala:272:91
  wire              _T_510;	// Cache.scala:272:91
  wire              _T_509;	// Cache.scala:272:91
  wire              _T_508;	// Cache.scala:272:91
  wire              _T_507;	// Cache.scala:272:91
  wire              _T_506;	// Cache.scala:272:91
  wire              _T_505;	// Cache.scala:272:91
  wire              _T_502;	// Cache.scala:272:91
  wire              _T_501;	// Cache.scala:272:91
  wire              _T_500;	// Cache.scala:272:91
  wire              _T_499;	// Cache.scala:272:91
  wire              _T_498;	// Cache.scala:272:91
  wire              _T_497;	// Cache.scala:272:91
  wire              _T_496;	// Cache.scala:272:91
  wire              _T_495;	// Cache.scala:272:91
  wire              _GEN;	// Cache.scala:99:49, :193:14, :194:26
  wire              _T_492;	// Cache.scala:272:91
  wire              _T_491;	// Cache.scala:272:91
  wire              _T_490;	// Cache.scala:272:91
  wire              _T_489;	// Cache.scala:272:91
  wire              _T_488;	// Cache.scala:272:91
  wire              _T_487;	// Cache.scala:272:91
  wire              _T_486;	// Cache.scala:272:91
  wire              _T_485;	// Cache.scala:272:91
  wire              _T_481;	// Cache.scala:236:91
  wire              _T_480;	// Cache.scala:236:91
  wire              _T_479;	// Cache.scala:236:91
  wire              _T_478;	// Cache.scala:236:91
  wire              _T_477;	// Cache.scala:236:91
  wire              _T_476;	// Cache.scala:236:91
  wire              _T_475;	// Cache.scala:236:91
  wire              _T_474;	// Cache.scala:236:91
  wire              _T_471;	// Cache.scala:236:91
  wire              _T_470;	// Cache.scala:236:91
  wire              _T_469;	// Cache.scala:236:91
  wire              _T_468;	// Cache.scala:236:91
  wire              _T_467;	// Cache.scala:236:91
  wire              _T_466;	// Cache.scala:236:91
  wire              _T_465;	// Cache.scala:236:91
  wire              _T_464;	// Cache.scala:236:91
  wire              _T_461;	// Cache.scala:236:91
  wire              _T_460;	// Cache.scala:236:91
  wire              _T_459;	// Cache.scala:236:91
  wire              _T_458;	// Cache.scala:236:91
  wire              _T_457;	// Cache.scala:236:91
  wire              _T_456;	// Cache.scala:236:91
  wire              _T_455;	// Cache.scala:236:91
  wire              _T_454;	// Cache.scala:236:91
  wire              _T_451;	// Cache.scala:236:91
  wire              _T_450;	// Cache.scala:236:91
  wire              _T_449;	// Cache.scala:236:91
  wire              _T_448;	// Cache.scala:236:91
  wire              _T_447;	// Cache.scala:236:91
  wire              _T_446;	// Cache.scala:236:91
  wire              _T_445;	// Cache.scala:236:91
  wire              _T_444;	// Cache.scala:236:91
  wire              _T_441;	// Cache.scala:236:91
  wire              _T_440;	// Cache.scala:236:91
  wire              _T_439;	// Cache.scala:236:91
  wire              _T_438;	// Cache.scala:236:91
  wire              _T_437;	// Cache.scala:236:91
  wire              _T_436;	// Cache.scala:236:91
  wire              _T_435;	// Cache.scala:236:91
  wire              _T_434;	// Cache.scala:236:91
  wire              _T_431;	// Cache.scala:236:91
  wire              _T_430;	// Cache.scala:236:91
  wire              _T_429;	// Cache.scala:236:91
  wire              _T_428;	// Cache.scala:236:91
  wire              _T_427;	// Cache.scala:236:91
  wire              _T_426;	// Cache.scala:236:91
  wire              _T_425;	// Cache.scala:236:91
  wire              _T_424;	// Cache.scala:236:91
  wire              _T_421;	// Cache.scala:236:91
  wire              _T_420;	// Cache.scala:236:91
  wire              _T_419;	// Cache.scala:236:91
  wire              _T_418;	// Cache.scala:236:91
  wire              _T_417;	// Cache.scala:236:91
  wire              _T_416;	// Cache.scala:236:91
  wire              _T_415;	// Cache.scala:236:91
  wire              _T_414;	// Cache.scala:236:91
  wire              _T_411;	// Cache.scala:236:91
  wire              _T_410;	// Cache.scala:236:91
  wire              _T_409;	// Cache.scala:236:91
  wire              _T_408;	// Cache.scala:236:91
  wire              _T_407;	// Cache.scala:236:91
  wire              _T_406;	// Cache.scala:236:91
  wire              _T_405;	// Cache.scala:236:91
  wire              _T_404;	// Cache.scala:236:91
  wire              _T_401;	// Cache.scala:236:91
  wire              _T_400;	// Cache.scala:236:91
  wire              _T_399;	// Cache.scala:236:91
  wire              _T_398;	// Cache.scala:236:91
  wire              _T_397;	// Cache.scala:236:91
  wire              _T_396;	// Cache.scala:236:91
  wire              _T_395;	// Cache.scala:236:91
  wire              _T_394;	// Cache.scala:236:91
  wire              _T_391;	// Cache.scala:236:91
  wire              _T_390;	// Cache.scala:236:91
  wire              _T_389;	// Cache.scala:236:91
  wire              _T_388;	// Cache.scala:236:91
  wire              _T_387;	// Cache.scala:236:91
  wire              _T_386;	// Cache.scala:236:91
  wire              _T_385;	// Cache.scala:236:91
  wire              _T_384;	// Cache.scala:236:91
  wire              _T_381;	// Cache.scala:236:91
  wire              _T_380;	// Cache.scala:236:91
  wire              _T_379;	// Cache.scala:236:91
  wire              _T_378;	// Cache.scala:236:91
  wire              _T_377;	// Cache.scala:236:91
  wire              _T_376;	// Cache.scala:236:91
  wire              _T_375;	// Cache.scala:236:91
  wire              _T_374;	// Cache.scala:236:91
  wire              _T_371;	// Cache.scala:236:91
  wire              _T_370;	// Cache.scala:236:91
  wire              _T_369;	// Cache.scala:236:91
  wire              _T_368;	// Cache.scala:236:91
  wire              _T_367;	// Cache.scala:236:91
  wire              _T_366;	// Cache.scala:236:91
  wire              _T_365;	// Cache.scala:236:91
  wire              _T_364;	// Cache.scala:236:91
  wire              _T_361;	// Cache.scala:236:91
  wire              _T_360;	// Cache.scala:236:91
  wire              _T_359;	// Cache.scala:236:91
  wire              _T_358;	// Cache.scala:236:91
  wire              _T_357;	// Cache.scala:236:91
  wire              _T_356;	// Cache.scala:236:91
  wire              _T_355;	// Cache.scala:236:91
  wire              _T_354;	// Cache.scala:236:91
  wire              _T_351;	// Cache.scala:236:91
  wire              _T_350;	// Cache.scala:236:91
  wire              _T_349;	// Cache.scala:236:91
  wire              _T_348;	// Cache.scala:236:91
  wire              _T_347;	// Cache.scala:236:91
  wire              _T_346;	// Cache.scala:236:91
  wire              _T_345;	// Cache.scala:236:91
  wire              _T_344;	// Cache.scala:236:91
  wire              _T_341;	// Cache.scala:236:91
  wire              _T_340;	// Cache.scala:236:91
  wire              _T_339;	// Cache.scala:236:91
  wire              _T_338;	// Cache.scala:236:91
  wire              _T_337;	// Cache.scala:236:91
  wire              _T_336;	// Cache.scala:236:91
  wire              _T_335;	// Cache.scala:236:91
  wire              _T_334;	// Cache.scala:236:91
  wire              _GEN_0;	// Cache.scala:99:49, :193:14, :194:26
  wire              _T_331;	// Cache.scala:236:91
  wire              _T_330;	// Cache.scala:236:91
  wire              _T_329;	// Cache.scala:236:91
  wire              _T_328;	// Cache.scala:236:91
  wire              _T_327;	// Cache.scala:236:91
  wire              _T_326;	// Cache.scala:236:91
  wire              _T_325;	// Cache.scala:236:91
  wire              _T_324;	// Cache.scala:236:91
  wire              _T_319;	// Cache.scala:217:87
  wire              _T_318;	// Cache.scala:217:87
  wire              _T_317;	// Cache.scala:217:87
  wire              _T_316;	// Cache.scala:217:87
  wire              _T_315;	// Cache.scala:217:87
  wire              _T_314;	// Cache.scala:217:87
  wire              _T_313;	// Cache.scala:217:87
  wire              _T_312;	// Cache.scala:217:87
  wire              _T_309;	// Cache.scala:217:87
  wire              _T_308;	// Cache.scala:217:87
  wire              _T_307;	// Cache.scala:217:87
  wire              _T_306;	// Cache.scala:217:87
  wire              _T_305;	// Cache.scala:217:87
  wire              _T_304;	// Cache.scala:217:87
  wire              _T_303;	// Cache.scala:217:87
  wire              _T_302;	// Cache.scala:217:87
  wire              _T_299;	// Cache.scala:217:87
  wire              _T_298;	// Cache.scala:217:87
  wire              _T_297;	// Cache.scala:217:87
  wire              _T_296;	// Cache.scala:217:87
  wire              _T_295;	// Cache.scala:217:87
  wire              _T_294;	// Cache.scala:217:87
  wire              _T_293;	// Cache.scala:217:87
  wire              _T_292;	// Cache.scala:217:87
  wire              _T_289;	// Cache.scala:217:87
  wire              _T_288;	// Cache.scala:217:87
  wire              _T_287;	// Cache.scala:217:87
  wire              _T_286;	// Cache.scala:217:87
  wire              _T_285;	// Cache.scala:217:87
  wire              _T_284;	// Cache.scala:217:87
  wire              _T_283;	// Cache.scala:217:87
  wire              _T_282;	// Cache.scala:217:87
  wire              _T_279;	// Cache.scala:217:87
  wire              _T_278;	// Cache.scala:217:87
  wire              _T_277;	// Cache.scala:217:87
  wire              _T_276;	// Cache.scala:217:87
  wire              _T_275;	// Cache.scala:217:87
  wire              _T_274;	// Cache.scala:217:87
  wire              _T_273;	// Cache.scala:217:87
  wire              _T_272;	// Cache.scala:217:87
  wire              _T_269;	// Cache.scala:217:87
  wire              _T_268;	// Cache.scala:217:87
  wire              _T_267;	// Cache.scala:217:87
  wire              _T_266;	// Cache.scala:217:87
  wire              _T_265;	// Cache.scala:217:87
  wire              _T_264;	// Cache.scala:217:87
  wire              _T_263;	// Cache.scala:217:87
  wire              _T_262;	// Cache.scala:217:87
  wire              _T_259;	// Cache.scala:217:87
  wire              _T_258;	// Cache.scala:217:87
  wire              _T_257;	// Cache.scala:217:87
  wire              _T_256;	// Cache.scala:217:87
  wire              _T_255;	// Cache.scala:217:87
  wire              _T_254;	// Cache.scala:217:87
  wire              _T_253;	// Cache.scala:217:87
  wire              _T_252;	// Cache.scala:217:87
  wire              _T_249;	// Cache.scala:217:87
  wire              _T_248;	// Cache.scala:217:87
  wire              _T_247;	// Cache.scala:217:87
  wire              _T_246;	// Cache.scala:217:87
  wire              _T_245;	// Cache.scala:217:87
  wire              _T_244;	// Cache.scala:217:87
  wire              _T_243;	// Cache.scala:217:87
  wire              _T_242;	// Cache.scala:217:87
  wire              _T_239;	// Cache.scala:217:87
  wire              _T_238;	// Cache.scala:217:87
  wire              _T_237;	// Cache.scala:217:87
  wire              _T_236;	// Cache.scala:217:87
  wire              _T_235;	// Cache.scala:217:87
  wire              _T_234;	// Cache.scala:217:87
  wire              _T_233;	// Cache.scala:217:87
  wire              _T_232;	// Cache.scala:217:87
  wire              _T_229;	// Cache.scala:217:87
  wire              _T_228;	// Cache.scala:217:87
  wire              _T_227;	// Cache.scala:217:87
  wire              _T_226;	// Cache.scala:217:87
  wire              _T_225;	// Cache.scala:217:87
  wire              _T_224;	// Cache.scala:217:87
  wire              _T_223;	// Cache.scala:217:87
  wire              _T_222;	// Cache.scala:217:87
  wire              _T_219;	// Cache.scala:217:87
  wire              _T_218;	// Cache.scala:217:87
  wire              _T_217;	// Cache.scala:217:87
  wire              _T_216;	// Cache.scala:217:87
  wire              _T_215;	// Cache.scala:217:87
  wire              _T_214;	// Cache.scala:217:87
  wire              _T_213;	// Cache.scala:217:87
  wire              _T_212;	// Cache.scala:217:87
  wire              _T_209;	// Cache.scala:217:87
  wire              _T_208;	// Cache.scala:217:87
  wire              _T_207;	// Cache.scala:217:87
  wire              _T_206;	// Cache.scala:217:87
  wire              _T_205;	// Cache.scala:217:87
  wire              _T_204;	// Cache.scala:217:87
  wire              _T_203;	// Cache.scala:217:87
  wire              _T_202;	// Cache.scala:217:87
  wire              _T_199;	// Cache.scala:217:87
  wire              _T_198;	// Cache.scala:217:87
  wire              _T_197;	// Cache.scala:217:87
  wire              _T_196;	// Cache.scala:217:87
  wire              _T_195;	// Cache.scala:217:87
  wire              _T_194;	// Cache.scala:217:87
  wire              _T_193;	// Cache.scala:217:87
  wire              _T_192;	// Cache.scala:217:87
  wire              _T_189;	// Cache.scala:217:87
  wire              _T_188;	// Cache.scala:217:87
  wire              _T_187;	// Cache.scala:217:87
  wire              _T_186;	// Cache.scala:217:87
  wire              _T_185;	// Cache.scala:217:87
  wire              _T_184;	// Cache.scala:217:87
  wire              _T_183;	// Cache.scala:217:87
  wire              _T_182;	// Cache.scala:217:87
  wire              _T_179;	// Cache.scala:217:87
  wire              _T_178;	// Cache.scala:217:87
  wire              _T_177;	// Cache.scala:217:87
  wire              _T_176;	// Cache.scala:217:87
  wire              _T_175;	// Cache.scala:217:87
  wire              _T_174;	// Cache.scala:217:87
  wire              _T_173;	// Cache.scala:217:87
  wire              _T_172;	// Cache.scala:217:87
  wire              _GEN_1;	// Cache.scala:99:49, :193:14, :194:26
  wire              _T_169;	// Cache.scala:217:87
  wire              _T_168;	// Cache.scala:217:87
  wire              _T_167;	// Cache.scala:217:87
  wire              _T_166;	// Cache.scala:217:87
  wire              _T_165;	// Cache.scala:217:87
  wire              _T_164;	// Cache.scala:217:87
  wire              _T_163;	// Cache.scala:217:87
  wire              _T_162;	// Cache.scala:217:87
  wire              _T_159;	// Cache.scala:205:87
  wire              _T_158;	// Cache.scala:205:87
  wire              _T_157;	// Cache.scala:205:87
  wire              _T_156;	// Cache.scala:205:87
  wire              _T_155;	// Cache.scala:205:87
  wire              _T_154;	// Cache.scala:205:87
  wire              _T_153;	// Cache.scala:205:87
  wire              _T_152;	// Cache.scala:205:87
  wire              _T_149;	// Cache.scala:205:87
  wire              _T_148;	// Cache.scala:205:87
  wire              _T_147;	// Cache.scala:205:87
  wire              _T_146;	// Cache.scala:205:87
  wire              _T_145;	// Cache.scala:205:87
  wire              _T_144;	// Cache.scala:205:87
  wire              _T_143;	// Cache.scala:205:87
  wire              _T_142;	// Cache.scala:205:87
  wire              _T_139;	// Cache.scala:205:87
  wire              _T_138;	// Cache.scala:205:87
  wire              _T_137;	// Cache.scala:205:87
  wire              _T_136;	// Cache.scala:205:87
  wire              _T_135;	// Cache.scala:205:87
  wire              _T_134;	// Cache.scala:205:87
  wire              _T_133;	// Cache.scala:205:87
  wire              _T_132;	// Cache.scala:205:87
  wire              _T_129;	// Cache.scala:205:87
  wire              _T_128;	// Cache.scala:205:87
  wire              _T_127;	// Cache.scala:205:87
  wire              _T_126;	// Cache.scala:205:87
  wire              _T_125;	// Cache.scala:205:87
  wire              _T_124;	// Cache.scala:205:87
  wire              _T_123;	// Cache.scala:205:87
  wire              _T_122;	// Cache.scala:205:87
  wire              _T_119;	// Cache.scala:205:87
  wire              _T_118;	// Cache.scala:205:87
  wire              _T_117;	// Cache.scala:205:87
  wire              _T_116;	// Cache.scala:205:87
  wire              _T_115;	// Cache.scala:205:87
  wire              _T_114;	// Cache.scala:205:87
  wire              _T_113;	// Cache.scala:205:87
  wire              _T_112;	// Cache.scala:205:87
  wire              _T_109;	// Cache.scala:205:87
  wire              _T_108;	// Cache.scala:205:87
  wire              _T_107;	// Cache.scala:205:87
  wire              _T_106;	// Cache.scala:205:87
  wire              _T_105;	// Cache.scala:205:87
  wire              _T_104;	// Cache.scala:205:87
  wire              _T_103;	// Cache.scala:205:87
  wire              _T_102;	// Cache.scala:205:87
  wire              _T_99;	// Cache.scala:205:87
  wire              _T_98;	// Cache.scala:205:87
  wire              _T_97;	// Cache.scala:205:87
  wire              _T_96;	// Cache.scala:205:87
  wire              _T_95;	// Cache.scala:205:87
  wire              _T_94;	// Cache.scala:205:87
  wire              _T_93;	// Cache.scala:205:87
  wire              _T_92;	// Cache.scala:205:87
  wire              _T_89;	// Cache.scala:205:87
  wire              _T_88;	// Cache.scala:205:87
  wire              _T_87;	// Cache.scala:205:87
  wire              _T_86;	// Cache.scala:205:87
  wire              _T_85;	// Cache.scala:205:87
  wire              _T_84;	// Cache.scala:205:87
  wire              _T_83;	// Cache.scala:205:87
  wire              _T_82;	// Cache.scala:205:87
  wire              _T_79;	// Cache.scala:205:87
  wire              _T_78;	// Cache.scala:205:87
  wire              _T_77;	// Cache.scala:205:87
  wire              _T_76;	// Cache.scala:205:87
  wire              _T_75;	// Cache.scala:205:87
  wire              _T_74;	// Cache.scala:205:87
  wire              _T_73;	// Cache.scala:205:87
  wire              _T_72;	// Cache.scala:205:87
  wire              _T_69;	// Cache.scala:205:87
  wire              _T_68;	// Cache.scala:205:87
  wire              _T_67;	// Cache.scala:205:87
  wire              _T_66;	// Cache.scala:205:87
  wire              _T_65;	// Cache.scala:205:87
  wire              _T_64;	// Cache.scala:205:87
  wire              _T_63;	// Cache.scala:205:87
  wire              _T_62;	// Cache.scala:205:87
  wire              _T_59;	// Cache.scala:205:87
  wire              _T_58;	// Cache.scala:205:87
  wire              _T_57;	// Cache.scala:205:87
  wire              _T_56;	// Cache.scala:205:87
  wire              _T_55;	// Cache.scala:205:87
  wire              _T_54;	// Cache.scala:205:87
  wire              _T_53;	// Cache.scala:205:87
  wire              _T_52;	// Cache.scala:205:87
  wire              _T_49;	// Cache.scala:205:87
  wire              _T_48;	// Cache.scala:205:87
  wire              _T_47;	// Cache.scala:205:87
  wire              _T_46;	// Cache.scala:205:87
  wire              _T_45;	// Cache.scala:205:87
  wire              _T_44;	// Cache.scala:205:87
  wire              _T_43;	// Cache.scala:205:87
  wire              _T_42;	// Cache.scala:205:87
  wire              _T_39;	// Cache.scala:205:87
  wire              _T_38;	// Cache.scala:205:87
  wire              _T_37;	// Cache.scala:205:87
  wire              _T_36;	// Cache.scala:205:87
  wire              _T_35;	// Cache.scala:205:87
  wire              _T_34;	// Cache.scala:205:87
  wire              _T_33;	// Cache.scala:205:87
  wire              _T_32;	// Cache.scala:205:87
  wire              _T_29;	// Cache.scala:205:87
  wire              _T_28;	// Cache.scala:205:87
  wire              _T_27;	// Cache.scala:205:87
  wire              _T_26;	// Cache.scala:205:87
  wire              _T_25;	// Cache.scala:205:87
  wire              _T_24;	// Cache.scala:205:87
  wire              _T_23;	// Cache.scala:205:87
  wire              _T_22;	// Cache.scala:205:87
  wire              _T_19;	// Cache.scala:205:87
  wire              _T_18;	// Cache.scala:205:87
  wire              _T_17;	// Cache.scala:205:87
  wire              _T_16;	// Cache.scala:205:87
  wire              _T_15;	// Cache.scala:205:87
  wire              _T_14;	// Cache.scala:205:87
  wire              _T_13;	// Cache.scala:205:87
  wire              _T_12;	// Cache.scala:205:87
  wire              _GEN_2;	// Cache.scala:99:49, :193:14, :194:26
  wire              _T_9;	// Cache.scala:205:87
  wire              _T_8;	// Cache.scala:205:87
  wire              _T_7;	// Cache.scala:205:87
  wire              _T_6;	// Cache.scala:205:87
  wire              _T_5;	// Cache.scala:205:87
  wire              _T_4;	// Cache.scala:205:87
  wire              _T_3;	// Cache.scala:205:87
  wire              _T_2;	// Cache.scala:205:87
  wire [7:0]        _DataArray_15_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_15_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_14_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_13_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_12_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_11_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_10_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_9_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_8_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_7_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_6_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_5_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_4_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_3_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_2_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_1_0_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_7_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_7_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_6_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_6_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_5_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_5_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_4_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_4_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_3_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_3_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_2_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_2_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_1_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_1_ext_R1_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_0_ext_R0_data;	// Cache.scala:99:49
  wire [7:0]        _DataArray_0_0_ext_R1_data;	// Cache.scala:99:49
  wire [21:0]       _TagArray_ext_R0_data;	// Cache.scala:98:31
  wire [21:0]       _TagArray_ext_R1_data;	// Cache.scala:98:31
  reg  [3:0]        r_count;	// Cache.scala:69:26
  reg  [3:0]        w_count;	// Cache.scala:70:26
  reg  [2:0]        state;	// Cache.scala:73:24
  wire              is_idle = state == 3'h0;	// Cache.scala:73:24, :75:25
  wire              is_read = state == 3'h1;	// Cache.scala:73:24, :76:25
  wire              is_write = state == 3'h2;	// Cache.scala:73:24, :77:26
  wire              _T_661 = state == 3'h5;	// Cache.scala:73:24, :78:26
  wire              is_alloc = _T_661 & (&r_count);	// Cache.scala:69:26, :78:{26,39,49}
  reg               is_alloc_reg;	// Cache.scala:79:31
  reg  [31:0]       addr_reg;	// Cache.scala:83:23
  reg  [63:0]       cpu_data;	// Cache.scala:84:23
  reg  [7:0]        cpu_mask;	// Cache.scala:85:23
  reg  [31:0]       addr_buf;	// Cache.scala:87:27
  reg               rw_buf;	// Cache.scala:88:25
  reg  [15:0]       valid;	// Cache.scala:90:24
  reg  [15:0]       dirty;	// Cache.scala:91:24
  reg  [15:0]       replace;	// Cache.scala:92:26
  wire              hit0;	// Cache.scala:102:20
  wire              hit1;	// Cache.scala:103:20
  wire              _T_652 = hit0 | hit1;	// Cache.scala:106:33
  wire              wen = is_write & _T_652 | is_alloc;	// Cache.scala:77:26, :78:39, :106:{24,33,42}
  wire              ren = (is_idle | is_read | is_write) & io_cpu_req_valid;	// Cache.scala:75:25, :76:25, :77:26, :111:{35,48}
  reg               ren_reg;	// Cache.scala:112:26
  wire [2:0]        idx = io_cpu_req_bits_addr[9:7];	// Cache.scala:122:19
  wire [21:0]       tag_reg = addr_reg[31:10];	// Cache.scala:83:23, :123:27
  wire [2:0]        idx_reg = addr_reg[9:7];	// Cache.scala:83:23, :124:27
  wire [3:0]        off_reg = addr_reg[6:3];	// Cache.scala:83:23, :125:27
  wire [4:0]        way0 = {1'h0, idx, 1'h0};	// <stdin>:3134:10, :6946:10, Cache.scala:122:19, :133:23
  wire [4:0]        way1 = way0 + 5'h1;	// Cache.scala:133:23, :134:28, :378:44
  wire [4:0]        way1_buf = {1'h0, idx_reg, 1'h0} + 5'h1;	// <stdin>:3134:10, :6946:10, Cache.scala:124:27, :136:36, :378:44
  wire [1023:0]     rdata0 = {_DataArray_15_7_ext_R0_data, _DataArray_15_6_ext_R0_data, _DataArray_15_5_ext_R0_data,
                _DataArray_15_4_ext_R0_data, _DataArray_15_3_ext_R0_data, _DataArray_15_2_ext_R0_data,
                _DataArray_15_1_ext_R0_data, _DataArray_15_0_ext_R0_data, _DataArray_14_7_ext_R0_data,
                _DataArray_14_6_ext_R0_data, _DataArray_14_5_ext_R0_data, _DataArray_14_4_ext_R0_data,
                _DataArray_14_3_ext_R0_data, _DataArray_14_2_ext_R0_data, _DataArray_14_1_ext_R0_data,
                _DataArray_14_0_ext_R0_data, _DataArray_13_7_ext_R0_data, _DataArray_13_6_ext_R0_data,
                _DataArray_13_5_ext_R0_data, _DataArray_13_4_ext_R0_data, _DataArray_13_3_ext_R0_data,
                _DataArray_13_2_ext_R0_data, _DataArray_13_1_ext_R0_data, _DataArray_13_0_ext_R0_data,
                _DataArray_12_7_ext_R0_data, _DataArray_12_6_ext_R0_data, _DataArray_12_5_ext_R0_data,
                _DataArray_12_4_ext_R0_data, _DataArray_12_3_ext_R0_data, _DataArray_12_2_ext_R0_data,
                _DataArray_12_1_ext_R0_data, _DataArray_12_0_ext_R0_data, _DataArray_11_7_ext_R0_data,
                _DataArray_11_6_ext_R0_data, _DataArray_11_5_ext_R0_data, _DataArray_11_4_ext_R0_data,
                _DataArray_11_3_ext_R0_data, _DataArray_11_2_ext_R0_data, _DataArray_11_1_ext_R0_data,
                _DataArray_11_0_ext_R0_data, _DataArray_10_7_ext_R0_data, _DataArray_10_6_ext_R0_data,
                _DataArray_10_5_ext_R0_data, _DataArray_10_4_ext_R0_data, _DataArray_10_3_ext_R0_data,
                _DataArray_10_2_ext_R0_data, _DataArray_10_1_ext_R0_data, _DataArray_10_0_ext_R0_data,
                _DataArray_9_7_ext_R0_data, _DataArray_9_6_ext_R0_data, _DataArray_9_5_ext_R0_data,
                _DataArray_9_4_ext_R0_data, _DataArray_9_3_ext_R0_data, _DataArray_9_2_ext_R0_data,
                _DataArray_9_1_ext_R0_data, _DataArray_9_0_ext_R0_data, _DataArray_8_7_ext_R0_data,
                _DataArray_8_6_ext_R0_data, _DataArray_8_5_ext_R0_data, _DataArray_8_4_ext_R0_data,
                _DataArray_8_3_ext_R0_data, _DataArray_8_2_ext_R0_data, _DataArray_8_1_ext_R0_data,
                _DataArray_8_0_ext_R0_data, _DataArray_7_7_ext_R0_data, _DataArray_7_6_ext_R0_data,
                _DataArray_7_5_ext_R0_data, _DataArray_7_4_ext_R0_data, _DataArray_7_3_ext_R0_data,
                _DataArray_7_2_ext_R0_data, _DataArray_7_1_ext_R0_data, _DataArray_7_0_ext_R0_data,
                _DataArray_6_7_ext_R0_data, _DataArray_6_6_ext_R0_data, _DataArray_6_5_ext_R0_data,
                _DataArray_6_4_ext_R0_data, _DataArray_6_3_ext_R0_data, _DataArray_6_2_ext_R0_data,
                _DataArray_6_1_ext_R0_data, _DataArray_6_0_ext_R0_data, _DataArray_5_7_ext_R0_data,
                _DataArray_5_6_ext_R0_data, _DataArray_5_5_ext_R0_data, _DataArray_5_4_ext_R0_data,
                _DataArray_5_3_ext_R0_data, _DataArray_5_2_ext_R0_data, _DataArray_5_1_ext_R0_data,
                _DataArray_5_0_ext_R0_data, _DataArray_4_7_ext_R0_data, _DataArray_4_6_ext_R0_data,
                _DataArray_4_5_ext_R0_data, _DataArray_4_4_ext_R0_data, _DataArray_4_3_ext_R0_data,
                _DataArray_4_2_ext_R0_data, _DataArray_4_1_ext_R0_data, _DataArray_4_0_ext_R0_data,
                _DataArray_3_7_ext_R0_data, _DataArray_3_6_ext_R0_data, _DataArray_3_5_ext_R0_data,
                _DataArray_3_4_ext_R0_data, _DataArray_3_3_ext_R0_data, _DataArray_3_2_ext_R0_data,
                _DataArray_3_1_ext_R0_data, _DataArray_3_0_ext_R0_data, _DataArray_2_7_ext_R0_data,
                _DataArray_2_6_ext_R0_data, _DataArray_2_5_ext_R0_data, _DataArray_2_4_ext_R0_data,
                _DataArray_2_3_ext_R0_data, _DataArray_2_2_ext_R0_data, _DataArray_2_1_ext_R0_data,
                _DataArray_2_0_ext_R0_data, _DataArray_1_7_ext_R0_data, _DataArray_1_6_ext_R0_data,
                _DataArray_1_5_ext_R0_data, _DataArray_1_4_ext_R0_data, _DataArray_1_3_ext_R0_data,
                _DataArray_1_2_ext_R0_data, _DataArray_1_1_ext_R0_data, _DataArray_1_0_ext_R0_data,
                _DataArray_0_7_ext_R0_data, _DataArray_0_6_ext_R0_data, _DataArray_0_5_ext_R0_data,
                _DataArray_0_4_ext_R0_data, _DataArray_0_3_ext_R0_data, _DataArray_0_2_ext_R0_data,
                _DataArray_0_1_ext_R0_data, _DataArray_0_0_ext_R0_data};	// Cache.scala:99:49, Cat.scala:33:92
  wire [1023:0]     rdata1 = {_DataArray_15_7_ext_R1_data, _DataArray_15_6_ext_R1_data, _DataArray_15_5_ext_R1_data,
                _DataArray_15_4_ext_R1_data, _DataArray_15_3_ext_R1_data, _DataArray_15_2_ext_R1_data,
                _DataArray_15_1_ext_R1_data, _DataArray_15_0_ext_R1_data, _DataArray_14_7_ext_R1_data,
                _DataArray_14_6_ext_R1_data, _DataArray_14_5_ext_R1_data, _DataArray_14_4_ext_R1_data,
                _DataArray_14_3_ext_R1_data, _DataArray_14_2_ext_R1_data, _DataArray_14_1_ext_R1_data,
                _DataArray_14_0_ext_R1_data, _DataArray_13_7_ext_R1_data, _DataArray_13_6_ext_R1_data,
                _DataArray_13_5_ext_R1_data, _DataArray_13_4_ext_R1_data, _DataArray_13_3_ext_R1_data,
                _DataArray_13_2_ext_R1_data, _DataArray_13_1_ext_R1_data, _DataArray_13_0_ext_R1_data,
                _DataArray_12_7_ext_R1_data, _DataArray_12_6_ext_R1_data, _DataArray_12_5_ext_R1_data,
                _DataArray_12_4_ext_R1_data, _DataArray_12_3_ext_R1_data, _DataArray_12_2_ext_R1_data,
                _DataArray_12_1_ext_R1_data, _DataArray_12_0_ext_R1_data, _DataArray_11_7_ext_R1_data,
                _DataArray_11_6_ext_R1_data, _DataArray_11_5_ext_R1_data, _DataArray_11_4_ext_R1_data,
                _DataArray_11_3_ext_R1_data, _DataArray_11_2_ext_R1_data, _DataArray_11_1_ext_R1_data,
                _DataArray_11_0_ext_R1_data, _DataArray_10_7_ext_R1_data, _DataArray_10_6_ext_R1_data,
                _DataArray_10_5_ext_R1_data, _DataArray_10_4_ext_R1_data, _DataArray_10_3_ext_R1_data,
                _DataArray_10_2_ext_R1_data, _DataArray_10_1_ext_R1_data, _DataArray_10_0_ext_R1_data,
                _DataArray_9_7_ext_R1_data, _DataArray_9_6_ext_R1_data, _DataArray_9_5_ext_R1_data,
                _DataArray_9_4_ext_R1_data, _DataArray_9_3_ext_R1_data, _DataArray_9_2_ext_R1_data,
                _DataArray_9_1_ext_R1_data, _DataArray_9_0_ext_R1_data, _DataArray_8_7_ext_R1_data,
                _DataArray_8_6_ext_R1_data, _DataArray_8_5_ext_R1_data, _DataArray_8_4_ext_R1_data,
                _DataArray_8_3_ext_R1_data, _DataArray_8_2_ext_R1_data, _DataArray_8_1_ext_R1_data,
                _DataArray_8_0_ext_R1_data, _DataArray_7_7_ext_R1_data, _DataArray_7_6_ext_R1_data,
                _DataArray_7_5_ext_R1_data, _DataArray_7_4_ext_R1_data, _DataArray_7_3_ext_R1_data,
                _DataArray_7_2_ext_R1_data, _DataArray_7_1_ext_R1_data, _DataArray_7_0_ext_R1_data,
                _DataArray_6_7_ext_R1_data, _DataArray_6_6_ext_R1_data, _DataArray_6_5_ext_R1_data,
                _DataArray_6_4_ext_R1_data, _DataArray_6_3_ext_R1_data, _DataArray_6_2_ext_R1_data,
                _DataArray_6_1_ext_R1_data, _DataArray_6_0_ext_R1_data, _DataArray_5_7_ext_R1_data,
                _DataArray_5_6_ext_R1_data, _DataArray_5_5_ext_R1_data, _DataArray_5_4_ext_R1_data,
                _DataArray_5_3_ext_R1_data, _DataArray_5_2_ext_R1_data, _DataArray_5_1_ext_R1_data,
                _DataArray_5_0_ext_R1_data, _DataArray_4_7_ext_R1_data, _DataArray_4_6_ext_R1_data,
                _DataArray_4_5_ext_R1_data, _DataArray_4_4_ext_R1_data, _DataArray_4_3_ext_R1_data,
                _DataArray_4_2_ext_R1_data, _DataArray_4_1_ext_R1_data, _DataArray_4_0_ext_R1_data,
                _DataArray_3_7_ext_R1_data, _DataArray_3_6_ext_R1_data, _DataArray_3_5_ext_R1_data,
                _DataArray_3_4_ext_R1_data, _DataArray_3_3_ext_R1_data, _DataArray_3_2_ext_R1_data,
                _DataArray_3_1_ext_R1_data, _DataArray_3_0_ext_R1_data, _DataArray_2_7_ext_R1_data,
                _DataArray_2_6_ext_R1_data, _DataArray_2_5_ext_R1_data, _DataArray_2_4_ext_R1_data,
                _DataArray_2_3_ext_R1_data, _DataArray_2_2_ext_R1_data, _DataArray_2_1_ext_R1_data,
                _DataArray_2_0_ext_R1_data, _DataArray_1_7_ext_R1_data, _DataArray_1_6_ext_R1_data,
                _DataArray_1_5_ext_R1_data, _DataArray_1_4_ext_R1_data, _DataArray_1_3_ext_R1_data,
                _DataArray_1_2_ext_R1_data, _DataArray_1_1_ext_R1_data, _DataArray_1_0_ext_R1_data,
                _DataArray_0_7_ext_R1_data, _DataArray_0_6_ext_R1_data, _DataArray_0_5_ext_R1_data,
                _DataArray_0_4_ext_R1_data, _DataArray_0_3_ext_R1_data, _DataArray_0_2_ext_R1_data,
                _DataArray_0_1_ext_R1_data, _DataArray_0_0_ext_R1_data};	// Cache.scala:99:49, Cat.scala:33:92
  reg  [1023:0]     rdata0_buf;	// Reg.scala:19:16
  reg  [1023:0]     rdata1_buf;	// Reg.scala:19:16
  reg  [63:0]       refill_buffer_0;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_1;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_2;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_3;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_4;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_5;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_6;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_7;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_8;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_9;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_10;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_11;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_12;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_13;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_14;	// Cache.scala:147:28
  reg  [63:0]       refill_buffer_15;	// Cache.scala:147:28
  wire              _hit0_T_2 = _TagArray_ext_R0_data == tag_reg;	// Cache.scala:98:31, :123:27, :152:23
  wire [1023:0]     read = is_alloc_reg ? {refill_buffer_15, refill_buffer_14, refill_buffer_13, refill_buffer_12,
                refill_buffer_11, refill_buffer_10, refill_buffer_9, refill_buffer_8, refill_buffer_7,
                refill_buffer_6, refill_buffer_5, refill_buffer_4, refill_buffer_3, refill_buffer_2,
                refill_buffer_1, refill_buffer_0} : ren_reg ? (_hit0_T_2 ? rdata0 : rdata1) : _hit0_T_2 ?
                rdata0_buf : rdata1_buf;	// Cache.scala:79:31, :112:26, :147:28, :149:19, :150:23, :151:12, :152:{16,23}, :153:16, Cat.scala:33:92, Reg.scala:19:16
  wire [15:0]       _GEN_3 = {12'h0, idx_reg, 1'h0};	// <stdin>:3134:10, :6946:10, Cache.scala:124:27, :157:18
  wire [15:0]       _dirty0_T = valid >> _GEN_3;	// Cache.scala:90:24, :157:18
  assign hit0 = _dirty0_T[0] & _hit0_T_2;	// Cache.scala:152:23, :157:{10,18,29}
  wire [15:0]       _GEN_4 = {11'h0, way1_buf};	// Cache.scala:136:36, :157:18, :158:18
  wire [15:0]       _dirty1_T = valid >> _GEN_4;	// Cache.scala:90:24, :158:18
  assign hit1 = _dirty1_T[0] & _TagArray_ext_R1_data == tag_reg;	// Cache.scala:98:31, :123:27, :158:{10,18,29,38}
  wire [15:0][63:0] _GEN_5 = {{read[1023:960]}, {read[959:896]}, {read[895:832]}, {read[831:768]}, {read[767:704]},
                {read[703:640]}, {read[639:576]}, {read[575:512]}, {read[511:448]}, {read[447:384]},
                {read[383:320]}, {read[319:256]}, {read[255:192]}, {read[191:128]}, {read[127:64]},
                {read[63:0]}};	// Cache.scala:149:19, :161:{27,64}
  wire [63:0]       _GEN_6;	// Cache.scala:161:27
  /* synopsys infer_mux_override */
  assign _GEN_6 = _GEN_5[off_reg] /* cadence map_to_mux */;	// Cache.scala:125:27, :161:27
  wire [15:0]       _dirty0_T_2 = dirty >> _GEN_3;	// Cache.scala:91:24, :157:18, :175:42
  wire              dirty0 = _dirty0_T[0] & _dirty0_T_2[0];	// Cache.scala:157:18, :175:{23,34,42}
  wire [15:0]       _dirty1_T_2 = dirty >> _GEN_4;	// Cache.scala:91:24, :158:18, :176:42
  wire              dirty1 = _dirty1_T[0] & _dirty1_T_2[0];	// Cache.scala:158:18, :176:{23,34,42}
  wire [15:0]       _replace_wire_T = replace >> _GEN_4;	// Cache.scala:92:26, :158:18, :178:35
  wire [134:0]      _wmask_T_2 = {127'h0, cpu_mask} << {128'h0, off_reg, 3'h0};	// Cache.scala:73:24, :85:23, :125:27, :186:42
  wire [127:0]      _GEN_7 = is_alloc ? 128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF : _wmask_T_2[127:0];	// Cache.scala:78:39, :186:{20,42,82}
  wire [1023:0]     wdata = is_alloc ? {io_axi_resp_bits_data, refill_buffer_14, refill_buffer_13, refill_buffer_12,
                refill_buffer_11, refill_buffer_10, refill_buffer_9, refill_buffer_8, refill_buffer_7,
                refill_buffer_6, refill_buffer_5, refill_buffer_4, refill_buffer_3, refill_buffer_2,
                refill_buffer_1, refill_buffer_0} : {2{{2{{2{{2{cpu_data}}}}}}}};	// Cache.scala:78:39, :84:23, :147:28, :187:20, Cat.scala:33:92
  wire [31:0]       _GEN_8 = {28'h0, idx_reg, 1'h0};	// <stdin>:3134:10, :6946:10, Cache.scala:124:27, :196:38
  wire [31:0]       _rep0_T = 32'h1 << _GEN_8;	// Cache.scala:196:38
  wire [31:0]       _GEN_9 = {27'h0, way1_buf};	// Cache.scala:136:36, :196:38, :199:39
  wire [31:0]       _rep1_T = 32'h1 << _GEN_9;	// Cache.scala:196:38, :199:39
  assign _T_2 = _GEN_7[0];	// Cache.scala:186:20, :205:87
  assign _T_3 = _GEN_7[1];	// Cache.scala:186:20, :205:87
  assign _T_4 = _GEN_7[2];	// Cache.scala:186:20, :205:87
  assign _T_5 = _GEN_7[3];	// Cache.scala:186:20, :205:87
  assign _T_6 = _GEN_7[4];	// Cache.scala:186:20, :205:87
  assign _T_7 = _GEN_7[5];	// Cache.scala:186:20, :205:87
  assign _T_8 = _GEN_7[6];	// Cache.scala:186:20, :205:87
  assign _T_9 = _GEN_7[7];	// Cache.scala:186:20, :205:87
  wire [3:0]        _T_160 = {idx_reg, 1'h0};	// <stdin>:3134:10, :3885:24, :6946:10, :7697:24, Cache.scala:124:27
  assign _GEN_2 = wen & _T_652 & hit0;	// Cache.scala:99:49, :106:{33,42}, :193:14, :194:26
  assign _T_12 = _GEN_7[8];	// Cache.scala:186:20, :205:87
  assign _T_13 = _GEN_7[9];	// Cache.scala:186:20, :205:87
  assign _T_14 = _GEN_7[10];	// Cache.scala:186:20, :205:87
  assign _T_15 = _GEN_7[11];	// Cache.scala:186:20, :205:87
  assign _T_16 = _GEN_7[12];	// Cache.scala:186:20, :205:87
  assign _T_17 = _GEN_7[13];	// Cache.scala:186:20, :205:87
  assign _T_18 = _GEN_7[14];	// Cache.scala:186:20, :205:87
  assign _T_19 = _GEN_7[15];	// Cache.scala:186:20, :205:87
  assign _T_22 = _GEN_7[16];	// Cache.scala:186:20, :205:87
  assign _T_23 = _GEN_7[17];	// Cache.scala:186:20, :205:87
  assign _T_24 = _GEN_7[18];	// Cache.scala:186:20, :205:87
  assign _T_25 = _GEN_7[19];	// Cache.scala:186:20, :205:87
  assign _T_26 = _GEN_7[20];	// Cache.scala:186:20, :205:87
  assign _T_27 = _GEN_7[21];	// Cache.scala:186:20, :205:87
  assign _T_28 = _GEN_7[22];	// Cache.scala:186:20, :205:87
  assign _T_29 = _GEN_7[23];	// Cache.scala:186:20, :205:87
  assign _T_32 = _GEN_7[24];	// Cache.scala:186:20, :205:87
  assign _T_33 = _GEN_7[25];	// Cache.scala:186:20, :205:87
  assign _T_34 = _GEN_7[26];	// Cache.scala:186:20, :205:87
  assign _T_35 = _GEN_7[27];	// Cache.scala:186:20, :205:87
  assign _T_36 = _GEN_7[28];	// Cache.scala:186:20, :205:87
  assign _T_37 = _GEN_7[29];	// Cache.scala:186:20, :205:87
  assign _T_38 = _GEN_7[30];	// Cache.scala:186:20, :205:87
  assign _T_39 = _GEN_7[31];	// Cache.scala:186:20, :205:87
  assign _T_42 = _GEN_7[32];	// Cache.scala:186:20, :205:87
  assign _T_43 = _GEN_7[33];	// Cache.scala:186:20, :205:87
  assign _T_44 = _GEN_7[34];	// Cache.scala:186:20, :205:87
  assign _T_45 = _GEN_7[35];	// Cache.scala:186:20, :205:87
  assign _T_46 = _GEN_7[36];	// Cache.scala:186:20, :205:87
  assign _T_47 = _GEN_7[37];	// Cache.scala:186:20, :205:87
  assign _T_48 = _GEN_7[38];	// Cache.scala:186:20, :205:87
  assign _T_49 = _GEN_7[39];	// Cache.scala:186:20, :205:87
  assign _T_52 = _GEN_7[40];	// Cache.scala:186:20, :205:87
  assign _T_53 = _GEN_7[41];	// Cache.scala:186:20, :205:87
  assign _T_54 = _GEN_7[42];	// Cache.scala:186:20, :205:87
  assign _T_55 = _GEN_7[43];	// Cache.scala:186:20, :205:87
  assign _T_56 = _GEN_7[44];	// Cache.scala:186:20, :205:87
  assign _T_57 = _GEN_7[45];	// Cache.scala:186:20, :205:87
  assign _T_58 = _GEN_7[46];	// Cache.scala:186:20, :205:87
  assign _T_59 = _GEN_7[47];	// Cache.scala:186:20, :205:87
  assign _T_62 = _GEN_7[48];	// Cache.scala:186:20, :205:87
  assign _T_63 = _GEN_7[49];	// Cache.scala:186:20, :205:87
  assign _T_64 = _GEN_7[50];	// Cache.scala:186:20, :205:87
  assign _T_65 = _GEN_7[51];	// Cache.scala:186:20, :205:87
  assign _T_66 = _GEN_7[52];	// Cache.scala:186:20, :205:87
  assign _T_67 = _GEN_7[53];	// Cache.scala:186:20, :205:87
  assign _T_68 = _GEN_7[54];	// Cache.scala:186:20, :205:87
  assign _T_69 = _GEN_7[55];	// Cache.scala:186:20, :205:87
  assign _T_72 = _GEN_7[56];	// Cache.scala:186:20, :205:87
  assign _T_73 = _GEN_7[57];	// Cache.scala:186:20, :205:87
  assign _T_74 = _GEN_7[58];	// Cache.scala:186:20, :205:87
  assign _T_75 = _GEN_7[59];	// Cache.scala:186:20, :205:87
  assign _T_76 = _GEN_7[60];	// Cache.scala:186:20, :205:87
  assign _T_77 = _GEN_7[61];	// Cache.scala:186:20, :205:87
  assign _T_78 = _GEN_7[62];	// Cache.scala:186:20, :205:87
  assign _T_79 = _GEN_7[63];	// Cache.scala:186:20, :205:87
  assign _T_82 = _GEN_7[64];	// Cache.scala:186:20, :205:87
  assign _T_83 = _GEN_7[65];	// Cache.scala:186:20, :205:87
  assign _T_84 = _GEN_7[66];	// Cache.scala:186:20, :205:87
  assign _T_85 = _GEN_7[67];	// Cache.scala:186:20, :205:87
  assign _T_86 = _GEN_7[68];	// Cache.scala:186:20, :205:87
  assign _T_87 = _GEN_7[69];	// Cache.scala:186:20, :205:87
  assign _T_88 = _GEN_7[70];	// Cache.scala:186:20, :205:87
  assign _T_89 = _GEN_7[71];	// Cache.scala:186:20, :205:87
  assign _T_92 = _GEN_7[72];	// Cache.scala:186:20, :205:87
  assign _T_93 = _GEN_7[73];	// Cache.scala:186:20, :205:87
  assign _T_94 = _GEN_7[74];	// Cache.scala:186:20, :205:87
  assign _T_95 = _GEN_7[75];	// Cache.scala:186:20, :205:87
  assign _T_96 = _GEN_7[76];	// Cache.scala:186:20, :205:87
  assign _T_97 = _GEN_7[77];	// Cache.scala:186:20, :205:87
  assign _T_98 = _GEN_7[78];	// Cache.scala:186:20, :205:87
  assign _T_99 = _GEN_7[79];	// Cache.scala:186:20, :205:87
  assign _T_102 = _GEN_7[80];	// Cache.scala:186:20, :205:87
  assign _T_103 = _GEN_7[81];	// Cache.scala:186:20, :205:87
  assign _T_104 = _GEN_7[82];	// Cache.scala:186:20, :205:87
  assign _T_105 = _GEN_7[83];	// Cache.scala:186:20, :205:87
  assign _T_106 = _GEN_7[84];	// Cache.scala:186:20, :205:87
  assign _T_107 = _GEN_7[85];	// Cache.scala:186:20, :205:87
  assign _T_108 = _GEN_7[86];	// Cache.scala:186:20, :205:87
  assign _T_109 = _GEN_7[87];	// Cache.scala:186:20, :205:87
  assign _T_112 = _GEN_7[88];	// Cache.scala:186:20, :205:87
  assign _T_113 = _GEN_7[89];	// Cache.scala:186:20, :205:87
  assign _T_114 = _GEN_7[90];	// Cache.scala:186:20, :205:87
  assign _T_115 = _GEN_7[91];	// Cache.scala:186:20, :205:87
  assign _T_116 = _GEN_7[92];	// Cache.scala:186:20, :205:87
  assign _T_117 = _GEN_7[93];	// Cache.scala:186:20, :205:87
  assign _T_118 = _GEN_7[94];	// Cache.scala:186:20, :205:87
  assign _T_119 = _GEN_7[95];	// Cache.scala:186:20, :205:87
  assign _T_122 = _GEN_7[96];	// Cache.scala:186:20, :205:87
  assign _T_123 = _GEN_7[97];	// Cache.scala:186:20, :205:87
  assign _T_124 = _GEN_7[98];	// Cache.scala:186:20, :205:87
  assign _T_125 = _GEN_7[99];	// Cache.scala:186:20, :205:87
  assign _T_126 = _GEN_7[100];	// Cache.scala:186:20, :205:87
  assign _T_127 = _GEN_7[101];	// Cache.scala:186:20, :205:87
  assign _T_128 = _GEN_7[102];	// Cache.scala:186:20, :205:87
  assign _T_129 = _GEN_7[103];	// Cache.scala:186:20, :205:87
  assign _T_132 = _GEN_7[104];	// Cache.scala:186:20, :205:87
  assign _T_133 = _GEN_7[105];	// Cache.scala:186:20, :205:87
  assign _T_134 = _GEN_7[106];	// Cache.scala:186:20, :205:87
  assign _T_135 = _GEN_7[107];	// Cache.scala:186:20, :205:87
  assign _T_136 = _GEN_7[108];	// Cache.scala:186:20, :205:87
  assign _T_137 = _GEN_7[109];	// Cache.scala:186:20, :205:87
  assign _T_138 = _GEN_7[110];	// Cache.scala:186:20, :205:87
  assign _T_139 = _GEN_7[111];	// Cache.scala:186:20, :205:87
  assign _T_142 = _GEN_7[112];	// Cache.scala:186:20, :205:87
  assign _T_143 = _GEN_7[113];	// Cache.scala:186:20, :205:87
  assign _T_144 = _GEN_7[114];	// Cache.scala:186:20, :205:87
  assign _T_145 = _GEN_7[115];	// Cache.scala:186:20, :205:87
  assign _T_146 = _GEN_7[116];	// Cache.scala:186:20, :205:87
  assign _T_147 = _GEN_7[117];	// Cache.scala:186:20, :205:87
  assign _T_148 = _GEN_7[118];	// Cache.scala:186:20, :205:87
  assign _T_149 = _GEN_7[119];	// Cache.scala:186:20, :205:87
  assign _T_152 = _GEN_7[120];	// Cache.scala:186:20, :205:87
  assign _T_153 = _GEN_7[121];	// Cache.scala:186:20, :205:87
  assign _T_154 = _GEN_7[122];	// Cache.scala:186:20, :205:87
  assign _T_155 = _GEN_7[123];	// Cache.scala:186:20, :205:87
  assign _T_156 = _GEN_7[124];	// Cache.scala:186:20, :205:87
  assign _T_157 = _GEN_7[125];	// Cache.scala:186:20, :205:87
  assign _T_158 = _GEN_7[126];	// Cache.scala:186:20, :205:87
  assign _T_159 = _GEN_7[127];	// Cache.scala:186:20, :205:87
  wire [31:0]       _rep1_T_6 = 32'h1 << _GEN_9;	// Cache.scala:196:38, :199:39, :208:38
  wire [31:0]       _rep0_T_6 = 32'h1 << _GEN_8;	// Cache.scala:196:38, :210:39
  assign _T_162 = _GEN_7[0];	// Cache.scala:186:20, :217:87
  assign _T_163 = _GEN_7[1];	// Cache.scala:186:20, :217:87
  assign _T_164 = _GEN_7[2];	// Cache.scala:186:20, :217:87
  assign _T_165 = _GEN_7[3];	// Cache.scala:186:20, :217:87
  assign _T_166 = _GEN_7[4];	// Cache.scala:186:20, :217:87
  assign _T_167 = _GEN_7[5];	// Cache.scala:186:20, :217:87
  assign _T_168 = _GEN_7[6];	// Cache.scala:186:20, :217:87
  assign _T_169 = _GEN_7[7];	// Cache.scala:186:20, :217:87
  assign _GEN_1 = wen & _T_652 & ~hit0;	// <stdin>:4614:11, :8426:11, Cache.scala:99:49, :106:{33,42}, :193:14, :194:26, :195:23
  assign _T_172 = _GEN_7[8];	// Cache.scala:186:20, :217:87
  assign _T_173 = _GEN_7[9];	// Cache.scala:186:20, :217:87
  assign _T_174 = _GEN_7[10];	// Cache.scala:186:20, :217:87
  assign _T_175 = _GEN_7[11];	// Cache.scala:186:20, :217:87
  assign _T_176 = _GEN_7[12];	// Cache.scala:186:20, :217:87
  assign _T_177 = _GEN_7[13];	// Cache.scala:186:20, :217:87
  assign _T_178 = _GEN_7[14];	// Cache.scala:186:20, :217:87
  assign _T_179 = _GEN_7[15];	// Cache.scala:186:20, :217:87
  assign _T_182 = _GEN_7[16];	// Cache.scala:186:20, :217:87
  assign _T_183 = _GEN_7[17];	// Cache.scala:186:20, :217:87
  assign _T_184 = _GEN_7[18];	// Cache.scala:186:20, :217:87
  assign _T_185 = _GEN_7[19];	// Cache.scala:186:20, :217:87
  assign _T_186 = _GEN_7[20];	// Cache.scala:186:20, :217:87
  assign _T_187 = _GEN_7[21];	// Cache.scala:186:20, :217:87
  assign _T_188 = _GEN_7[22];	// Cache.scala:186:20, :217:87
  assign _T_189 = _GEN_7[23];	// Cache.scala:186:20, :217:87
  assign _T_192 = _GEN_7[24];	// Cache.scala:186:20, :217:87
  assign _T_193 = _GEN_7[25];	// Cache.scala:186:20, :217:87
  assign _T_194 = _GEN_7[26];	// Cache.scala:186:20, :217:87
  assign _T_195 = _GEN_7[27];	// Cache.scala:186:20, :217:87
  assign _T_196 = _GEN_7[28];	// Cache.scala:186:20, :217:87
  assign _T_197 = _GEN_7[29];	// Cache.scala:186:20, :217:87
  assign _T_198 = _GEN_7[30];	// Cache.scala:186:20, :217:87
  assign _T_199 = _GEN_7[31];	// Cache.scala:186:20, :217:87
  assign _T_202 = _GEN_7[32];	// Cache.scala:186:20, :217:87
  assign _T_203 = _GEN_7[33];	// Cache.scala:186:20, :217:87
  assign _T_204 = _GEN_7[34];	// Cache.scala:186:20, :217:87
  assign _T_205 = _GEN_7[35];	// Cache.scala:186:20, :217:87
  assign _T_206 = _GEN_7[36];	// Cache.scala:186:20, :217:87
  assign _T_207 = _GEN_7[37];	// Cache.scala:186:20, :217:87
  assign _T_208 = _GEN_7[38];	// Cache.scala:186:20, :217:87
  assign _T_209 = _GEN_7[39];	// Cache.scala:186:20, :217:87
  assign _T_212 = _GEN_7[40];	// Cache.scala:186:20, :217:87
  assign _T_213 = _GEN_7[41];	// Cache.scala:186:20, :217:87
  assign _T_214 = _GEN_7[42];	// Cache.scala:186:20, :217:87
  assign _T_215 = _GEN_7[43];	// Cache.scala:186:20, :217:87
  assign _T_216 = _GEN_7[44];	// Cache.scala:186:20, :217:87
  assign _T_217 = _GEN_7[45];	// Cache.scala:186:20, :217:87
  assign _T_218 = _GEN_7[46];	// Cache.scala:186:20, :217:87
  assign _T_219 = _GEN_7[47];	// Cache.scala:186:20, :217:87
  assign _T_222 = _GEN_7[48];	// Cache.scala:186:20, :217:87
  assign _T_223 = _GEN_7[49];	// Cache.scala:186:20, :217:87
  assign _T_224 = _GEN_7[50];	// Cache.scala:186:20, :217:87
  assign _T_225 = _GEN_7[51];	// Cache.scala:186:20, :217:87
  assign _T_226 = _GEN_7[52];	// Cache.scala:186:20, :217:87
  assign _T_227 = _GEN_7[53];	// Cache.scala:186:20, :217:87
  assign _T_228 = _GEN_7[54];	// Cache.scala:186:20, :217:87
  assign _T_229 = _GEN_7[55];	// Cache.scala:186:20, :217:87
  assign _T_232 = _GEN_7[56];	// Cache.scala:186:20, :217:87
  assign _T_233 = _GEN_7[57];	// Cache.scala:186:20, :217:87
  assign _T_234 = _GEN_7[58];	// Cache.scala:186:20, :217:87
  assign _T_235 = _GEN_7[59];	// Cache.scala:186:20, :217:87
  assign _T_236 = _GEN_7[60];	// Cache.scala:186:20, :217:87
  assign _T_237 = _GEN_7[61];	// Cache.scala:186:20, :217:87
  assign _T_238 = _GEN_7[62];	// Cache.scala:186:20, :217:87
  assign _T_239 = _GEN_7[63];	// Cache.scala:186:20, :217:87
  assign _T_242 = _GEN_7[64];	// Cache.scala:186:20, :217:87
  assign _T_243 = _GEN_7[65];	// Cache.scala:186:20, :217:87
  assign _T_244 = _GEN_7[66];	// Cache.scala:186:20, :217:87
  assign _T_245 = _GEN_7[67];	// Cache.scala:186:20, :217:87
  assign _T_246 = _GEN_7[68];	// Cache.scala:186:20, :217:87
  assign _T_247 = _GEN_7[69];	// Cache.scala:186:20, :217:87
  assign _T_248 = _GEN_7[70];	// Cache.scala:186:20, :217:87
  assign _T_249 = _GEN_7[71];	// Cache.scala:186:20, :217:87
  assign _T_252 = _GEN_7[72];	// Cache.scala:186:20, :217:87
  assign _T_253 = _GEN_7[73];	// Cache.scala:186:20, :217:87
  assign _T_254 = _GEN_7[74];	// Cache.scala:186:20, :217:87
  assign _T_255 = _GEN_7[75];	// Cache.scala:186:20, :217:87
  assign _T_256 = _GEN_7[76];	// Cache.scala:186:20, :217:87
  assign _T_257 = _GEN_7[77];	// Cache.scala:186:20, :217:87
  assign _T_258 = _GEN_7[78];	// Cache.scala:186:20, :217:87
  assign _T_259 = _GEN_7[79];	// Cache.scala:186:20, :217:87
  assign _T_262 = _GEN_7[80];	// Cache.scala:186:20, :217:87
  assign _T_263 = _GEN_7[81];	// Cache.scala:186:20, :217:87
  assign _T_264 = _GEN_7[82];	// Cache.scala:186:20, :217:87
  assign _T_265 = _GEN_7[83];	// Cache.scala:186:20, :217:87
  assign _T_266 = _GEN_7[84];	// Cache.scala:186:20, :217:87
  assign _T_267 = _GEN_7[85];	// Cache.scala:186:20, :217:87
  assign _T_268 = _GEN_7[86];	// Cache.scala:186:20, :217:87
  assign _T_269 = _GEN_7[87];	// Cache.scala:186:20, :217:87
  assign _T_272 = _GEN_7[88];	// Cache.scala:186:20, :217:87
  assign _T_273 = _GEN_7[89];	// Cache.scala:186:20, :217:87
  assign _T_274 = _GEN_7[90];	// Cache.scala:186:20, :217:87
  assign _T_275 = _GEN_7[91];	// Cache.scala:186:20, :217:87
  assign _T_276 = _GEN_7[92];	// Cache.scala:186:20, :217:87
  assign _T_277 = _GEN_7[93];	// Cache.scala:186:20, :217:87
  assign _T_278 = _GEN_7[94];	// Cache.scala:186:20, :217:87
  assign _T_279 = _GEN_7[95];	// Cache.scala:186:20, :217:87
  assign _T_282 = _GEN_7[96];	// Cache.scala:186:20, :217:87
  assign _T_283 = _GEN_7[97];	// Cache.scala:186:20, :217:87
  assign _T_284 = _GEN_7[98];	// Cache.scala:186:20, :217:87
  assign _T_285 = _GEN_7[99];	// Cache.scala:186:20, :217:87
  assign _T_286 = _GEN_7[100];	// Cache.scala:186:20, :217:87
  assign _T_287 = _GEN_7[101];	// Cache.scala:186:20, :217:87
  assign _T_288 = _GEN_7[102];	// Cache.scala:186:20, :217:87
  assign _T_289 = _GEN_7[103];	// Cache.scala:186:20, :217:87
  assign _T_292 = _GEN_7[104];	// Cache.scala:186:20, :217:87
  assign _T_293 = _GEN_7[105];	// Cache.scala:186:20, :217:87
  assign _T_294 = _GEN_7[106];	// Cache.scala:186:20, :217:87
  assign _T_295 = _GEN_7[107];	// Cache.scala:186:20, :217:87
  assign _T_296 = _GEN_7[108];	// Cache.scala:186:20, :217:87
  assign _T_297 = _GEN_7[109];	// Cache.scala:186:20, :217:87
  assign _T_298 = _GEN_7[110];	// Cache.scala:186:20, :217:87
  assign _T_299 = _GEN_7[111];	// Cache.scala:186:20, :217:87
  assign _T_302 = _GEN_7[112];	// Cache.scala:186:20, :217:87
  assign _T_303 = _GEN_7[113];	// Cache.scala:186:20, :217:87
  assign _T_304 = _GEN_7[114];	// Cache.scala:186:20, :217:87
  assign _T_305 = _GEN_7[115];	// Cache.scala:186:20, :217:87
  assign _T_306 = _GEN_7[116];	// Cache.scala:186:20, :217:87
  assign _T_307 = _GEN_7[117];	// Cache.scala:186:20, :217:87
  assign _T_308 = _GEN_7[118];	// Cache.scala:186:20, :217:87
  assign _T_309 = _GEN_7[119];	// Cache.scala:186:20, :217:87
  assign _T_312 = _GEN_7[120];	// Cache.scala:186:20, :217:87
  assign _T_313 = _GEN_7[121];	// Cache.scala:186:20, :217:87
  assign _T_314 = _GEN_7[122];	// Cache.scala:186:20, :217:87
  assign _T_315 = _GEN_7[123];	// Cache.scala:186:20, :217:87
  assign _T_316 = _GEN_7[124];	// Cache.scala:186:20, :217:87
  assign _T_317 = _GEN_7[125];	// Cache.scala:186:20, :217:87
  assign _T_318 = _GEN_7[126];	// Cache.scala:186:20, :217:87
  assign _T_319 = _GEN_7[127];	// Cache.scala:186:20, :217:87
  wire [31:0]       _rep0_T_12 = 32'h1 << _GEN_8;	// Cache.scala:196:38, :223:38
  wire [31:0]       _rep1_T_12 = 32'h1 << _GEN_9;	// Cache.scala:196:38, :199:39, :227:39
  assign _T_324 = _GEN_7[0];	// Cache.scala:186:20, :236:91
  assign _T_325 = _GEN_7[1];	// Cache.scala:186:20, :236:91
  assign _T_326 = _GEN_7[2];	// Cache.scala:186:20, :236:91
  assign _T_327 = _GEN_7[3];	// Cache.scala:186:20, :236:91
  assign _T_328 = _GEN_7[4];	// Cache.scala:186:20, :236:91
  assign _T_329 = _GEN_7[5];	// Cache.scala:186:20, :236:91
  assign _T_330 = _GEN_7[6];	// Cache.scala:186:20, :236:91
  assign _T_331 = _GEN_7[7];	// Cache.scala:186:20, :236:91
  wire [3:0]        _T_482 = {idx_reg, 1'h0};	// <stdin>:3134:10, :5354:25, :6946:10, :9166:25, Cache.scala:124:27
  assign _GEN_0 = wen & ~_T_652 & ~(_replace_wire_T[0]);	// Cache.scala:98:31, :99:49, :106:{33,42}, :178:35, :193:14, :194:26, :222:{18,32}
  assign _T_334 = _GEN_7[8];	// Cache.scala:186:20, :236:91
  assign _T_335 = _GEN_7[9];	// Cache.scala:186:20, :236:91
  assign _T_336 = _GEN_7[10];	// Cache.scala:186:20, :236:91
  assign _T_337 = _GEN_7[11];	// Cache.scala:186:20, :236:91
  assign _T_338 = _GEN_7[12];	// Cache.scala:186:20, :236:91
  assign _T_339 = _GEN_7[13];	// Cache.scala:186:20, :236:91
  assign _T_340 = _GEN_7[14];	// Cache.scala:186:20, :236:91
  assign _T_341 = _GEN_7[15];	// Cache.scala:186:20, :236:91
  assign _T_344 = _GEN_7[16];	// Cache.scala:186:20, :236:91
  assign _T_345 = _GEN_7[17];	// Cache.scala:186:20, :236:91
  assign _T_346 = _GEN_7[18];	// Cache.scala:186:20, :236:91
  assign _T_347 = _GEN_7[19];	// Cache.scala:186:20, :236:91
  assign _T_348 = _GEN_7[20];	// Cache.scala:186:20, :236:91
  assign _T_349 = _GEN_7[21];	// Cache.scala:186:20, :236:91
  assign _T_350 = _GEN_7[22];	// Cache.scala:186:20, :236:91
  assign _T_351 = _GEN_7[23];	// Cache.scala:186:20, :236:91
  assign _T_354 = _GEN_7[24];	// Cache.scala:186:20, :236:91
  assign _T_355 = _GEN_7[25];	// Cache.scala:186:20, :236:91
  assign _T_356 = _GEN_7[26];	// Cache.scala:186:20, :236:91
  assign _T_357 = _GEN_7[27];	// Cache.scala:186:20, :236:91
  assign _T_358 = _GEN_7[28];	// Cache.scala:186:20, :236:91
  assign _T_359 = _GEN_7[29];	// Cache.scala:186:20, :236:91
  assign _T_360 = _GEN_7[30];	// Cache.scala:186:20, :236:91
  assign _T_361 = _GEN_7[31];	// Cache.scala:186:20, :236:91
  assign _T_364 = _GEN_7[32];	// Cache.scala:186:20, :236:91
  assign _T_365 = _GEN_7[33];	// Cache.scala:186:20, :236:91
  assign _T_366 = _GEN_7[34];	// Cache.scala:186:20, :236:91
  assign _T_367 = _GEN_7[35];	// Cache.scala:186:20, :236:91
  assign _T_368 = _GEN_7[36];	// Cache.scala:186:20, :236:91
  assign _T_369 = _GEN_7[37];	// Cache.scala:186:20, :236:91
  assign _T_370 = _GEN_7[38];	// Cache.scala:186:20, :236:91
  assign _T_371 = _GEN_7[39];	// Cache.scala:186:20, :236:91
  assign _T_374 = _GEN_7[40];	// Cache.scala:186:20, :236:91
  assign _T_375 = _GEN_7[41];	// Cache.scala:186:20, :236:91
  assign _T_376 = _GEN_7[42];	// Cache.scala:186:20, :236:91
  assign _T_377 = _GEN_7[43];	// Cache.scala:186:20, :236:91
  assign _T_378 = _GEN_7[44];	// Cache.scala:186:20, :236:91
  assign _T_379 = _GEN_7[45];	// Cache.scala:186:20, :236:91
  assign _T_380 = _GEN_7[46];	// Cache.scala:186:20, :236:91
  assign _T_381 = _GEN_7[47];	// Cache.scala:186:20, :236:91
  assign _T_384 = _GEN_7[48];	// Cache.scala:186:20, :236:91
  assign _T_385 = _GEN_7[49];	// Cache.scala:186:20, :236:91
  assign _T_386 = _GEN_7[50];	// Cache.scala:186:20, :236:91
  assign _T_387 = _GEN_7[51];	// Cache.scala:186:20, :236:91
  assign _T_388 = _GEN_7[52];	// Cache.scala:186:20, :236:91
  assign _T_389 = _GEN_7[53];	// Cache.scala:186:20, :236:91
  assign _T_390 = _GEN_7[54];	// Cache.scala:186:20, :236:91
  assign _T_391 = _GEN_7[55];	// Cache.scala:186:20, :236:91
  assign _T_394 = _GEN_7[56];	// Cache.scala:186:20, :236:91
  assign _T_395 = _GEN_7[57];	// Cache.scala:186:20, :236:91
  assign _T_396 = _GEN_7[58];	// Cache.scala:186:20, :236:91
  assign _T_397 = _GEN_7[59];	// Cache.scala:186:20, :236:91
  assign _T_398 = _GEN_7[60];	// Cache.scala:186:20, :236:91
  assign _T_399 = _GEN_7[61];	// Cache.scala:186:20, :236:91
  assign _T_400 = _GEN_7[62];	// Cache.scala:186:20, :236:91
  assign _T_401 = _GEN_7[63];	// Cache.scala:186:20, :236:91
  assign _T_404 = _GEN_7[64];	// Cache.scala:186:20, :236:91
  assign _T_405 = _GEN_7[65];	// Cache.scala:186:20, :236:91
  assign _T_406 = _GEN_7[66];	// Cache.scala:186:20, :236:91
  assign _T_407 = _GEN_7[67];	// Cache.scala:186:20, :236:91
  assign _T_408 = _GEN_7[68];	// Cache.scala:186:20, :236:91
  assign _T_409 = _GEN_7[69];	// Cache.scala:186:20, :236:91
  assign _T_410 = _GEN_7[70];	// Cache.scala:186:20, :236:91
  assign _T_411 = _GEN_7[71];	// Cache.scala:186:20, :236:91
  assign _T_414 = _GEN_7[72];	// Cache.scala:186:20, :236:91
  assign _T_415 = _GEN_7[73];	// Cache.scala:186:20, :236:91
  assign _T_416 = _GEN_7[74];	// Cache.scala:186:20, :236:91
  assign _T_417 = _GEN_7[75];	// Cache.scala:186:20, :236:91
  assign _T_418 = _GEN_7[76];	// Cache.scala:186:20, :236:91
  assign _T_419 = _GEN_7[77];	// Cache.scala:186:20, :236:91
  assign _T_420 = _GEN_7[78];	// Cache.scala:186:20, :236:91
  assign _T_421 = _GEN_7[79];	// Cache.scala:186:20, :236:91
  assign _T_424 = _GEN_7[80];	// Cache.scala:186:20, :236:91
  assign _T_425 = _GEN_7[81];	// Cache.scala:186:20, :236:91
  assign _T_426 = _GEN_7[82];	// Cache.scala:186:20, :236:91
  assign _T_427 = _GEN_7[83];	// Cache.scala:186:20, :236:91
  assign _T_428 = _GEN_7[84];	// Cache.scala:186:20, :236:91
  assign _T_429 = _GEN_7[85];	// Cache.scala:186:20, :236:91
  assign _T_430 = _GEN_7[86];	// Cache.scala:186:20, :236:91
  assign _T_431 = _GEN_7[87];	// Cache.scala:186:20, :236:91
  assign _T_434 = _GEN_7[88];	// Cache.scala:186:20, :236:91
  assign _T_435 = _GEN_7[89];	// Cache.scala:186:20, :236:91
  assign _T_436 = _GEN_7[90];	// Cache.scala:186:20, :236:91
  assign _T_437 = _GEN_7[91];	// Cache.scala:186:20, :236:91
  assign _T_438 = _GEN_7[92];	// Cache.scala:186:20, :236:91
  assign _T_439 = _GEN_7[93];	// Cache.scala:186:20, :236:91
  assign _T_440 = _GEN_7[94];	// Cache.scala:186:20, :236:91
  assign _T_441 = _GEN_7[95];	// Cache.scala:186:20, :236:91
  assign _T_444 = _GEN_7[96];	// Cache.scala:186:20, :236:91
  assign _T_445 = _GEN_7[97];	// Cache.scala:186:20, :236:91
  assign _T_446 = _GEN_7[98];	// Cache.scala:186:20, :236:91
  assign _T_447 = _GEN_7[99];	// Cache.scala:186:20, :236:91
  assign _T_448 = _GEN_7[100];	// Cache.scala:186:20, :236:91
  assign _T_449 = _GEN_7[101];	// Cache.scala:186:20, :236:91
  assign _T_450 = _GEN_7[102];	// Cache.scala:186:20, :236:91
  assign _T_451 = _GEN_7[103];	// Cache.scala:186:20, :236:91
  assign _T_454 = _GEN_7[104];	// Cache.scala:186:20, :236:91
  assign _T_455 = _GEN_7[105];	// Cache.scala:186:20, :236:91
  assign _T_456 = _GEN_7[106];	// Cache.scala:186:20, :236:91
  assign _T_457 = _GEN_7[107];	// Cache.scala:186:20, :236:91
  assign _T_458 = _GEN_7[108];	// Cache.scala:186:20, :236:91
  assign _T_459 = _GEN_7[109];	// Cache.scala:186:20, :236:91
  assign _T_460 = _GEN_7[110];	// Cache.scala:186:20, :236:91
  assign _T_461 = _GEN_7[111];	// Cache.scala:186:20, :236:91
  assign _T_464 = _GEN_7[112];	// Cache.scala:186:20, :236:91
  assign _T_465 = _GEN_7[113];	// Cache.scala:186:20, :236:91
  assign _T_466 = _GEN_7[114];	// Cache.scala:186:20, :236:91
  assign _T_467 = _GEN_7[115];	// Cache.scala:186:20, :236:91
  assign _T_468 = _GEN_7[116];	// Cache.scala:186:20, :236:91
  assign _T_469 = _GEN_7[117];	// Cache.scala:186:20, :236:91
  assign _T_470 = _GEN_7[118];	// Cache.scala:186:20, :236:91
  assign _T_471 = _GEN_7[119];	// Cache.scala:186:20, :236:91
  assign _T_474 = _GEN_7[120];	// Cache.scala:186:20, :236:91
  assign _T_475 = _GEN_7[121];	// Cache.scala:186:20, :236:91
  assign _T_476 = _GEN_7[122];	// Cache.scala:186:20, :236:91
  assign _T_477 = _GEN_7[123];	// Cache.scala:186:20, :236:91
  assign _T_478 = _GEN_7[124];	// Cache.scala:186:20, :236:91
  assign _T_479 = _GEN_7[125];	// Cache.scala:186:20, :236:91
  assign _T_480 = _GEN_7[126];	// Cache.scala:186:20, :236:91
  assign _T_481 = _GEN_7[127];	// Cache.scala:186:20, :236:91
  wire [31:0]       _rep1_T_18 = 32'h1 << _GEN_9;	// Cache.scala:196:38, :199:39, :259:38
  wire [31:0]       _rep0_T_18 = 32'h1 << _GEN_8;	// Cache.scala:196:38, :262:39
  wire [15:0]       _GEN_10 = wen ? (_T_652 ? (hit0 ? ~(~replace | _rep0_T[15:0]) : replace | _rep0_T_6[15:0]) :
                _replace_wire_T[0] ? replace | _rep0_T_18[15:0] : ~(~replace | _rep0_T_12[15:0])) : 16'h0;	// Cache.scala:90:24, :92:26, :95:10, :106:{33,42}, :178:35, :193:14, :194:26, :195:23, :196:38, :198:{22,39}, :210:{22,39}, :222:32, :223:38, :226:{22,39}, :262:{22,39}
  wire [15:0]       _GEN_11 = wen ? (_T_652 ? (hit0 ? replace | _rep1_T[15:0] : ~(~replace | _rep1_T_6[15:0])) :
                _replace_wire_T[0] ? ~(~replace | _rep1_T_18[15:0]) : replace | _rep1_T_12[15:0]) : 16'h0;	// Cache.scala:90:24, :92:26, :96:10, :106:{33,42}, :178:35, :193:14, :194:26, :195:23, :199:{22,39}, :208:38, :210:39, :211:{22,39}, :222:32, :227:{22,39}, :259:38, :262:39, :263:{22,39}
  assign _T_485 = _GEN_7[0];	// Cache.scala:186:20, :272:91
  assign _T_486 = _GEN_7[1];	// Cache.scala:186:20, :272:91
  assign _T_487 = _GEN_7[2];	// Cache.scala:186:20, :272:91
  assign _T_488 = _GEN_7[3];	// Cache.scala:186:20, :272:91
  assign _T_489 = _GEN_7[4];	// Cache.scala:186:20, :272:91
  assign _T_490 = _GEN_7[5];	// Cache.scala:186:20, :272:91
  assign _T_491 = _GEN_7[6];	// Cache.scala:186:20, :272:91
  assign _T_492 = _GEN_7[7];	// Cache.scala:186:20, :272:91
  assign _GEN = wen & ~_T_652 & _replace_wire_T[0];	// Cache.scala:98:31, :99:49, :106:{33,42}, :178:35, :193:14, :194:26, :222:32
  assign _T_495 = _GEN_7[8];	// Cache.scala:186:20, :272:91
  assign _T_496 = _GEN_7[9];	// Cache.scala:186:20, :272:91
  assign _T_497 = _GEN_7[10];	// Cache.scala:186:20, :272:91
  assign _T_498 = _GEN_7[11];	// Cache.scala:186:20, :272:91
  assign _T_499 = _GEN_7[12];	// Cache.scala:186:20, :272:91
  assign _T_500 = _GEN_7[13];	// Cache.scala:186:20, :272:91
  assign _T_501 = _GEN_7[14];	// Cache.scala:186:20, :272:91
  assign _T_502 = _GEN_7[15];	// Cache.scala:186:20, :272:91
  assign _T_505 = _GEN_7[16];	// Cache.scala:186:20, :272:91
  assign _T_506 = _GEN_7[17];	// Cache.scala:186:20, :272:91
  assign _T_507 = _GEN_7[18];	// Cache.scala:186:20, :272:91
  assign _T_508 = _GEN_7[19];	// Cache.scala:186:20, :272:91
  assign _T_509 = _GEN_7[20];	// Cache.scala:186:20, :272:91
  assign _T_510 = _GEN_7[21];	// Cache.scala:186:20, :272:91
  assign _T_511 = _GEN_7[22];	// Cache.scala:186:20, :272:91
  assign _T_512 = _GEN_7[23];	// Cache.scala:186:20, :272:91
  assign _T_515 = _GEN_7[24];	// Cache.scala:186:20, :272:91
  assign _T_516 = _GEN_7[25];	// Cache.scala:186:20, :272:91
  assign _T_517 = _GEN_7[26];	// Cache.scala:186:20, :272:91
  assign _T_518 = _GEN_7[27];	// Cache.scala:186:20, :272:91
  assign _T_519 = _GEN_7[28];	// Cache.scala:186:20, :272:91
  assign _T_520 = _GEN_7[29];	// Cache.scala:186:20, :272:91
  assign _T_521 = _GEN_7[30];	// Cache.scala:186:20, :272:91
  assign _T_522 = _GEN_7[31];	// Cache.scala:186:20, :272:91
  assign _T_525 = _GEN_7[32];	// Cache.scala:186:20, :272:91
  assign _T_526 = _GEN_7[33];	// Cache.scala:186:20, :272:91
  assign _T_527 = _GEN_7[34];	// Cache.scala:186:20, :272:91
  assign _T_528 = _GEN_7[35];	// Cache.scala:186:20, :272:91
  assign _T_529 = _GEN_7[36];	// Cache.scala:186:20, :272:91
  assign _T_530 = _GEN_7[37];	// Cache.scala:186:20, :272:91
  assign _T_531 = _GEN_7[38];	// Cache.scala:186:20, :272:91
  assign _T_532 = _GEN_7[39];	// Cache.scala:186:20, :272:91
  assign _T_535 = _GEN_7[40];	// Cache.scala:186:20, :272:91
  assign _T_536 = _GEN_7[41];	// Cache.scala:186:20, :272:91
  assign _T_537 = _GEN_7[42];	// Cache.scala:186:20, :272:91
  assign _T_538 = _GEN_7[43];	// Cache.scala:186:20, :272:91
  assign _T_539 = _GEN_7[44];	// Cache.scala:186:20, :272:91
  assign _T_540 = _GEN_7[45];	// Cache.scala:186:20, :272:91
  assign _T_541 = _GEN_7[46];	// Cache.scala:186:20, :272:91
  assign _T_542 = _GEN_7[47];	// Cache.scala:186:20, :272:91
  assign _T_545 = _GEN_7[48];	// Cache.scala:186:20, :272:91
  assign _T_546 = _GEN_7[49];	// Cache.scala:186:20, :272:91
  assign _T_547 = _GEN_7[50];	// Cache.scala:186:20, :272:91
  assign _T_548 = _GEN_7[51];	// Cache.scala:186:20, :272:91
  assign _T_549 = _GEN_7[52];	// Cache.scala:186:20, :272:91
  assign _T_550 = _GEN_7[53];	// Cache.scala:186:20, :272:91
  assign _T_551 = _GEN_7[54];	// Cache.scala:186:20, :272:91
  assign _T_552 = _GEN_7[55];	// Cache.scala:186:20, :272:91
  assign _T_555 = _GEN_7[56];	// Cache.scala:186:20, :272:91
  assign _T_556 = _GEN_7[57];	// Cache.scala:186:20, :272:91
  assign _T_557 = _GEN_7[58];	// Cache.scala:186:20, :272:91
  assign _T_558 = _GEN_7[59];	// Cache.scala:186:20, :272:91
  assign _T_559 = _GEN_7[60];	// Cache.scala:186:20, :272:91
  assign _T_560 = _GEN_7[61];	// Cache.scala:186:20, :272:91
  assign _T_561 = _GEN_7[62];	// Cache.scala:186:20, :272:91
  assign _T_562 = _GEN_7[63];	// Cache.scala:186:20, :272:91
  assign _T_565 = _GEN_7[64];	// Cache.scala:186:20, :272:91
  assign _T_566 = _GEN_7[65];	// Cache.scala:186:20, :272:91
  assign _T_567 = _GEN_7[66];	// Cache.scala:186:20, :272:91
  assign _T_568 = _GEN_7[67];	// Cache.scala:186:20, :272:91
  assign _T_569 = _GEN_7[68];	// Cache.scala:186:20, :272:91
  assign _T_570 = _GEN_7[69];	// Cache.scala:186:20, :272:91
  assign _T_571 = _GEN_7[70];	// Cache.scala:186:20, :272:91
  assign _T_572 = _GEN_7[71];	// Cache.scala:186:20, :272:91
  assign _T_575 = _GEN_7[72];	// Cache.scala:186:20, :272:91
  assign _T_576 = _GEN_7[73];	// Cache.scala:186:20, :272:91
  assign _T_577 = _GEN_7[74];	// Cache.scala:186:20, :272:91
  assign _T_578 = _GEN_7[75];	// Cache.scala:186:20, :272:91
  assign _T_579 = _GEN_7[76];	// Cache.scala:186:20, :272:91
  assign _T_580 = _GEN_7[77];	// Cache.scala:186:20, :272:91
  assign _T_581 = _GEN_7[78];	// Cache.scala:186:20, :272:91
  assign _T_582 = _GEN_7[79];	// Cache.scala:186:20, :272:91
  assign _T_585 = _GEN_7[80];	// Cache.scala:186:20, :272:91
  assign _T_586 = _GEN_7[81];	// Cache.scala:186:20, :272:91
  assign _T_587 = _GEN_7[82];	// Cache.scala:186:20, :272:91
  assign _T_588 = _GEN_7[83];	// Cache.scala:186:20, :272:91
  assign _T_589 = _GEN_7[84];	// Cache.scala:186:20, :272:91
  assign _T_590 = _GEN_7[85];	// Cache.scala:186:20, :272:91
  assign _T_591 = _GEN_7[86];	// Cache.scala:186:20, :272:91
  assign _T_592 = _GEN_7[87];	// Cache.scala:186:20, :272:91
  assign _T_595 = _GEN_7[88];	// Cache.scala:186:20, :272:91
  assign _T_596 = _GEN_7[89];	// Cache.scala:186:20, :272:91
  assign _T_597 = _GEN_7[90];	// Cache.scala:186:20, :272:91
  assign _T_598 = _GEN_7[91];	// Cache.scala:186:20, :272:91
  assign _T_599 = _GEN_7[92];	// Cache.scala:186:20, :272:91
  assign _T_600 = _GEN_7[93];	// Cache.scala:186:20, :272:91
  assign _T_601 = _GEN_7[94];	// Cache.scala:186:20, :272:91
  assign _T_602 = _GEN_7[95];	// Cache.scala:186:20, :272:91
  assign _T_605 = _GEN_7[96];	// Cache.scala:186:20, :272:91
  assign _T_606 = _GEN_7[97];	// Cache.scala:186:20, :272:91
  assign _T_607 = _GEN_7[98];	// Cache.scala:186:20, :272:91
  assign _T_608 = _GEN_7[99];	// Cache.scala:186:20, :272:91
  assign _T_609 = _GEN_7[100];	// Cache.scala:186:20, :272:91
  assign _T_610 = _GEN_7[101];	// Cache.scala:186:20, :272:91
  assign _T_611 = _GEN_7[102];	// Cache.scala:186:20, :272:91
  assign _T_612 = _GEN_7[103];	// Cache.scala:186:20, :272:91
  assign _T_615 = _GEN_7[104];	// Cache.scala:186:20, :272:91
  assign _T_616 = _GEN_7[105];	// Cache.scala:186:20, :272:91
  assign _T_617 = _GEN_7[106];	// Cache.scala:186:20, :272:91
  assign _T_618 = _GEN_7[107];	// Cache.scala:186:20, :272:91
  assign _T_619 = _GEN_7[108];	// Cache.scala:186:20, :272:91
  assign _T_620 = _GEN_7[109];	// Cache.scala:186:20, :272:91
  assign _T_621 = _GEN_7[110];	// Cache.scala:186:20, :272:91
  assign _T_622 = _GEN_7[111];	// Cache.scala:186:20, :272:91
  assign _T_625 = _GEN_7[112];	// Cache.scala:186:20, :272:91
  assign _T_626 = _GEN_7[113];	// Cache.scala:186:20, :272:91
  assign _T_627 = _GEN_7[114];	// Cache.scala:186:20, :272:91
  assign _T_628 = _GEN_7[115];	// Cache.scala:186:20, :272:91
  assign _T_629 = _GEN_7[116];	// Cache.scala:186:20, :272:91
  assign _T_630 = _GEN_7[117];	// Cache.scala:186:20, :272:91
  assign _T_631 = _GEN_7[118];	// Cache.scala:186:20, :272:91
  assign _T_632 = _GEN_7[119];	// Cache.scala:186:20, :272:91
  assign _T_635 = _GEN_7[120];	// Cache.scala:186:20, :272:91
  assign _T_636 = _GEN_7[121];	// Cache.scala:186:20, :272:91
  assign _T_637 = _GEN_7[122];	// Cache.scala:186:20, :272:91
  assign _T_638 = _GEN_7[123];	// Cache.scala:186:20, :272:91
  assign _T_639 = _GEN_7[124];	// Cache.scala:186:20, :272:91
  assign _T_640 = _GEN_7[125];	// Cache.scala:186:20, :272:91
  assign _T_641 = _GEN_7[126];	// Cache.scala:186:20, :272:91
  assign _T_642 = _GEN_7[127];	// Cache.scala:186:20, :272:91
  wire [63:0]       _GEN_12;	// Cache.scala:284:26
  /* synopsys infer_mux_override */
  assign _GEN_12 = _GEN_5[w_count] /* cadence map_to_mux */;	// Cache.scala:70:26, :161:27, :284:26
  wire              _T_650 = ~(_replace_wire_T[0]) & dirty0 | _replace_wire_T[0] & dirty1;	// Cache.scala:175:34, :176:34, :178:35, :313:{24,38,49,65}
  wire [21:0]       _GEN_13 = dirty0 ? _TagArray_ext_R0_data : _TagArray_ext_R1_data;	// Cache.scala:98:31, :175:34, :316:33, :317:46, :319:46
  wire [31:0]       _GEN_14 = {_T_650 ? _GEN_13 : tag_reg, idx_reg, 7'h0};	// Cache.scala:123:27, :124:27, :313:{49,76}, :316:33, :317:{46,70}, :319:46, :326:42
  wire              _T_653 = _T_652 | is_alloc_reg;	// Cache.scala:79:31, :106:33, :335:32
  wire              _T_657 = ~(_replace_wire_T[0]) & dirty0 | _replace_wire_T[0] & dirty1;	// Cache.scala:175:34, :176:34, :178:35, :345:{24,38,49,65}
  wire [31:0]       _GEN_15 = {_T_657 ? _GEN_13 : tag_reg, idx_reg, 7'h0};	// Cache.scala:123:27, :124:27, :316:33, :317:{46,70}, :319:46, :345:{49,76}, :348:33, :359:42
  wire              _T_658 = state == 3'h3;	// Cache.scala:73:24, :296:18, :314:27
  wire [31:0]       _io_axi_req_bits_addr_T_13 = {tag_reg, idx_reg, 7'h0};	// Cache.scala:123:27, :124:27, :317:70, :372:68
  wire              _T_660 = state == 3'h4;	// Cache.scala:73:24, :296:18, :325:27
  wire              _GEN_16 = ~_T_660 | io_axi_resp_bits_choose;	// Cache.scala:285:26, :296:18, :388:42
  wire              _GEN_17 = ~is_idle & (is_read ? ~_T_652 & ~_T_650 : is_write ? ~_T_653 & ~_T_657 : _T_658 ?
                (io_axi_resp_bits_choose ? io_axi_resp_valid : rw_buf) : _T_660 & ~io_axi_resp_bits_choose
                & rw_buf);	// Cache.scala:75:25, :76:25, :77:26, :88:25, :98:31, :106:33, :194:26, :222:32, :282:22, :283:24, :296:18, :303:30, :313:{49,76}, :315:40, :327:40, :335:{32,48}, :344:34, :345:{49,76}, :347:40, :360:40, :368:42, :369:40, :382:34, :384:36, :388:42
  always @(posedge clock) begin
    automatic logic [63:0]      _GEN_18;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_19;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_20;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_21;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_22;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_23;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_24;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_25;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_26;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_27;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_28;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_29;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_30;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_31;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_32;	// Cache.scala:147:28, :296:18
    automatic logic [63:0]      _GEN_33;	// Cache.scala:147:28, :296:18
    automatic logic [7:0][63:0] _GEN_34;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_35;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_36;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_37;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_38;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_39;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_40;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_41;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_42;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_43;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_44;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_45;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_46;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_47;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_48;	// Cache.scala:75:25, :147:28, :296:18
    automatic logic [7:0][63:0] _GEN_49;	// Cache.scala:75:25, :147:28, :296:18
    _GEN_18 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | (|r_count) ? refill_buffer_0 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_19 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | r_count != 4'h1 ? refill_buffer_1 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_20 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | r_count != 4'h2 ? refill_buffer_2 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_21 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | r_count != 4'h3 ? refill_buffer_3 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_22 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | r_count != 4'h4 ? refill_buffer_4 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_23 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | r_count != 4'h5 ? refill_buffer_5 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_24 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | r_count != 4'h6 ? refill_buffer_6 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_25 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | r_count != 4'h7 ? refill_buffer_7 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_26 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | r_count != 4'h8 ? refill_buffer_8 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_27 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | r_count != 4'h9 ? refill_buffer_9 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_28 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | r_count != 4'hA ? refill_buffer_10 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_29 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | r_count != 4'hB ? refill_buffer_11 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_30 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | r_count != 4'hC ? refill_buffer_12 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_31 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | r_count != 4'hD ? refill_buffer_13 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_32 = is_read | is_write | _T_658 | _T_660 | ~_T_661 | ~io_axi_resp_bits_choose |
                                io_axi_resp_valid | r_count != 4'hE ? refill_buffer_14 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :282:22, :296:18, :368:42, :382:34, :398:42, :405:44
    _GEN_33 = is_read | is_write | _T_658 | _T_660 | ~(_T_661 & io_axi_resp_bits_choose &
                                (io_axi_resp_valid | (&r_count))) ? refill_buffer_15 : io_axi_resp_bits_data;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :147:28, :296:18, :398:42, :399:40, :401:39, :405:44
    if (reset) begin
      r_count <= 4'h0;	// Cache.scala:69:26
      w_count <= 4'h0;	// Cache.scala:69:26, :70:26
      state <= 3'h0;	// Cache.scala:73:24
      addr_buf <= 32'h0;	// Cache.scala:87:27
      rw_buf <= 1'h0;	// <stdin>:3134:10, :6946:10, Cache.scala:88:25
      valid <= 16'h0;	// Cache.scala:90:24
      dirty <= 16'h0;	// Cache.scala:90:24, :91:24
      replace <= 16'h0;	// Cache.scala:90:24, :92:26
    end
    else begin
      automatic logic [2:0]      _GEN_50;	// Cache.scala:73:24, :296:18, :398:42
      automatic logic [3:0]      _GEN_51;	// Cache.scala:69:26, :296:18
      automatic logic [7:0][3:0] _GEN_52;	// Cache.scala:69:26, :75:25, :296:18
      automatic logic [7:0][2:0] _GEN_53;	// Cache.scala:75:25, :76:25, :77:26, :296:18, :298:35, :303:30, :335:48, :368:42, :388:42
      _GEN_50 = _T_661 & io_axi_resp_bits_choose & io_axi_resp_valid ? {1'h0, |cpu_mask, 1'h0} : state;	// <stdin>:3134:10, :6946:10, Cache.scala:73:24, :78:26, :85:23, :162:70, :296:18, :398:42, :402:33
      _GEN_51 = is_read | is_write | _T_658 | _T_660 | ~(_T_661 & io_axi_resp_bits_choose) ? r_count :
                                                io_axi_resp_valid ? 4'h0 : r_count + 4'h1;	// Cache.scala:69:26, :76:25, :77:26, :78:26, :296:18, :398:42, :399:40, :400:29, :404:{29,40}, :405:44
      _GEN_52 = {{_GEN_51}, {_GEN_51}, {_GEN_51}, {r_count}, {r_count}, {r_count}, {r_count}, {r_count}};	// Cache.scala:69:26, :75:25, :296:18
      r_count <= _GEN_52[state];	// Cache.scala:69:26, :73:24, :75:25, :296:18
      if (is_idle | is_read | is_write | ~(_T_658 & io_axi_resp_bits_choose)) begin	// Cache.scala:70:26, :75:25, :76:25, :77:26, :296:18, :368:42
      end
      else if (io_axi_resp_valid)	// Cache.scala:70:26, :75:25, :76:25, :77:26, :296:18, :368:42
        w_count <= 4'h0;	// Cache.scala:69:26, :70:26
      else if (w_count != 4'hF)	// Cache.scala:70:26, :75:25, :76:25, :77:26, :78:49, :296:18, :368:42, :375:34
        w_count <= w_count + 4'h1;	// Cache.scala:70:26, :378:44, :405:44
      _GEN_53 = {{_GEN_50}, {_GEN_50}, {_GEN_50}, {io_axi_resp_bits_choose ? 3'h5 : state},
                                                {io_axi_resp_bits_choose & io_axi_resp_valid ? 3'h4 : state}, {_T_653 ? {1'h0,
                                                io_cpu_req_valid, 1'h0} : _T_657 ? 3'h3 : 3'h4}, {_T_652 ? {2'h0, io_cpu_req_valid} :
                                                _T_650 ? 3'h3 : 3'h4}, {io_cpu_req_valid ? ((|io_cpu_req_bits_mask) ? 3'h2 : 3'h1) :
                                                state}};	// <stdin>:3134:10, :6946:10, Cache.scala:73:24, :75:25, :76:25, :77:26, :78:26, :106:33, :296:18, :298:35, :299:{23,29,51}, :303:30, :304:39, :305:27, :308:27, :313:{49,76}, :314:27, :325:27, :335:{32,48}, :336:39, :337:27, :339:27, :345:{49,76}, :346:27, :358:27, :368:42, :369:40, :388:42, :389:23, :398:42
      state <= _GEN_53[state];	// Cache.scala:73:24, :75:25, :76:25, :77:26, :296:18, :298:35, :303:30, :335:48, :368:42, :388:42
      if (is_idle) begin	// Cache.scala:75:25
      end
      else if (is_read) begin	// Cache.scala:75:25, :76:25
        if (~_T_652) begin	// Cache.scala:98:31, :106:33, :194:26, :222:32
          if (is_idle)	// Cache.scala:75:25
            addr_buf <= 32'h0;	// Cache.scala:87:27
          else if (is_read) begin	// Cache.scala:75:25, :76:25
            if (_T_652)	// Cache.scala:106:33
              addr_buf <= 32'h0;	// Cache.scala:87:27
            else	// Cache.scala:106:33
              addr_buf <= _GEN_14;	// Cache.scala:87:27, :313:76, :316:33, :326:42
          end
          else if (is_write) begin	// Cache.scala:75:25, :76:25, :77:26
            if (_T_653)	// Cache.scala:335:32
              addr_buf <= 32'h0;	// Cache.scala:87:27
            else	// Cache.scala:335:32
              addr_buf <= _GEN_15;	// Cache.scala:87:27, :345:76, :348:33, :359:42
          end
          else if (_T_658) begin	// Cache.scala:75:25, :76:25, :77:26, :296:18
            if (io_axi_resp_bits_choose) begin
              if (io_axi_resp_valid)
                addr_buf <= _io_axi_req_bits_addr_T_13;	// Cache.scala:87:27, :372:68
              else
                addr_buf <= 32'h0;	// Cache.scala:87:27
            end
          end
          else if (_GEN_16)	// Cache.scala:75:25, :76:25, :77:26, :285:26, :296:18, :388:42
            addr_buf <= 32'h0;	// Cache.scala:87:27
          rw_buf <= _GEN_17;	// Cache.scala:88:25, :283:24, :296:18
        end
      end
      else if (~is_write | _T_653) begin	// Cache.scala:75:25, :76:25, :77:26, :87:27, :296:18, :335:{32,48}
      end
      else begin	// Cache.scala:75:25, :76:25, :77:26, :87:27, :296:18, :335:{32,48}
        if (is_idle)	// Cache.scala:75:25
          addr_buf <= 32'h0;	// Cache.scala:87:27
        else if (is_read) begin	// Cache.scala:75:25, :76:25
          if (_T_652)	// Cache.scala:106:33
            addr_buf <= 32'h0;	// Cache.scala:87:27
          else	// Cache.scala:106:33
            addr_buf <= _GEN_14;	// Cache.scala:87:27, :313:76, :316:33, :326:42
        end
        else if (is_write) begin	// Cache.scala:75:25, :76:25, :77:26
          if (_T_653)	// Cache.scala:335:32
            addr_buf <= 32'h0;	// Cache.scala:87:27
          else	// Cache.scala:335:32
            addr_buf <= _GEN_15;	// Cache.scala:87:27, :345:76, :348:33, :359:42
        end
        else if (_T_658) begin	// Cache.scala:75:25, :76:25, :77:26, :296:18
          if (io_axi_resp_bits_choose) begin
            if (io_axi_resp_valid)
              addr_buf <= _io_axi_req_bits_addr_T_13;	// Cache.scala:87:27, :372:68
            else
              addr_buf <= 32'h0;	// Cache.scala:87:27
          end
        end
        else if (_GEN_16)	// Cache.scala:75:25, :76:25, :77:26, :285:26, :296:18, :388:42
          addr_buf <= 32'h0;	// Cache.scala:87:27
        rw_buf <= _GEN_17;	// Cache.scala:88:25, :283:24, :296:18
      end
      if (~wen | _T_652) begin	// Cache.scala:90:24, :106:{33,42}, :193:14, :194:26
      end
      else if (_replace_wire_T[0])	// Cache.scala:90:24, :106:{33,42}, :178:35, :193:14, :194:26
        valid <= valid | _rep1_T_18[15:0];	// Cache.scala:90:24, :259:38
      else	// Cache.scala:90:24, :106:{33,42}, :178:35, :193:14, :194:26
        valid <= valid | _rep0_T_12[15:0];	// Cache.scala:90:24, :223:38
      if (wen) begin	// Cache.scala:106:42
        if (_T_652) begin	// Cache.scala:106:33
          if (hit0) begin	// Cache.scala:106:33
            dirty <= dirty | _rep0_T[15:0];	// Cache.scala:91:24, :196:38
            replace <= _GEN_10 | _GEN_11;	// Cache.scala:92:26, :95:10, :96:10, :193:14, :194:26, :200:33
          end
          else begin	// Cache.scala:106:33
            dirty <= dirty | _rep1_T_6[15:0];	// Cache.scala:91:24, :208:38
            replace <= _GEN_10 | _GEN_11;	// Cache.scala:92:26, :95:10, :96:10, :193:14, :194:26, :212:33
          end
        end
        else if (_replace_wire_T[0]) begin	// Cache.scala:106:33, :178:35
          dirty <= ~(~dirty | _rep1_T_18[15:0]);	// Cache.scala:91:24, :259:38, :260:38
          replace <= _GEN_10 | _GEN_11;	// Cache.scala:92:26, :95:10, :96:10, :193:14, :194:26, :264:33
        end
        else begin	// Cache.scala:106:33, :178:35
          dirty <= ~(~dirty | _rep0_T_12[15:0]);	// Cache.scala:91:24, :223:38, :224:38
          replace <= _GEN_10 | _GEN_11;	// Cache.scala:92:26, :95:10, :96:10, :193:14, :194:26, :228:33
        end
      end
    end
    is_alloc_reg <= is_alloc;	// Cache.scala:78:39, :79:31
    if (io_cpu_req_valid) begin
      addr_reg <= io_cpu_req_bits_addr;	// Cache.scala:83:23
      cpu_data <= io_cpu_req_bits_data;	// Cache.scala:84:23
      cpu_mask <= io_cpu_req_bits_mask;	// Cache.scala:85:23
    end
    ren_reg <= ren;	// Cache.scala:111:48, :112:26
    if (ren_reg) begin	// Cache.scala:112:26
      rdata0_buf <= rdata0;	// Cat.scala:33:92, Reg.scala:19:16
      rdata1_buf <= rdata1;	// Cat.scala:33:92, Reg.scala:19:16
    end
    _GEN_34 = {{_GEN_18}, {_GEN_18}, {_GEN_18}, {refill_buffer_0}, {refill_buffer_0}, {refill_buffer_0},
                                {refill_buffer_0}, {refill_buffer_0}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_0 <= _GEN_34[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_35 = {{_GEN_19}, {_GEN_19}, {_GEN_19}, {refill_buffer_1}, {refill_buffer_1}, {refill_buffer_1},
                                {refill_buffer_1}, {refill_buffer_1}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_1 <= _GEN_35[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_36 = {{_GEN_20}, {_GEN_20}, {_GEN_20}, {refill_buffer_2}, {refill_buffer_2}, {refill_buffer_2},
                                {refill_buffer_2}, {refill_buffer_2}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_2 <= _GEN_36[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_37 = {{_GEN_21}, {_GEN_21}, {_GEN_21}, {refill_buffer_3}, {refill_buffer_3}, {refill_buffer_3},
                                {refill_buffer_3}, {refill_buffer_3}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_3 <= _GEN_37[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_38 = {{_GEN_22}, {_GEN_22}, {_GEN_22}, {refill_buffer_4}, {refill_buffer_4}, {refill_buffer_4},
                                {refill_buffer_4}, {refill_buffer_4}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_4 <= _GEN_38[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_39 = {{_GEN_23}, {_GEN_23}, {_GEN_23}, {refill_buffer_5}, {refill_buffer_5}, {refill_buffer_5},
                                {refill_buffer_5}, {refill_buffer_5}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_5 <= _GEN_39[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_40 = {{_GEN_24}, {_GEN_24}, {_GEN_24}, {refill_buffer_6}, {refill_buffer_6}, {refill_buffer_6},
                                {refill_buffer_6}, {refill_buffer_6}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_6 <= _GEN_40[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_41 = {{_GEN_25}, {_GEN_25}, {_GEN_25}, {refill_buffer_7}, {refill_buffer_7}, {refill_buffer_7},
                                {refill_buffer_7}, {refill_buffer_7}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_7 <= _GEN_41[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_42 = {{_GEN_26}, {_GEN_26}, {_GEN_26}, {refill_buffer_8}, {refill_buffer_8}, {refill_buffer_8},
                                {refill_buffer_8}, {refill_buffer_8}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_8 <= _GEN_42[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_43 = {{_GEN_27}, {_GEN_27}, {_GEN_27}, {refill_buffer_9}, {refill_buffer_9}, {refill_buffer_9},
                                {refill_buffer_9}, {refill_buffer_9}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_9 <= _GEN_43[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_44 = {{_GEN_28}, {_GEN_28}, {_GEN_28}, {refill_buffer_10}, {refill_buffer_10},
                                {refill_buffer_10}, {refill_buffer_10}, {refill_buffer_10}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_10 <= _GEN_44[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_45 = {{_GEN_29}, {_GEN_29}, {_GEN_29}, {refill_buffer_11}, {refill_buffer_11},
                                {refill_buffer_11}, {refill_buffer_11}, {refill_buffer_11}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_11 <= _GEN_45[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_46 = {{_GEN_30}, {_GEN_30}, {_GEN_30}, {refill_buffer_12}, {refill_buffer_12},
                                {refill_buffer_12}, {refill_buffer_12}, {refill_buffer_12}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_12 <= _GEN_46[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_47 = {{_GEN_31}, {_GEN_31}, {_GEN_31}, {refill_buffer_13}, {refill_buffer_13},
                                {refill_buffer_13}, {refill_buffer_13}, {refill_buffer_13}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_13 <= _GEN_47[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_48 = {{_GEN_32}, {_GEN_32}, {_GEN_32}, {refill_buffer_14}, {refill_buffer_14},
                                {refill_buffer_14}, {refill_buffer_14}, {refill_buffer_14}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_14 <= _GEN_48[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
    _GEN_49 = {{_GEN_33}, {_GEN_33}, {_GEN_33}, {refill_buffer_15}, {refill_buffer_15},
                                {refill_buffer_15}, {refill_buffer_15}, {refill_buffer_15}};	// Cache.scala:75:25, :147:28, :296:18
    refill_buffer_15 <= _GEN_49[state];	// Cache.scala:73:24, :75:25, :147:28, :296:18
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:3134:10, :6946:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:3134:10, :6946:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:3134:10, :6946:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_6;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_7;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_8;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_9;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_10;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_11;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_12;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_13;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_14;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_15;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_16;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_17;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_18;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_19;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_20;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_21;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_22;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_23;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_24;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_25;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_26;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_27;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_28;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_29;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_30;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_31;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_32;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_33;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_34;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_35;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_36;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_37;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_38;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_39;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_40;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_41;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_42;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_43;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_44;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_45;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_46;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_47;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_48;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_49;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_50;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_51;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_52;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_53;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_54;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_55;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_56;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_57;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_58;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_59;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_60;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_61;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_62;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_63;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_64;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_65;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_66;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_67;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_68;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_69;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_70;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_71;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_72;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_73;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_74;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_75;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_76;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_77;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_78;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_79;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_80;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_81;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_82;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_83;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_84;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_85;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_86;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_87;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_88;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_89;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_90;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_91;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_92;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_93;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_94;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_95;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_96;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_97;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_98;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_99;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_100;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_101;	// <stdin>:3134:10, :6946:10
      automatic logic [31:0] _RANDOM_102;	// <stdin>:3134:10, :6946:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:3134:10, :6946:10
        `INIT_RANDOM_PROLOG_	// <stdin>:3134:10, :6946:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:3134:10, :6946:10
        _RANDOM_0 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_1 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_2 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_3 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_4 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_5 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_6 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_7 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_8 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_9 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_10 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_11 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_12 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_13 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_14 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_15 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_16 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_17 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_18 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_19 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_20 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_21 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_22 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_23 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_24 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_25 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_26 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_27 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_28 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_29 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_30 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_31 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_32 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_33 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_34 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_35 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_36 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_37 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_38 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_39 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_40 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_41 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_42 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_43 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_44 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_45 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_46 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_47 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_48 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_49 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_50 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_51 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_52 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_53 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_54 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_55 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_56 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_57 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_58 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_59 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_60 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_61 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_62 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_63 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_64 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_65 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_66 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_67 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_68 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_69 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_70 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_71 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_72 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_73 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_74 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_75 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_76 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_77 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_78 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_79 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_80 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_81 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_82 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_83 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_84 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_85 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_86 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_87 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_88 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_89 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_90 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_91 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_92 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_93 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_94 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_95 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_96 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_97 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_98 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_99 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_100 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_101 = `RANDOM;	// <stdin>:3134:10, :6946:10
        _RANDOM_102 = `RANDOM;	// <stdin>:3134:10, :6946:10
        r_count = _RANDOM_0[3:0];	// Cache.scala:69:26
        w_count = _RANDOM_0[7:4];	// Cache.scala:69:26, :70:26
        state = _RANDOM_0[10:8];	// Cache.scala:69:26, :73:24
        is_alloc_reg = _RANDOM_0[11];	// Cache.scala:69:26, :79:31
        addr_reg = {_RANDOM_0[31:12], _RANDOM_1[11:0]};	// Cache.scala:69:26, :83:23
        cpu_data = {_RANDOM_1[31:12], _RANDOM_2, _RANDOM_3[11:0]};	// Cache.scala:83:23, :84:23
        cpu_mask = _RANDOM_3[19:12];	// Cache.scala:84:23, :85:23
        addr_buf = {_RANDOM_3[31:20], _RANDOM_4[19:0]};	// Cache.scala:84:23, :87:27
        rw_buf = _RANDOM_4[20];	// Cache.scala:87:27, :88:25
        valid = {_RANDOM_4[31:21], _RANDOM_5[4:0]};	// Cache.scala:87:27, :90:24
        dirty = _RANDOM_5[20:5];	// Cache.scala:90:24, :91:24
        replace = {_RANDOM_5[31:21], _RANDOM_6[4:0]};	// Cache.scala:90:24, :92:26
        ren_reg = _RANDOM_6[5];	// Cache.scala:92:26, :112:26
        rdata0_buf = {_RANDOM_6[31:6], _RANDOM_7, _RANDOM_8, _RANDOM_9, _RANDOM_10, _RANDOM_11, _RANDOM_12,
                                                                _RANDOM_13, _RANDOM_14, _RANDOM_15, _RANDOM_16, _RANDOM_17, _RANDOM_18, _RANDOM_19,
                                                                _RANDOM_20, _RANDOM_21, _RANDOM_22, _RANDOM_23, _RANDOM_24, _RANDOM_25, _RANDOM_26,
                                                                _RANDOM_27, _RANDOM_28, _RANDOM_29, _RANDOM_30, _RANDOM_31, _RANDOM_32, _RANDOM_33,
                                                                _RANDOM_34, _RANDOM_35, _RANDOM_36, _RANDOM_37, _RANDOM_38[5:0]};	// Cache.scala:92:26, Reg.scala:19:16
        rdata1_buf = {_RANDOM_38[31:6], _RANDOM_39, _RANDOM_40, _RANDOM_41, _RANDOM_42, _RANDOM_43, _RANDOM_44,
                                                                _RANDOM_45, _RANDOM_46, _RANDOM_47, _RANDOM_48, _RANDOM_49, _RANDOM_50, _RANDOM_51,
                                                                _RANDOM_52, _RANDOM_53, _RANDOM_54, _RANDOM_55, _RANDOM_56, _RANDOM_57, _RANDOM_58,
                                                                _RANDOM_59, _RANDOM_60, _RANDOM_61, _RANDOM_62, _RANDOM_63, _RANDOM_64, _RANDOM_65,
                                                                _RANDOM_66, _RANDOM_67, _RANDOM_68, _RANDOM_69, _RANDOM_70[5:0]};	// Reg.scala:19:16
        refill_buffer_0 = {_RANDOM_70[31:6], _RANDOM_71, _RANDOM_72[5:0]};	// Cache.scala:147:28, Reg.scala:19:16
        refill_buffer_1 = {_RANDOM_72[31:6], _RANDOM_73, _RANDOM_74[5:0]};	// Cache.scala:147:28
        refill_buffer_2 = {_RANDOM_74[31:6], _RANDOM_75, _RANDOM_76[5:0]};	// Cache.scala:147:28
        refill_buffer_3 = {_RANDOM_76[31:6], _RANDOM_77, _RANDOM_78[5:0]};	// Cache.scala:147:28
        refill_buffer_4 = {_RANDOM_78[31:6], _RANDOM_79, _RANDOM_80[5:0]};	// Cache.scala:147:28
        refill_buffer_5 = {_RANDOM_80[31:6], _RANDOM_81, _RANDOM_82[5:0]};	// Cache.scala:147:28
        refill_buffer_6 = {_RANDOM_82[31:6], _RANDOM_83, _RANDOM_84[5:0]};	// Cache.scala:147:28
        refill_buffer_7 = {_RANDOM_84[31:6], _RANDOM_85, _RANDOM_86[5:0]};	// Cache.scala:147:28
        refill_buffer_8 = {_RANDOM_86[31:6], _RANDOM_87, _RANDOM_88[5:0]};	// Cache.scala:147:28
        refill_buffer_9 = {_RANDOM_88[31:6], _RANDOM_89, _RANDOM_90[5:0]};	// Cache.scala:147:28
        refill_buffer_10 = {_RANDOM_90[31:6], _RANDOM_91, _RANDOM_92[5:0]};	// Cache.scala:147:28
        refill_buffer_11 = {_RANDOM_92[31:6], _RANDOM_93, _RANDOM_94[5:0]};	// Cache.scala:147:28
        refill_buffer_12 = {_RANDOM_94[31:6], _RANDOM_95, _RANDOM_96[5:0]};	// Cache.scala:147:28
        refill_buffer_13 = {_RANDOM_96[31:6], _RANDOM_97, _RANDOM_98[5:0]};	// Cache.scala:147:28
        refill_buffer_14 = {_RANDOM_98[31:6], _RANDOM_99, _RANDOM_100[5:0]};	// Cache.scala:147:28
        refill_buffer_15 = {_RANDOM_100[31:6], _RANDOM_101, _RANDOM_102[5:0]};	// Cache.scala:147:28
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:3134:10, :6946:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:3134:10, :6946:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  TagArray_combMem TagArray_ext (	// Cache.scala:98:31
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :139:30
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :140:30
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr ({idx_reg, 1'h0}),	// <stdin>:3134:10, :5325:27, :6946:10, :9137:27, Cache.scala:124:27
    .W0_en   (wen & ~_T_652 & ~(_replace_wire_T[0]) & is_alloc),	// Cache.scala:78:39, :98:31, :106:{33,42}, :178:35, :193:14, :194:26, :222:{18,32}
    .W0_clk  (clock),
    .W0_data (tag_reg),	// Cache.scala:123:27
    .W1_addr (way1_buf[3:0]),	// <stdin>:6064:27, :9876:27, Cache.scala:136:36
    .W1_en   (wen & ~_T_652 & _replace_wire_T[0] & is_alloc),	// Cache.scala:78:39, :98:31, :106:{33,42}, :178:35, :193:14, :194:26, :222:32
    .W1_clk  (clock),
    .W1_data (tag_reg),	// Cache.scala:123:27
    .R0_data (_TagArray_ext_R0_data),
    .R1_data (_TagArray_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_0_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_2),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[7:0]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_162),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[7:0]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_324),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[7:0]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_485),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[7:0]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_0_0_ext_R0_data),
    .R1_data (_DataArray_0_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_0_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_3),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[15:8]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_163),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[15:8]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_325),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[15:8]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_486),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[15:8]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_0_1_ext_R0_data),
    .R1_data (_DataArray_0_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_0_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_4),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[23:16]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_164),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[23:16]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_326),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[23:16]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_487),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[23:16]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_0_2_ext_R0_data),
    .R1_data (_DataArray_0_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_0_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_5),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[31:24]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_165),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[31:24]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_327),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[31:24]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_488),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[31:24]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_0_3_ext_R0_data),
    .R1_data (_DataArray_0_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_0_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_6),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[39:32]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_166),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[39:32]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_328),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[39:32]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_489),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[39:32]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_0_4_ext_R0_data),
    .R1_data (_DataArray_0_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_0_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_7),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[47:40]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_167),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[47:40]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_329),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[47:40]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_490),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[47:40]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_0_5_ext_R0_data),
    .R1_data (_DataArray_0_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_0_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_8),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[55:48]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_168),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[55:48]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_330),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[55:48]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_491),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[55:48]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_0_6_ext_R0_data),
    .R1_data (_DataArray_0_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_0_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_9),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[63:56]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_169),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[63:56]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_331),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[63:56]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_492),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[63:56]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_0_7_ext_R0_data),
    .R1_data (_DataArray_0_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_1_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_12),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[71:64]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_172),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[71:64]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_334),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[71:64]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_495),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[71:64]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_1_0_ext_R0_data),
    .R1_data (_DataArray_1_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_1_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_13),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[79:72]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_173),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[79:72]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_335),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[79:72]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_496),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[79:72]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_1_1_ext_R0_data),
    .R1_data (_DataArray_1_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_1_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_14),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[87:80]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_174),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[87:80]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_336),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[87:80]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_497),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[87:80]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_1_2_ext_R0_data),
    .R1_data (_DataArray_1_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_1_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_15),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[95:88]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_175),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[95:88]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_337),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[95:88]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_498),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[95:88]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_1_3_ext_R0_data),
    .R1_data (_DataArray_1_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_1_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_16),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[103:96]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_176),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[103:96]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_338),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[103:96]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_499),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[103:96]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_1_4_ext_R0_data),
    .R1_data (_DataArray_1_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_1_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_17),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[111:104]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_177),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[111:104]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_339),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[111:104]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_500),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[111:104]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_1_5_ext_R0_data),
    .R1_data (_DataArray_1_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_1_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_18),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[119:112]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_178),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[119:112]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_340),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[119:112]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_501),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[119:112]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_1_6_ext_R0_data),
    .R1_data (_DataArray_1_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_1_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_19),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[127:120]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_179),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[127:120]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_341),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[127:120]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_502),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[127:120]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_1_7_ext_R0_data),
    .R1_data (_DataArray_1_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_2_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_182),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[135:128]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_22),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[135:128]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_344),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[135:128]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_505),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[135:128]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_2_0_ext_R0_data),
    .R1_data (_DataArray_2_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_2_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_183),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[143:136]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_23),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[143:136]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_345),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[143:136]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_506),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[143:136]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_2_1_ext_R0_data),
    .R1_data (_DataArray_2_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_2_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_184),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[151:144]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_24),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[151:144]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_346),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[151:144]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_507),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[151:144]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_2_2_ext_R0_data),
    .R1_data (_DataArray_2_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_2_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_185),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[159:152]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_25),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[159:152]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_347),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[159:152]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_508),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[159:152]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_2_3_ext_R0_data),
    .R1_data (_DataArray_2_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_2_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_186),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[167:160]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_26),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[167:160]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_348),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[167:160]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_509),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[167:160]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_2_4_ext_R0_data),
    .R1_data (_DataArray_2_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_2_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_187),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[175:168]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_27),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[175:168]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_349),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[175:168]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_510),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[175:168]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_2_5_ext_R0_data),
    .R1_data (_DataArray_2_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_2_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_188),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[183:176]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_28),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[183:176]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_350),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[183:176]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_511),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[183:176]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_2_6_ext_R0_data),
    .R1_data (_DataArray_2_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_2_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_189),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[191:184]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_29),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[191:184]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_351),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[191:184]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_512),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[191:184]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_2_7_ext_R0_data),
    .R1_data (_DataArray_2_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_3_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_192),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[199:192]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_32),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[199:192]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_354),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[199:192]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_515),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[199:192]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_3_0_ext_R0_data),
    .R1_data (_DataArray_3_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_3_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_193),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[207:200]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_33),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[207:200]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_355),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[207:200]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_516),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[207:200]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_3_1_ext_R0_data),
    .R1_data (_DataArray_3_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_3_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_194),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[215:208]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_34),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[215:208]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_356),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[215:208]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_517),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[215:208]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_3_2_ext_R0_data),
    .R1_data (_DataArray_3_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_3_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_195),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[223:216]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_35),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[223:216]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_357),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[223:216]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_518),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[223:216]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_3_3_ext_R0_data),
    .R1_data (_DataArray_3_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_3_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_196),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[231:224]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_36),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[231:224]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_358),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[231:224]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_519),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[231:224]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_3_4_ext_R0_data),
    .R1_data (_DataArray_3_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_3_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_197),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[239:232]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_37),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[239:232]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_359),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[239:232]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_520),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[239:232]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_3_5_ext_R0_data),
    .R1_data (_DataArray_3_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_3_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_198),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[247:240]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_38),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[247:240]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_360),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[247:240]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_521),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[247:240]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_3_6_ext_R0_data),
    .R1_data (_DataArray_3_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_3_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_199),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[255:248]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W1_en   (_GEN_2 & _T_39),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W1_clk  (clock),
    .W1_data (wdata[255:248]),	// Cache.scala:187:20, :204:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_361),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[255:248]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_522),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[255:248]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_3_7_ext_R0_data),
    .R1_data (_DataArray_3_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_4_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_202),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[263:256]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_364),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[263:256]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_42),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[263:256]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_525),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[263:256]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_4_0_ext_R0_data),
    .R1_data (_DataArray_4_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_4_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_203),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[271:264]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_365),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[271:264]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_43),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[271:264]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_526),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[271:264]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_4_1_ext_R0_data),
    .R1_data (_DataArray_4_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_4_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_204),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[279:272]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_366),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[279:272]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_44),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[279:272]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_527),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[279:272]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_4_2_ext_R0_data),
    .R1_data (_DataArray_4_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_4_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_205),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[287:280]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_367),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[287:280]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_45),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[287:280]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_528),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[287:280]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_4_3_ext_R0_data),
    .R1_data (_DataArray_4_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_4_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_206),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[295:288]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_368),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[295:288]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_46),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[295:288]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_529),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[295:288]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_4_4_ext_R0_data),
    .R1_data (_DataArray_4_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_4_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_207),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[303:296]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_369),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[303:296]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_47),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[303:296]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_530),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[303:296]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_4_5_ext_R0_data),
    .R1_data (_DataArray_4_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_4_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_208),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[311:304]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_370),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[311:304]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_48),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[311:304]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_531),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[311:304]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_4_6_ext_R0_data),
    .R1_data (_DataArray_4_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_4_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_209),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[319:312]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_371),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[319:312]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_49),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[319:312]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_532),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[319:312]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_4_7_ext_R0_data),
    .R1_data (_DataArray_4_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_5_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_212),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[327:320]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_374),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[327:320]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_52),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[327:320]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_535),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[327:320]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_5_0_ext_R0_data),
    .R1_data (_DataArray_5_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_5_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_213),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[335:328]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_375),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[335:328]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_53),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[335:328]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_536),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[335:328]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_5_1_ext_R0_data),
    .R1_data (_DataArray_5_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_5_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_214),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[343:336]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_376),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[343:336]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_54),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[343:336]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_537),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[343:336]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_5_2_ext_R0_data),
    .R1_data (_DataArray_5_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_5_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_215),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[351:344]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_377),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[351:344]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_55),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[351:344]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_538),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[351:344]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_5_3_ext_R0_data),
    .R1_data (_DataArray_5_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_5_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_216),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[359:352]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_378),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[359:352]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_56),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[359:352]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_539),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[359:352]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_5_4_ext_R0_data),
    .R1_data (_DataArray_5_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_5_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_217),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[367:360]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_379),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[367:360]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_57),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[367:360]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_540),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[367:360]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_5_5_ext_R0_data),
    .R1_data (_DataArray_5_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_5_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_218),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[375:368]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_380),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[375:368]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_58),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[375:368]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_541),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[375:368]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_5_6_ext_R0_data),
    .R1_data (_DataArray_5_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_5_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_219),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[383:376]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_381),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[383:376]),	// Cache.scala:187:20, :235:71
    .W2_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W2_en   (_GEN_2 & _T_59),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W2_clk  (clock),
    .W2_data (wdata[383:376]),	// Cache.scala:187:20, :204:67
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_542),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[383:376]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_5_7_ext_R0_data),
    .R1_data (_DataArray_5_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_6_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_222),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[391:384]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_384),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[391:384]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_545),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[391:384]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_62),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[391:384]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_6_0_ext_R0_data),
    .R1_data (_DataArray_6_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_6_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_223),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[399:392]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_385),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[399:392]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_546),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[399:392]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_63),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[399:392]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_6_1_ext_R0_data),
    .R1_data (_DataArray_6_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_6_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_224),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[407:400]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_386),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[407:400]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_547),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[407:400]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_64),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[407:400]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_6_2_ext_R0_data),
    .R1_data (_DataArray_6_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_6_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_225),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[415:408]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_387),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[415:408]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_548),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[415:408]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_65),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[415:408]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_6_3_ext_R0_data),
    .R1_data (_DataArray_6_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_6_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_226),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[423:416]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_388),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[423:416]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_549),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[423:416]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_66),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[423:416]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_6_4_ext_R0_data),
    .R1_data (_DataArray_6_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_6_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_227),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[431:424]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_389),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[431:424]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_550),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[431:424]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_67),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[431:424]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_6_5_ext_R0_data),
    .R1_data (_DataArray_6_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_6_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_228),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[439:432]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_390),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[439:432]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_551),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[439:432]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_68),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[439:432]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_6_6_ext_R0_data),
    .R1_data (_DataArray_6_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_6_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_229),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[447:440]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_391),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[447:440]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_552),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[447:440]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_69),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[447:440]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_6_7_ext_R0_data),
    .R1_data (_DataArray_6_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_7_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_232),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[455:448]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_394),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[455:448]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_555),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[455:448]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_72),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[455:448]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_7_0_ext_R0_data),
    .R1_data (_DataArray_7_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_7_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_233),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[463:456]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_395),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[463:456]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_556),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[463:456]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_73),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[463:456]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_7_1_ext_R0_data),
    .R1_data (_DataArray_7_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_7_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_234),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[471:464]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_396),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[471:464]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_557),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[471:464]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_74),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[471:464]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_7_2_ext_R0_data),
    .R1_data (_DataArray_7_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_7_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_235),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[479:472]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_397),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[479:472]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_558),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[479:472]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_75),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[479:472]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_7_3_ext_R0_data),
    .R1_data (_DataArray_7_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_7_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_236),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[487:480]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_398),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[487:480]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_559),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[487:480]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_76),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[487:480]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_7_4_ext_R0_data),
    .R1_data (_DataArray_7_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_7_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_237),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[495:488]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_399),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[495:488]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_560),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[495:488]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_77),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[495:488]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_7_5_ext_R0_data),
    .R1_data (_DataArray_7_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_7_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_238),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[503:496]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_400),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[503:496]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_561),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[503:496]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_78),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[503:496]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_7_6_ext_R0_data),
    .R1_data (_DataArray_7_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_7_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_239),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[511:504]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_401),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[511:504]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_562),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[511:504]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_79),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[511:504]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_7_7_ext_R0_data),
    .R1_data (_DataArray_7_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_8_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_242),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[519:512]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_404),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[519:512]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_565),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[519:512]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_82),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[519:512]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_8_0_ext_R0_data),
    .R1_data (_DataArray_8_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_8_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_243),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[527:520]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_405),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[527:520]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_566),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[527:520]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_83),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[527:520]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_8_1_ext_R0_data),
    .R1_data (_DataArray_8_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_8_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_244),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[535:528]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_406),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[535:528]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_567),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[535:528]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_84),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[535:528]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_8_2_ext_R0_data),
    .R1_data (_DataArray_8_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_8_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_245),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[543:536]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_407),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[543:536]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_568),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[543:536]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_85),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[543:536]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_8_3_ext_R0_data),
    .R1_data (_DataArray_8_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_8_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_246),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[551:544]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_408),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[551:544]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_569),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[551:544]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_86),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[551:544]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_8_4_ext_R0_data),
    .R1_data (_DataArray_8_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_8_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_247),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[559:552]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_409),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[559:552]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_570),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[559:552]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_87),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[559:552]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_8_5_ext_R0_data),
    .R1_data (_DataArray_8_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_8_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_248),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[567:560]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_410),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[567:560]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_571),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[567:560]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_88),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[567:560]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_8_6_ext_R0_data),
    .R1_data (_DataArray_8_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_8_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_249),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[575:568]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_411),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[575:568]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_572),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[575:568]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_89),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[575:568]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_8_7_ext_R0_data),
    .R1_data (_DataArray_8_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_9_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_252),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[583:576]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_414),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[583:576]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_575),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[583:576]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_92),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[583:576]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_9_0_ext_R0_data),
    .R1_data (_DataArray_9_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_9_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_253),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[591:584]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_415),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[591:584]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_576),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[591:584]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_93),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[591:584]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_9_1_ext_R0_data),
    .R1_data (_DataArray_9_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_9_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_254),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[599:592]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_416),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[599:592]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_577),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[599:592]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_94),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[599:592]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_9_2_ext_R0_data),
    .R1_data (_DataArray_9_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_9_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_255),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[607:600]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_417),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[607:600]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_578),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[607:600]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_95),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[607:600]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_9_3_ext_R0_data),
    .R1_data (_DataArray_9_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_9_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_256),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[615:608]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_418),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[615:608]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_579),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[615:608]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_96),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[615:608]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_9_4_ext_R0_data),
    .R1_data (_DataArray_9_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_9_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_257),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[623:616]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_419),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[623:616]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_580),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[623:616]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_97),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[623:616]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_9_5_ext_R0_data),
    .R1_data (_DataArray_9_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_9_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_258),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[631:624]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_420),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[631:624]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_581),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[631:624]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_98),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[631:624]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_9_6_ext_R0_data),
    .R1_data (_DataArray_9_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_9_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W0_en   (_GEN_1 & _T_259),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W0_clk  (clock),
    .W0_data (wdata[639:632]),	// Cache.scala:187:20, :216:67
    .W1_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W1_en   (_GEN_0 & _T_421),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W1_clk  (clock),
    .W1_data (wdata[639:632]),	// Cache.scala:187:20, :235:71
    .W2_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W2_en   (_GEN & _T_582),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W2_clk  (clock),
    .W2_data (wdata[639:632]),	// Cache.scala:187:20, :271:71
    .W3_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W3_en   (_GEN_2 & _T_99),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W3_clk  (clock),
    .W3_data (wdata[639:632]),	// Cache.scala:187:20, :204:67
    .R0_data (_DataArray_9_7_ext_R0_data),
    .R1_data (_DataArray_9_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_10_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_102),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[647:640]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_262),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[647:640]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_424),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[647:640]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_585),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[647:640]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_10_0_ext_R0_data),
    .R1_data (_DataArray_10_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_10_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_103),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[655:648]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_263),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[655:648]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_425),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[655:648]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_586),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[655:648]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_10_1_ext_R0_data),
    .R1_data (_DataArray_10_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_10_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_104),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[663:656]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_264),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[663:656]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_426),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[663:656]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_587),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[663:656]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_10_2_ext_R0_data),
    .R1_data (_DataArray_10_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_10_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_105),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[671:664]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_265),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[671:664]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_427),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[671:664]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_588),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[671:664]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_10_3_ext_R0_data),
    .R1_data (_DataArray_10_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_10_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_106),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[679:672]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_266),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[679:672]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_428),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[679:672]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_589),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[679:672]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_10_4_ext_R0_data),
    .R1_data (_DataArray_10_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_10_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_107),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[687:680]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_267),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[687:680]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_429),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[687:680]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_590),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[687:680]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_10_5_ext_R0_data),
    .R1_data (_DataArray_10_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_10_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_108),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[695:688]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_268),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[695:688]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_430),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[695:688]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_591),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[695:688]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_10_6_ext_R0_data),
    .R1_data (_DataArray_10_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_10_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_109),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[703:696]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_269),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[703:696]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_431),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[703:696]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_592),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[703:696]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_10_7_ext_R0_data),
    .R1_data (_DataArray_10_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_11_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_112),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[711:704]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_272),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[711:704]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_434),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[711:704]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_595),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[711:704]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_11_0_ext_R0_data),
    .R1_data (_DataArray_11_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_11_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_113),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[719:712]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_273),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[719:712]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_435),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[719:712]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_596),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[719:712]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_11_1_ext_R0_data),
    .R1_data (_DataArray_11_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_11_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_114),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[727:720]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_274),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[727:720]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_436),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[727:720]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_597),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[727:720]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_11_2_ext_R0_data),
    .R1_data (_DataArray_11_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_11_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_115),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[735:728]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_275),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[735:728]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_437),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[735:728]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_598),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[735:728]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_11_3_ext_R0_data),
    .R1_data (_DataArray_11_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_11_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_116),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[743:736]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_276),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[743:736]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_438),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[743:736]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_599),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[743:736]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_11_4_ext_R0_data),
    .R1_data (_DataArray_11_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_11_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_117),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[751:744]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_277),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[751:744]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_439),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[751:744]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_600),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[751:744]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_11_5_ext_R0_data),
    .R1_data (_DataArray_11_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_11_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_118),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[759:752]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_278),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[759:752]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_440),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[759:752]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_601),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[759:752]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_11_6_ext_R0_data),
    .R1_data (_DataArray_11_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_11_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_119),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[767:760]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_279),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[767:760]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_441),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[767:760]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_602),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[767:760]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_11_7_ext_R0_data),
    .R1_data (_DataArray_11_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_12_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_122),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[775:768]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_282),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[775:768]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_444),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[775:768]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_605),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[775:768]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_12_0_ext_R0_data),
    .R1_data (_DataArray_12_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_12_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_123),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[783:776]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_283),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[783:776]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_445),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[783:776]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_606),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[783:776]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_12_1_ext_R0_data),
    .R1_data (_DataArray_12_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_12_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_124),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[791:784]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_284),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[791:784]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_446),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[791:784]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_607),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[791:784]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_12_2_ext_R0_data),
    .R1_data (_DataArray_12_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_12_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_125),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[799:792]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_285),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[799:792]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_447),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[799:792]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_608),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[799:792]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_12_3_ext_R0_data),
    .R1_data (_DataArray_12_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_12_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_126),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[807:800]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_286),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[807:800]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_448),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[807:800]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_609),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[807:800]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_12_4_ext_R0_data),
    .R1_data (_DataArray_12_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_12_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_127),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[815:808]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_287),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[815:808]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_449),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[815:808]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_610),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[815:808]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_12_5_ext_R0_data),
    .R1_data (_DataArray_12_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_12_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_128),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[823:816]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_288),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[823:816]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_450),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[823:816]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_611),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[823:816]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_12_6_ext_R0_data),
    .R1_data (_DataArray_12_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_12_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_129),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[831:824]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_289),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[831:824]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_451),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[831:824]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_612),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[831:824]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_12_7_ext_R0_data),
    .R1_data (_DataArray_12_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_13_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_132),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[839:832]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_292),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[839:832]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_454),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[839:832]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_615),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[839:832]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_13_0_ext_R0_data),
    .R1_data (_DataArray_13_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_13_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_133),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[847:840]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_293),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[847:840]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_455),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[847:840]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_616),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[847:840]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_13_1_ext_R0_data),
    .R1_data (_DataArray_13_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_13_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_134),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[855:848]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_294),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[855:848]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_456),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[855:848]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_617),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[855:848]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_13_2_ext_R0_data),
    .R1_data (_DataArray_13_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_13_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_135),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[863:856]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_295),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[863:856]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_457),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[863:856]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_618),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[863:856]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_13_3_ext_R0_data),
    .R1_data (_DataArray_13_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_13_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_136),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[871:864]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_296),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[871:864]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_458),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[871:864]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_619),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[871:864]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_13_4_ext_R0_data),
    .R1_data (_DataArray_13_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_13_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_137),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[879:872]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_297),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[879:872]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_459),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[879:872]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_620),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[879:872]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_13_5_ext_R0_data),
    .R1_data (_DataArray_13_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_13_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_138),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[887:880]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_298),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[887:880]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_460),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[887:880]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_621),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[887:880]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_13_6_ext_R0_data),
    .R1_data (_DataArray_13_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_13_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_139),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[895:888]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_299),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[895:888]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_461),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[895:888]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_622),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[895:888]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_13_7_ext_R0_data),
    .R1_data (_DataArray_13_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_14_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_142),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[903:896]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_302),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[903:896]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_464),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[903:896]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_625),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[903:896]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_14_0_ext_R0_data),
    .R1_data (_DataArray_14_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_14_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_143),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[911:904]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_303),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[911:904]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_465),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[911:904]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_626),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[911:904]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_14_1_ext_R0_data),
    .R1_data (_DataArray_14_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_14_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_144),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[919:912]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_304),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[919:912]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_466),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[919:912]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_627),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[919:912]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_14_2_ext_R0_data),
    .R1_data (_DataArray_14_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_14_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_145),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[927:920]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_305),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[927:920]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_467),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[927:920]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_628),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[927:920]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_14_3_ext_R0_data),
    .R1_data (_DataArray_14_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_14_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_146),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[935:928]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_306),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[935:928]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_468),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[935:928]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_629),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[935:928]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_14_4_ext_R0_data),
    .R1_data (_DataArray_14_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_14_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_147),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[943:936]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_307),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[943:936]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_469),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[943:936]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_630),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[943:936]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_14_5_ext_R0_data),
    .R1_data (_DataArray_14_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_14_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_148),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[951:944]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_308),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[951:944]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_470),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[951:944]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_631),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[951:944]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_14_6_ext_R0_data),
    .R1_data (_DataArray_14_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_14_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_149),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[959:952]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_309),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[959:952]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_471),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[959:952]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_632),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[959:952]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_14_7_ext_R0_data),
    .R1_data (_DataArray_14_7_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_15_0_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_152),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[967:960]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_312),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[967:960]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_474),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[967:960]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_635),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[967:960]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_15_0_ext_R0_data),
    .R1_data (_DataArray_15_0_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_15_1_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_153),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[975:968]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_313),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[975:968]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_475),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[975:968]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_636),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[975:968]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_15_1_ext_R0_data),
    .R1_data (_DataArray_15_1_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_15_2_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_154),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[983:976]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_314),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[983:976]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_476),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[983:976]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_637),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[983:976]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_15_2_ext_R0_data),
    .R1_data (_DataArray_15_2_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_15_3_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_155),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[991:984]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_315),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[991:984]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_477),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[991:984]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_638),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[991:984]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_15_3_ext_R0_data),
    .R1_data (_DataArray_15_3_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_15_4_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_156),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[999:992]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_316),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[999:992]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_478),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[999:992]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_639),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[999:992]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_15_4_ext_R0_data),
    .R1_data (_DataArray_15_4_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_15_5_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_157),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[1007:1000]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_317),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[1007:1000]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_479),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[1007:1000]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_640),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[1007:1000]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_15_5_ext_R0_data),
    .R1_data (_DataArray_15_5_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_15_6_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_158),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[1015:1008]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_318),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[1015:1008]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_480),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[1015:1008]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_641),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[1015:1008]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_15_6_ext_R0_data),
    .R1_data (_DataArray_15_6_ext_R1_data)
  );
  DataArray_10_1_combMem DataArray_15_7_ext (	// Cache.scala:99:49
    .R0_addr (way0[3:0]),	// Cache.scala:133:23, :143:43
    .R0_en   (ren),	// Cache.scala:111:48
    .R0_clk  (clock),
    .R1_addr (way1[3:0]),	// Cache.scala:134:28, :144:43
    .R1_en   (ren),	// Cache.scala:111:48
    .R1_clk  (clock),
    .W0_addr (_T_160),	// <stdin>:3885:24, :7697:24
    .W0_en   (_GEN_2 & _T_159),	// Cache.scala:99:49, :193:14, :194:26, :205:87
    .W0_clk  (clock),
    .W0_data (wdata[1023:1016]),	// Cache.scala:187:20, :204:67
    .W1_addr (way1_buf[3:0]),	// <stdin>:4613:25, :8425:25, Cache.scala:136:36
    .W1_en   (_GEN_1 & _T_319),	// Cache.scala:99:49, :193:14, :194:26, :217:87
    .W1_clk  (clock),
    .W1_data (wdata[1023:1016]),	// Cache.scala:187:20, :216:67
    .W2_addr (_T_482),	// <stdin>:5354:25, :9166:25
    .W2_en   (_GEN_0 & _T_481),	// Cache.scala:99:49, :193:14, :194:26, :236:91
    .W2_clk  (clock),
    .W2_data (wdata[1023:1016]),	// Cache.scala:187:20, :235:71
    .W3_addr (way1_buf[3:0]),	// <stdin>:6093:25, :9905:25, Cache.scala:136:36
    .W3_en   (_GEN & _T_642),	// Cache.scala:99:49, :193:14, :194:26, :272:91
    .W3_clk  (clock),
    .W3_data (wdata[1023:1016]),	// Cache.scala:187:20, :271:71
    .R0_data (_DataArray_15_7_ext_R0_data),
    .R1_data (_DataArray_15_7_ext_R1_data)
  );
  assign io_cpu_resp_valid = _T_652 | is_alloc_reg & ~(|cpu_mask);	// <stdin>:3134:10, :6946:10, Cache.scala:79:31, :85:23, :106:33, :162:{41,57,60,70}
  assign io_cpu_resp_bits_data = _GEN_6;	// <stdin>:3134:10, :6946:10, Cache.scala:161:27
  assign io_axi_req_valid = ~is_idle & (is_read ? ~_T_652 : is_write ? ~_T_653 : (_T_658 | _T_660) &
                ~io_axi_resp_bits_choose);	// <stdin>:3134:10, :6946:10, Cache.scala:75:25, :76:25, :77:26, :98:31, :106:33, :194:26, :222:32, :282:22, :296:18, :303:30, :335:{32,48}, :344:34, :368:42, :382:34
  assign io_axi_req_bits_rw = _GEN_17;	// <stdin>:3134:10, :6946:10, Cache.scala:283:24, :296:18
  assign io_axi_req_bits_addr = is_idle ? 32'h0 : is_read ? (_T_652 ? 32'h0 : _GEN_14) : is_write ? (_T_653 ? 32'h0 :
                _GEN_15) : _T_658 ? (io_axi_resp_bits_choose ? (io_axi_resp_valid ?
                _io_axi_req_bits_addr_T_13 : 32'h0) : addr_buf) : _GEN_16 ? 32'h0 : addr_buf;	// <stdin>:3134:10, :6946:10, Cache.scala:75:25, :76:25, :77:26, :87:27, :106:33, :285:26, :296:18, :303:30, :313:76, :316:33, :326:42, :335:{32,48}, :345:76, :348:33, :359:42, :368:42, :369:40, :372:{42,68}, :383:38, :388:42
  assign io_axi_req_bits_data = _GEN_12;	// <stdin>:3134:10, :6946:10, Cache.scala:284:26
  assign io_fccache_state = state;	// <stdin>:3134:10, :6946:10, Cache.scala:73:24
  assign io_fccache_hit = _T_652;	// <stdin>:3134:10, :6946:10, Cache.scala:106:33
endmodule

module IoforMem(	// <stdin>:10758:10
  input         clock,
                reset,
                io_axi_resp_valid,
  input  [63:0] io_axi_resp_bits_data,
  input  [31:0] io_excute_waddr,
                io_excute_raddr,
  input  [63:0] io_excute_wdata,
  input  [7:0]  io_excute_wmask,
  input         io_excute_load,
                io_excute_store,
                io_fc_stall,
  output        io_axi_req_valid,
                io_axi_req_bits_rw,
  output [31:0] io_axi_req_bits_addr,
  output [63:0] io_axi_req_bits_data,
  output [7:0]  io_axi_req_bits_mask,
  output        io_mem_data_valid,
  output [63:0] io_mem_data_bits,
  output        io_fc_req,
  output [1:0]  io_fc_state);

  reg  [1:0]  state;	// IoforMem.scala:47:24
  reg         axi_req_valid;	// IoforMem.scala:50:32
  reg         axi_req_bits_rw;	// IoforMem.scala:51:34
  reg  [31:0] axi_req_bits_addr;	// IoforMem.scala:52:36
  reg  [63:0] axi_req_bits_data;	// IoforMem.scala:53:36
  reg  [7:0]  axi_req_bits_mask;	// IoforMem.scala:54:36
  reg         mem_data_valid;	// IoforMem.scala:56:33
  reg  [63:0] mem_data_bits;	// IoforMem.scala:57:32
  wire        _T_1 = io_excute_load | io_excute_store;	// IoforMem.scala:69:34
  wire [31:0] _axi_req_bits_addr_T = io_excute_waddr | io_excute_raddr;	// IoforMem.scala:69:74
  wire        _T = state == 2'h0;	// IoforMem.scala:47:24, :74:18
  wire        _T_5 = state == 2'h1;	// IoforMem.scala:47:24, :74:18, :79:23
  always @(posedge clock) begin
    if (reset) begin
      state <= 2'h0;	// IoforMem.scala:47:24
      axi_req_valid <= 1'h0;	// IoforMem.scala:50:32
      axi_req_bits_rw <= 1'h0;	// IoforMem.scala:50:32, :51:34
      axi_req_bits_addr <= 32'h0;	// IoforMem.scala:52:36
      axi_req_bits_data <= 64'h0;	// IoforMem.scala:53:36
      axi_req_bits_mask <= 8'h0;	// IoforMem.scala:54:36
      mem_data_valid <= 1'h0;	// IoforMem.scala:50:32, :56:33
      mem_data_bits <= 64'h0;	// IoforMem.scala:53:36, :57:32
    end
    else begin
      automatic logic _T_4;	// IoforMem.scala:78:54
      automatic logic _GEN = _T_5 & io_axi_resp_valid;	// IoforMem.scala:56:33, :74:18, :91:36
      _T_4 = _T_1 & _axi_req_bits_addr_T > 32'h9FFFFFFF;	// IoforMem.scala:69:{34,74,93}, :78:{54,94}
      if (_T) begin	// IoforMem.scala:74:18
        if (_T_4)	// IoforMem.scala:78:54
          state <= 2'h1;	// IoforMem.scala:47:24, :79:23
        axi_req_valid <= _T_4 | axi_req_valid;	// IoforMem.scala:50:32, :78:{54,113}, :81:31
      end
      else begin	// IoforMem.scala:74:18
        if (_T_5) begin	// IoforMem.scala:74:18
          if (io_axi_resp_valid)
            state <= {io_fc_stall, 1'h0};	// IoforMem.scala:47:24, :50:32, :97:34, :98:27, :102:27
        end
        else if (state != 2'h2 | io_fc_stall) begin	// IoforMem.scala:47:24, :74:18, :98:27, :108:31
        end
        else	// IoforMem.scala:47:24, :74:18, :98:27, :108:31
          state <= 2'h0;	// IoforMem.scala:47:24
        axi_req_valid <= (~_T_5 | ~io_axi_resp_valid | ~io_fc_stall) & axi_req_valid;	// IoforMem.scala:50:32, :59:22, :74:18, :91:36, :92:34, :97:34, :100:35
      end
      if (_T & _T_4) begin	// IoforMem.scala:52:36, :74:18, :78:{54,113}
        axi_req_bits_rw <= io_excute_load;	// IoforMem.scala:51:34
        axi_req_bits_addr <= _axi_req_bits_addr_T;	// IoforMem.scala:52:36, :69:74
        axi_req_bits_data <= io_excute_wdata;	// IoforMem.scala:53:36
        axi_req_bits_mask <= io_excute_wmask;	// IoforMem.scala:54:36
      end
      mem_data_valid <= ~_T & (_GEN | mem_data_valid);	// IoforMem.scala:56:33, :74:18, :76:28, :91:36
      if (_T | ~_GEN) begin	// IoforMem.scala:56:33, :57:32, :74:18, :91:36
      end
      else	// IoforMem.scala:56:33, :57:32, :74:18, :91:36
        mem_data_bits <= io_axi_resp_bits_data;	// IoforMem.scala:57:32
    end
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:10758:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:10758:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:10758:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:10758:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:10758:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:10758:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:10758:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:10758:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:10758:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:10758:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:10758:10
        `INIT_RANDOM_PROLOG_	// <stdin>:10758:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:10758:10
        _RANDOM_0 = `RANDOM;	// <stdin>:10758:10
        _RANDOM_1 = `RANDOM;	// <stdin>:10758:10
        _RANDOM_2 = `RANDOM;	// <stdin>:10758:10
        _RANDOM_3 = `RANDOM;	// <stdin>:10758:10
        _RANDOM_4 = `RANDOM;	// <stdin>:10758:10
        _RANDOM_5 = `RANDOM;	// <stdin>:10758:10
        state = _RANDOM_0[1:0];	// IoforMem.scala:47:24
        axi_req_valid = _RANDOM_0[2];	// IoforMem.scala:47:24, :50:32
        axi_req_bits_rw = _RANDOM_0[3];	// IoforMem.scala:47:24, :51:34
        axi_req_bits_addr = {_RANDOM_0[31:4], _RANDOM_1[3:0]};	// IoforMem.scala:47:24, :52:36
        axi_req_bits_data = {_RANDOM_1[31:4], _RANDOM_2, _RANDOM_3[3:0]};	// IoforMem.scala:52:36, :53:36
        axi_req_bits_mask = _RANDOM_3[11:4];	// IoforMem.scala:53:36, :54:36
        mem_data_valid = _RANDOM_3[12];	// IoforMem.scala:53:36, :56:33
        mem_data_bits = {_RANDOM_3[31:13], _RANDOM_4, _RANDOM_5[12:0]};	// IoforMem.scala:53:36, :57:32
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:10758:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:10758:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_axi_req_valid = (_T | ~_T_5 | ~io_axi_resp_valid) & axi_req_valid;	// <stdin>:10758:10, IoforMem.scala:50:32, :59:22, :74:18, :91:36, :92:34
  assign io_axi_req_bits_rw = axi_req_bits_rw;	// <stdin>:10758:10, IoforMem.scala:51:34
  assign io_axi_req_bits_addr = axi_req_bits_addr;	// <stdin>:10758:10, IoforMem.scala:52:36
  assign io_axi_req_bits_data = axi_req_bits_data;	// <stdin>:10758:10, IoforMem.scala:53:36
  assign io_axi_req_bits_mask = axi_req_bits_mask;	// <stdin>:10758:10, IoforMem.scala:54:36
  assign io_mem_data_valid = mem_data_valid;	// <stdin>:10758:10, IoforMem.scala:56:33
  assign io_mem_data_bits = mem_data_bits;	// <stdin>:10758:10, IoforMem.scala:57:32
  assign io_fc_req = _T_1 & _axi_req_bits_addr_T > 32'h9FFFFFFF;	// <stdin>:10758:10, IoforMem.scala:69:{34,53,74,93}
  assign io_fc_state = state;	// <stdin>:10758:10, IoforMem.scala:47:24
endmodule

// external module DebugInterface

// external module Interact

module Core(	// <stdin>:10858:10
  input         clock,
                reset,
                io_AXI_Interface_aw_ready,
                io_AXI_Interface_w_ready,
                io_AXI_Interface_b_valid,
                io_AXI_Interface_ar_ready,
                io_AXI_Interface_r_valid,
  input  [63:0] io_AXI_Interface_r_bits_data,
  input         io_AXI_Interface_r_bits_last,
  output        io_AXI_Interface_aw_valid,
  output [31:0] io_AXI_Interface_aw_bits_addr,
  output [7:0]  io_AXI_Interface_aw_bits_len,
  output        io_AXI_Interface_w_valid,
  output [63:0] io_AXI_Interface_w_bits_data,
  output [7:0]  io_AXI_Interface_w_bits_strb,
  output        io_AXI_Interface_w_bits_last,
                io_AXI_Interface_ar_valid,
  output [31:0] io_AXI_Interface_ar_bits_addr,
  output [7:0]  io_AXI_Interface_ar_bits_len);

  wire        _ioformem_io_axi_req_valid;	// Core.scala:108:26
  wire        _ioformem_io_axi_req_bits_rw;	// Core.scala:108:26
  wire [31:0] _ioformem_io_axi_req_bits_addr;	// Core.scala:108:26
  wire [63:0] _ioformem_io_axi_req_bits_data;	// Core.scala:108:26
  wire [7:0]  _ioformem_io_axi_req_bits_mask;	// Core.scala:108:26
  wire        _ioformem_io_mem_data_valid;	// Core.scala:108:26
  wire [63:0] _ioformem_io_mem_data_bits;	// Core.scala:108:26
  wire        _ioformem_io_fc_req;	// Core.scala:108:26
  wire [1:0]  _ioformem_io_fc_state;	// Core.scala:108:26
  wire        _Dcache_io_cpu_resp_valid;	// Core.scala:105:24
  wire [63:0] _Dcache_io_cpu_resp_bits_data;	// Core.scala:105:24
  wire        _Dcache_io_axi_req_valid;	// Core.scala:105:24
  wire        _Dcache_io_axi_req_bits_rw;	// Core.scala:105:24
  wire [31:0] _Dcache_io_axi_req_bits_addr;	// Core.scala:105:24
  wire [63:0] _Dcache_io_axi_req_bits_data;	// Core.scala:105:24
  wire [2:0]  _Dcache_io_fccache_state;	// Core.scala:105:24
  wire        _Dcache_io_fccache_hit;	// Core.scala:105:24
  wire        _Icache_io_cpu_resp_valid;	// Core.scala:104:24
  wire [63:0] _Icache_io_cpu_resp_bits_data;	// Core.scala:104:24
  wire        _Icache_io_axi_req_valid;	// Core.scala:104:24
  wire        _Icache_io_axi_req_bits_rw;	// Core.scala:104:24
  wire [31:0] _Icache_io_axi_req_bits_addr;	// Core.scala:104:24
  wire [63:0] _Icache_io_axi_req_bits_data;	// Core.scala:104:24
  wire [2:0]  _Icache_io_fccache_state;	// Core.scala:104:24
  wire        _Icache_io_fccache_hit;	// Core.scala:104:24
  wire        _arbitor_io_master0_resp_valid;	// Core.scala:101:25
  wire [63:0] _arbitor_io_master0_resp_bits_data;	// Core.scala:101:25
  wire        _arbitor_io_master1_resp_valid;	// Core.scala:101:25
  wire [63:0] _arbitor_io_master1_resp_bits_data;	// Core.scala:101:25
  wire        _arbitor_io_master1_resp_bits_choose;	// Core.scala:101:25
  wire        _arbitor_io_master2_resp_valid;	// Core.scala:101:25
  wire [63:0] _arbitor_io_master2_resp_bits_data;	// Core.scala:101:25
  wire        _arbitor_io_master2_resp_bits_choose;	// Core.scala:101:25
  wire [11:0] _trap_io_csrtr_rd;	// Core.scala:98:22
  wire        _trap_io_csrtr_csr_wen;	// Core.scala:98:22
  wire [63:0] _trap_io_csrtr_csr_wdata;	// Core.scala:98:22
  wire        _trap_io_fctr_pop_NOP;	// Core.scala:98:22
  wire [2:0]  _trap_io_fctr_trap_state;	// Core.scala:98:22
  wire        _trap_io_fctr_jump_flag;	// Core.scala:98:22
  wire [31:0] _trap_io_fctr_jump_pc;	// Core.scala:98:22
  wire [63:0] _csrs_io_CSRDe_csr_rdata;	// Core.scala:95:22
  wire [63:0] _csrs_io_CSRTr_MTVEC;	// Core.scala:95:22
  wire [63:0] _csrs_io_CSRTr_MCAUSE;	// Core.scala:95:22
  wire [63:0] _csrs_io_CSRTr_MEPC;	// Core.scala:95:22
  wire [63:0] _csrs_io_CSRTr_MIE;	// Core.scala:95:22
  wire [63:0] _csrs_io_CSRTr_MIP;	// Core.scala:95:22
  wire [63:0] _csrs_io_CSRTr_MSTATUS;	// Core.scala:95:22
  wire        _fc_io_fcfe_jump_flag;	// Core.scala:92:20
  wire [31:0] _fc_io_fcfe_jump_pc;	// Core.scala:92:20
  wire        _fc_io_fcfe_flush;	// Core.scala:92:20
  wire        _fc_io_fcfe_stall;	// Core.scala:92:20
  wire        _fc_io_fcde_flush;	// Core.scala:92:20
  wire        _fc_io_fcde_stall;	// Core.scala:92:20
  wire        _fc_io_fcex_stall;	// Core.scala:92:20
  wire        _fc_io_fcmem_stall;	// Core.scala:92:20
  wire        _fc_io_fcwb_stall;	// Core.scala:92:20
  wire        _fc_io_fcio_stall;	// Core.scala:92:20
  wire        _fc_io_sdb_stall;	// Core.scala:92:20
  wire [63:0] _regfile_io_RfDe_reg1_rdata;	// Core.scala:89:25
  wire [63:0] _regfile_io_RfDe_reg2_rdata;	// Core.scala:89:25
  wire        _fw_io_fwde_fw_sel1;	// Core.scala:86:20
  wire        _fw_io_fwde_fw_sel2;	// Core.scala:86:20
  wire [63:0] _fw_io_fwde_fw_data1;	// Core.scala:86:20
  wire [63:0] _fw_io_fwde_fw_data2;	// Core.scala:86:20
  wire        _fw_io_fwde_csr_fw_sel;	// Core.scala:86:20
  wire [63:0] _fw_io_fwde_csr_fw_data;	// Core.scala:86:20
  wire        _clint_io_clmem_Clrvalue_valid;	// Core.scala:83:23
  wire [63:0] _clint_io_clmem_Clrvalue_bits;	// Core.scala:83:23
  wire        _clint_io_timer_int;	// Core.scala:83:23
  wire [4:0]  _wb_io_rfio_rd;	// Core.scala:30:20
  wire        _wb_io_rfio_reg_wen;	// Core.scala:30:20
  wire [63:0] _wb_io_rfio_reg_wdata;	// Core.scala:30:20
  wire [4:0]  _wb_io_fwwb_reg_waddr;	// Core.scala:30:20
  wire [63:0] _wb_io_fwwb_reg_wdata;	// Core.scala:30:20
  wire        _wb_io_fwwb_reg_we;	// Core.scala:30:20
  wire [63:0] _wb_io_fwwb_csr_wdata;	// Core.scala:30:20
  wire        _wb_io_fwwb_csr_wen;	// Core.scala:30:20
  wire [11:0] _wb_io_fwwb_csr_waddr;	// Core.scala:30:20
  wire [11:0] _wb_io_csrs_rd;	// Core.scala:30:20
  wire        _wb_io_csrs_csr_wen;	// Core.scala:30:20
  wire [63:0] _wb_io_csrs_csr_wdata;	// Core.scala:30:20
  wire [63:0] _mem_io_mwio_reg_wdata;	// Core.scala:29:21
  wire [4:0]  _mem_io_mwio_reg_waddr;	// Core.scala:29:21
  wire [1:0]  _mem_io_mwio_wb_type;	// Core.scala:29:21
  wire [63:0] _mem_io_mwio_csr_wdata;	// Core.scala:29:21
  wire        _mem_io_mwio_csr_wen;	// Core.scala:29:21
  wire [11:0] _mem_io_mwio_csr_waddr;	// Core.scala:29:21
  wire        _mem_io_mwio_has_inst;	// Core.scala:29:21
  wire [4:0]  _mem_io_fwmem_reg_waddr;	// Core.scala:29:21
  wire [63:0] _mem_io_fwmem_reg_wdata;	// Core.scala:29:21
  wire        _mem_io_fwmem_reg_we;	// Core.scala:29:21
  wire [63:0] _mem_io_fwmem_csr_wdata;	// Core.scala:29:21
  wire        _mem_io_fwmem_csr_wen;	// Core.scala:29:21
  wire [11:0] _mem_io_fwmem_csr_waddr;	// Core.scala:29:21
  wire [63:0] _excute_io_emio_reg_wdata;	// Core.scala:27:24
  wire [4:0]  _excute_io_emio_reg_waddr;	// Core.scala:27:24
  wire [1:0]  _excute_io_emio_wb_type;	// Core.scala:27:24
  wire [2:0]  _excute_io_emio_ld_type;	// Core.scala:27:24
  wire [2:0]  _excute_io_emio_ld_addr_lowbit;	// Core.scala:27:24
  wire [63:0] _excute_io_emio_csr_wdata;	// Core.scala:27:24
  wire        _excute_io_emio_csr_wen;	// Core.scala:27:24
  wire [11:0] _excute_io_emio_csr_waddr;	// Core.scala:27:24
  wire        _excute_io_emio_has_inst;	// Core.scala:27:24
  wire        _excute_io_fcex_jump_flag;	// Core.scala:27:24
  wire [31:0] _excute_io_fcex_jump_pc;	// Core.scala:27:24
  wire        _excute_io_fcex_mul_div;	// Core.scala:27:24
  wire        _excute_io_fcex_mul_div_valid;	// Core.scala:27:24
  wire [63:0] _excute_io_raddr;	// Core.scala:27:24
  wire [63:0] _excute_io_waddr;	// Core.scala:27:24
  wire [63:0] _excute_io_wdata;	// Core.scala:27:24
  wire [7:0]  _excute_io_wmask;	// Core.scala:27:24
  wire        _excute_io_cl_type;	// Core.scala:27:24
  wire [4:0]  _excute_io_fwex_reg_waddr;	// Core.scala:27:24
  wire [63:0] _excute_io_fwex_reg_wdata;	// Core.scala:27:24
  wire        _excute_io_fwex_reg_we;	// Core.scala:27:24
  wire [63:0] _excute_io_fwex_csr_wdata;	// Core.scala:27:24
  wire        _excute_io_fwex_csr_wen;	// Core.scala:27:24
  wire [11:0] _excute_io_fwex_csr_waddr;	// Core.scala:27:24
  wire        _excute_io_clex_valid;	// Core.scala:27:24
  wire [2:0]  _excute_io_clex_ld_type;	// Core.scala:27:24
  wire [63:0] _excute_io_clex_raddr;	// Core.scala:27:24
  wire [2:0]  _excute_io_clex_sd_type;	// Core.scala:27:24
  wire [63:0] _excute_io_clex_waddr;	// Core.scala:27:24
  wire [7:0]  _excute_io_clex_wmask;	// Core.scala:27:24
  wire [63:0] _excute_io_clex_wdata;	// Core.scala:27:24
  wire [4:0]  _decode_io_rfio_reg1_raddr;	// Core.scala:26:24
  wire [4:0]  _decode_io_rfio_reg2_raddr;	// Core.scala:26:24
  wire [63:0] _decode_io_deio_op_a;	// Core.scala:26:24
  wire [63:0] _decode_io_deio_op_b;	// Core.scala:26:24
  wire [4:0]  _decode_io_deio_reg_waddr;	// Core.scala:26:24
  wire        _decode_io_deio_branch_type;	// Core.scala:26:24
  wire [63:0] _decode_io_deio_branch_addr;	// Core.scala:26:24
  wire [5:0]  _decode_io_deio_alu_op;	// Core.scala:26:24
  wire [5:0]  _decode_io_deio_shamt;	// Core.scala:26:24
  wire [1:0]  _decode_io_deio_wb_type;	// Core.scala:26:24
  wire [2:0]  _decode_io_deio_sd_type;	// Core.scala:26:24
  wire [63:0] _decode_io_deio_reg2_rdata;	// Core.scala:26:24
  wire [2:0]  _decode_io_deio_ld_type;	// Core.scala:26:24
  wire [63:0] _decode_io_deio_csr_t;	// Core.scala:26:24
  wire [11:0] _decode_io_deio_csr_waddr;	// Core.scala:26:24
  wire        _decode_io_deio_csr_wen;	// Core.scala:26:24
  wire        _decode_io_deio_has_inst;	// Core.scala:26:24
  wire        _decode_io_jump_flag;	// Core.scala:26:24
  wire [31:0] _decode_io_jump_pc;	// Core.scala:26:24
  wire        _decode_io_load_use;	// Core.scala:26:24
  wire [4:0]  _decode_io_fwde_reg1_raddr;	// Core.scala:26:24
  wire [4:0]  _decode_io_fwde_reg2_raddr;	// Core.scala:26:24
  wire [11:0] _decode_io_fwde_csr_raddr;	// Core.scala:26:24
  wire [11:0] _decode_io_csrs_csr_raddr;	// Core.scala:26:24
  wire [31:0] _fetch_io_fdio_pc;	// Core.scala:25:23
  wire        _fetch_io_pc_valid;	// Core.scala:25:23
  wire [31:0] _fetch_io_pc_bits;	// Core.scala:25:23
  reg  [31:0] fdreg_pc;	// Core.scala:33:24
  reg  [63:0] dereg_op_a;	// Core.scala:39:24
  reg  [63:0] dereg_op_b;	// Core.scala:39:24
  reg  [4:0]  dereg_reg_waddr;	// Core.scala:39:24
  reg         dereg_branch_type;	// Core.scala:39:24
  reg  [63:0] dereg_branch_addr;	// Core.scala:39:24
  reg  [5:0]  dereg_alu_op;	// Core.scala:39:24
  reg  [5:0]  dereg_shamt;	// Core.scala:39:24
  reg  [1:0]  dereg_wb_type;	// Core.scala:39:24
  reg  [2:0]  dereg_sd_type;	// Core.scala:39:24
  reg  [63:0] dereg_reg2_rdata;	// Core.scala:39:24
  reg  [2:0]  dereg_ld_type;	// Core.scala:39:24
  reg  [63:0] dereg_csr_t;	// Core.scala:39:24
  reg  [11:0] dereg_csr_waddr;	// Core.scala:39:24
  reg         dereg_csr_wen;	// Core.scala:39:24
  reg         dereg_has_inst;	// Core.scala:39:24
  reg  [63:0] emreg_reg_wdata;	// Core.scala:57:24
  reg  [4:0]  emreg_reg_waddr;	// Core.scala:57:24
  reg  [1:0]  emreg_wb_type;	// Core.scala:57:24
  reg  [2:0]  emreg_ld_type;	// Core.scala:57:24
  reg  [2:0]  emreg_ld_addr_lowbit;	// Core.scala:57:24
  reg  [63:0] emreg_csr_wdata;	// Core.scala:57:24
  reg         emreg_csr_wen;	// Core.scala:57:24
  reg  [11:0] emreg_csr_waddr;	// Core.scala:57:24
  reg         emreg_has_inst;	// Core.scala:57:24
  reg  [63:0] mwreg_reg_wdata;	// Core.scala:71:24
  reg  [4:0]  mwreg_reg_waddr;	// Core.scala:71:24
  reg  [1:0]  mwreg_wb_type;	// Core.scala:71:24
  reg  [63:0] mwreg_csr_wdata;	// Core.scala:71:24
  reg         mwreg_csr_wen;	// Core.scala:71:24
  reg  [11:0] mwreg_csr_waddr;	// Core.scala:71:24
  reg         mwreg_has_inst;	// Core.scala:71:24
  wire [63:0] _DI_io_mem_addr_T = _excute_io_waddr | _excute_io_raddr;	// Core.scala:27:24, :454:93
  always @(posedge clock) begin
    if (reset) begin
      fdreg_pc <= 32'h80000000;	// <stdin>:10879:23, Core.scala:33:24
      dereg_op_a <= 64'h0;	// Core.scala:39:24, :432:36
      dereg_op_b <= 64'h0;	// Core.scala:39:24, :432:36
      dereg_reg_waddr <= 5'h0;	// <stdin>:10895:27, Core.scala:39:24
      dereg_branch_type <= 1'h0;	// <stdin>:10858:10, Core.scala:39:24
      dereg_branch_addr <= 64'h0;	// Core.scala:39:24, :432:36
      dereg_alu_op <= 6'h3F;	// <stdin>:10892:27, Core.scala:39:24
      dereg_shamt <= 6'h0;	// <stdin>:10891:23, Core.scala:39:24
      dereg_wb_type <= 2'h0;	// <stdin>:10890:25, Core.scala:39:24
      dereg_sd_type <= 3'h0;	// <stdin>:10858:10, Core.scala:39:24
      dereg_reg2_rdata <= 64'h0;	// Core.scala:39:24, :432:36
      dereg_ld_type <= 3'h0;	// <stdin>:10858:10, Core.scala:39:24
      dereg_csr_t <= 64'h0;	// Core.scala:39:24, :432:36
      dereg_csr_waddr <= 12'h0;	// <stdin>:10885:27, Core.scala:39:24
      dereg_csr_wen <= 1'h0;	// <stdin>:10858:10, Core.scala:39:24
      emreg_reg_wdata <= 64'h0;	// Core.scala:57:24, :432:36
      emreg_reg_waddr <= 5'h0;	// <stdin>:10895:27, Core.scala:57:24
      emreg_wb_type <= 2'h0;	// <stdin>:10890:25, Core.scala:57:24
      emreg_ld_type <= 3'h0;	// <stdin>:10858:10, Core.scala:57:24
      emreg_ld_addr_lowbit <= 3'h0;	// <stdin>:10858:10, Core.scala:57:24
      emreg_csr_wdata <= 64'h0;	// Core.scala:57:24, :432:36
      emreg_csr_wen <= 1'h0;	// <stdin>:10858:10, Core.scala:57:24
      emreg_csr_waddr <= 12'h0;	// <stdin>:10885:27, Core.scala:57:24
      mwreg_reg_wdata <= 64'h0;	// Core.scala:71:24, :432:36
      mwreg_reg_waddr <= 5'h0;	// <stdin>:10895:27, Core.scala:71:24
      mwreg_wb_type <= 2'h0;	// <stdin>:10890:25, Core.scala:71:24
      mwreg_csr_wdata <= 64'h0;	// Core.scala:71:24, :432:36
      mwreg_csr_wen <= 1'h0;	// <stdin>:10858:10, Core.scala:71:24
      mwreg_csr_waddr <= 12'h0;	// <stdin>:10885:27, Core.scala:71:24
    end
    else begin
      fdreg_pc <= _fetch_io_fdio_pc;	// Core.scala:25:23, :33:24
      if (_fc_io_fcde_stall) begin	// Core.scala:92:20
      end
      else begin	// Core.scala:92:20
        if (_fc_io_fcde_flush) begin	// Core.scala:92:20
          dereg_op_a <= 64'h0;	// Core.scala:39:24, :432:36
          dereg_op_b <= 64'h0;	// Core.scala:39:24, :432:36
          dereg_reg_waddr <= 5'h0;	// <stdin>:10895:27, Core.scala:39:24
          dereg_branch_addr <= 64'h0;	// Core.scala:39:24, :432:36
          dereg_alu_op <= 6'h0;	// <stdin>:10891:23, Core.scala:39:24
          dereg_shamt <= 6'h0;	// <stdin>:10891:23, Core.scala:39:24
          dereg_wb_type <= 2'h0;	// <stdin>:10890:25, Core.scala:39:24
          dereg_sd_type <= 3'h0;	// <stdin>:10858:10, Core.scala:39:24
          dereg_reg2_rdata <= 64'h0;	// Core.scala:39:24, :432:36
          dereg_ld_type <= 3'h0;	// <stdin>:10858:10, Core.scala:39:24
          dereg_csr_t <= 64'h0;	// Core.scala:39:24, :432:36
          dereg_csr_waddr <= 12'h0;	// <stdin>:10885:27, Core.scala:39:24
        end
        else begin	// Core.scala:92:20
          dereg_op_a <= _decode_io_deio_op_a;	// Core.scala:26:24, :39:24
          dereg_op_b <= _decode_io_deio_op_b;	// Core.scala:26:24, :39:24
          dereg_reg_waddr <= _decode_io_deio_reg_waddr;	// Core.scala:26:24, :39:24
          dereg_branch_addr <= _decode_io_deio_branch_addr;	// Core.scala:26:24, :39:24
          dereg_alu_op <= _decode_io_deio_alu_op;	// Core.scala:26:24, :39:24
          dereg_shamt <= _decode_io_deio_shamt;	// Core.scala:26:24, :39:24
          dereg_wb_type <= _decode_io_deio_wb_type;	// Core.scala:26:24, :39:24
          dereg_sd_type <= _decode_io_deio_sd_type;	// Core.scala:26:24, :39:24
          dereg_reg2_rdata <= _decode_io_deio_reg2_rdata;	// Core.scala:26:24, :39:24
          dereg_ld_type <= _decode_io_deio_ld_type;	// Core.scala:26:24, :39:24
          dereg_csr_t <= _decode_io_deio_csr_t;	// Core.scala:26:24, :39:24
          dereg_csr_waddr <= _decode_io_deio_csr_waddr;	// Core.scala:26:24, :39:24
        end
        dereg_branch_type <= ~_fc_io_fcde_flush & _decode_io_deio_branch_type;	// Core.scala:26:24, :39:24, :92:20, Mux.scala:101:16
        dereg_csr_wen <= ~_fc_io_fcde_flush & _decode_io_deio_csr_wen;	// Core.scala:26:24, :39:24, :92:20, Mux.scala:101:16
      end
      if (_fc_io_fcex_stall) begin	// Core.scala:92:20
      end
      else begin	// Core.scala:92:20
        emreg_reg_wdata <= _excute_io_emio_reg_wdata;	// Core.scala:27:24, :57:24
        emreg_reg_waddr <= _excute_io_emio_reg_waddr;	// Core.scala:27:24, :57:24
        emreg_wb_type <= _excute_io_emio_wb_type;	// Core.scala:27:24, :57:24
        emreg_ld_type <= _excute_io_emio_ld_type;	// Core.scala:27:24, :57:24
        emreg_ld_addr_lowbit <= _excute_io_emio_ld_addr_lowbit;	// Core.scala:27:24, :57:24
        emreg_csr_wdata <= _excute_io_emio_csr_wdata;	// Core.scala:27:24, :57:24
        emreg_csr_wen <= _excute_io_emio_csr_wen;	// Core.scala:27:24, :57:24
        emreg_csr_waddr <= _excute_io_emio_csr_waddr;	// Core.scala:27:24, :57:24
      end
      if (_fc_io_fcmem_stall) begin	// Core.scala:92:20
      end
      else begin	// Core.scala:92:20
        mwreg_reg_wdata <= _mem_io_mwio_reg_wdata;	// Core.scala:29:21, :71:24
        mwreg_reg_waddr <= _mem_io_mwio_reg_waddr;	// Core.scala:29:21, :71:24
        mwreg_wb_type <= _mem_io_mwio_wb_type;	// Core.scala:29:21, :71:24
        mwreg_csr_wdata <= _mem_io_mwio_csr_wdata;	// Core.scala:29:21, :71:24
        mwreg_csr_wen <= _mem_io_mwio_csr_wen;	// Core.scala:29:21, :71:24
        mwreg_csr_waddr <= _mem_io_mwio_csr_waddr;	// Core.scala:29:21, :71:24
      end
    end
    if (_fc_io_fcde_stall) begin	// Core.scala:92:20
    end
    else	// Core.scala:92:20
      dereg_has_inst <= ~_fc_io_fcde_flush & _decode_io_deio_has_inst;	// Core.scala:26:24, :39:24, :92:20, Mux.scala:101:16
    if (_fc_io_fcex_stall) begin	// Core.scala:92:20
    end
    else	// Core.scala:92:20
      emreg_has_inst <= _excute_io_emio_has_inst;	// Core.scala:27:24, :57:24
    if (_fc_io_fcmem_stall) begin	// Core.scala:92:20
    end
    else	// Core.scala:92:20
      mwreg_has_inst <= _mem_io_mwio_has_inst;	// Core.scala:29:21, :71:24
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:10858:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:10858:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:10858:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_6;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_7;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_8;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_9;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_10;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_11;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_12;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_13;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_14;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_15;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_16;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_17;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_18;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_19;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_20;	// <stdin>:10858:10
      automatic logic [31:0] _RANDOM_21;	// <stdin>:10858:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:10858:10
        `INIT_RANDOM_PROLOG_	// <stdin>:10858:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:10858:10
        _RANDOM_0 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_1 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_2 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_3 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_4 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_5 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_6 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_7 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_8 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_9 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_10 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_11 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_12 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_13 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_14 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_15 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_16 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_17 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_18 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_19 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_20 = `RANDOM;	// <stdin>:10858:10
        _RANDOM_21 = `RANDOM;	// <stdin>:10858:10
        fdreg_pc = _RANDOM_0;	// Core.scala:33:24
        dereg_op_a = {_RANDOM_1, _RANDOM_2};	// Core.scala:39:24
        dereg_op_b = {_RANDOM_3, _RANDOM_4};	// Core.scala:39:24
        dereg_reg_waddr = _RANDOM_5[4:0];	// Core.scala:39:24
        dereg_branch_type = _RANDOM_5[5];	// Core.scala:39:24
        dereg_branch_addr = {_RANDOM_5[31:6], _RANDOM_6, _RANDOM_7[5:0]};	// Core.scala:39:24
        dereg_alu_op = _RANDOM_7[11:6];	// Core.scala:39:24
        dereg_shamt = _RANDOM_7[17:12];	// Core.scala:39:24
        dereg_wb_type = _RANDOM_7[19:18];	// Core.scala:39:24
        dereg_sd_type = _RANDOM_7[22:20];	// Core.scala:39:24
        dereg_reg2_rdata = {_RANDOM_7[31:23], _RANDOM_8, _RANDOM_9[22:0]};	// Core.scala:39:24
        dereg_ld_type = _RANDOM_9[25:23];	// Core.scala:39:24
        dereg_csr_t = {_RANDOM_9[31:26], _RANDOM_10, _RANDOM_11[25:0]};	// Core.scala:39:24
        dereg_csr_waddr = {_RANDOM_11[31:26], _RANDOM_12[5:0]};	// Core.scala:39:24
        dereg_csr_wen = _RANDOM_12[6];	// Core.scala:39:24
        dereg_has_inst = _RANDOM_12[7];	// Core.scala:39:24
        emreg_reg_wdata = {_RANDOM_12[31:8], _RANDOM_13, _RANDOM_14[7:0]};	// Core.scala:39:24, :57:24
        emreg_reg_waddr = _RANDOM_14[12:8];	// Core.scala:57:24
        emreg_wb_type = _RANDOM_14[14:13];	// Core.scala:57:24
        emreg_ld_type = _RANDOM_14[17:15];	// Core.scala:57:24
        emreg_ld_addr_lowbit = _RANDOM_14[20:18];	// Core.scala:57:24
        emreg_csr_wdata = {_RANDOM_14[31:21], _RANDOM_15, _RANDOM_16[20:0]};	// Core.scala:57:24
        emreg_csr_wen = _RANDOM_16[21];	// Core.scala:57:24
        emreg_csr_waddr = {_RANDOM_16[31:22], _RANDOM_17[1:0]};	// Core.scala:57:24
        emreg_has_inst = _RANDOM_17[2];	// Core.scala:57:24
        mwreg_reg_wdata = {_RANDOM_17[31:3], _RANDOM_18, _RANDOM_19[2:0]};	// Core.scala:57:24, :71:24
        mwreg_reg_waddr = _RANDOM_19[7:3];	// Core.scala:71:24
        mwreg_wb_type = _RANDOM_19[9:8];	// Core.scala:71:24
        mwreg_csr_wdata = {_RANDOM_19[31:10], _RANDOM_20, _RANDOM_21[9:0]};	// Core.scala:71:24
        mwreg_csr_wen = _RANDOM_21[10];	// Core.scala:71:24
        mwreg_csr_waddr = _RANDOM_21[22:11];	// Core.scala:71:24
        mwreg_has_inst = _RANDOM_21[23];	// Core.scala:71:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:10858:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:10858:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  Fetch fetch (	// Core.scala:25:23
    .clock             (clock),
    .reset             (reset),
    .io_fcfe_jump_flag (_fc_io_fcfe_jump_flag),	// Core.scala:92:20
    .io_fcfe_jump_pc   (_fc_io_fcfe_jump_pc),	// Core.scala:92:20
    .io_fcfe_flush     (_fc_io_fcfe_flush),	// Core.scala:92:20
    .io_fcfe_stall     (_fc_io_fcfe_stall),	// Core.scala:92:20
    .io_fdio_pc        (_fetch_io_fdio_pc),
    .io_pc_valid       (_fetch_io_pc_valid),
    .io_pc_bits        (_fetch_io_pc_bits)
  );
  Decode decode (	// Core.scala:26:24
    .clock               (clock),
    .reset               (reset),
    .io_inst_valid       (_Icache_io_cpu_resp_valid),	// Core.scala:104:24
    .io_inst_bits_data   (_Icache_io_cpu_resp_bits_data),	// Core.scala:104:24
    .io_fdio_pc          (fdreg_pc),	// Core.scala:33:24
    .io_rfio_reg1_rdata  (_regfile_io_RfDe_reg1_rdata),	// Core.scala:89:25
    .io_rfio_reg2_rdata  (_regfile_io_RfDe_reg2_rdata),	// Core.scala:89:25
    .io_branch           (_excute_io_fcex_jump_flag),	// Core.scala:27:24
    .io_stall            (_fc_io_fcde_stall),	// Core.scala:92:20
    .io_flush            (_fc_io_fcde_flush),	// Core.scala:92:20
    .io_fwde_fw_sel1     (_fw_io_fwde_fw_sel1),	// Core.scala:86:20
    .io_fwde_fw_sel2     (_fw_io_fwde_fw_sel2),	// Core.scala:86:20
    .io_fwde_fw_data1    (_fw_io_fwde_fw_data1),	// Core.scala:86:20
    .io_fwde_fw_data2    (_fw_io_fwde_fw_data2),	// Core.scala:86:20
    .io_fwde_csr_fw_sel  (_fw_io_fwde_csr_fw_sel),	// Core.scala:86:20
    .io_fwde_csr_fw_data (_fw_io_fwde_csr_fw_data),	// Core.scala:86:20
    .io_csrs_csr_rdata   (_csrs_io_CSRDe_csr_rdata),	// Core.scala:95:22
    .io_rfio_reg1_raddr  (_decode_io_rfio_reg1_raddr),
    .io_rfio_reg2_raddr  (_decode_io_rfio_reg2_raddr),
    .io_deio_op_a        (_decode_io_deio_op_a),
    .io_deio_op_b        (_decode_io_deio_op_b),
    .io_deio_reg_waddr   (_decode_io_deio_reg_waddr),
    .io_deio_branch_type (_decode_io_deio_branch_type),
    .io_deio_branch_addr (_decode_io_deio_branch_addr),
    .io_deio_alu_op      (_decode_io_deio_alu_op),
    .io_deio_shamt       (_decode_io_deio_shamt),
    .io_deio_wb_type     (_decode_io_deio_wb_type),
    .io_deio_sd_type     (_decode_io_deio_sd_type),
    .io_deio_reg2_rdata  (_decode_io_deio_reg2_rdata),
    .io_deio_ld_type     (_decode_io_deio_ld_type),
    .io_deio_csr_t       (_decode_io_deio_csr_t),
    .io_deio_csr_waddr   (_decode_io_deio_csr_waddr),
    .io_deio_csr_wen     (_decode_io_deio_csr_wen),
    .io_deio_has_inst    (_decode_io_deio_has_inst),
    .io_jump_flag        (_decode_io_jump_flag),
    .io_jump_pc          (_decode_io_jump_pc),
    .io_load_use         (_decode_io_load_use),
    .io_fwde_reg1_raddr  (_decode_io_fwde_reg1_raddr),
    .io_fwde_reg2_raddr  (_decode_io_fwde_reg2_raddr),
    .io_fwde_csr_raddr   (_decode_io_fwde_csr_raddr),
    .io_csrs_csr_raddr   (_decode_io_csrs_csr_raddr)
  );
  Excute excute (	// Core.scala:27:24
    .clock                  (clock),
    .reset                  (reset),
    .io_deio_op_a           (dereg_op_a),	// Core.scala:39:24
    .io_deio_op_b           (dereg_op_b),	// Core.scala:39:24
    .io_deio_reg_waddr      (dereg_reg_waddr),	// Core.scala:39:24
    .io_deio_branch_type    (dereg_branch_type),	// Core.scala:39:24
    .io_deio_branch_addr    (dereg_branch_addr),	// Core.scala:39:24
    .io_deio_alu_op         (dereg_alu_op),	// Core.scala:39:24
    .io_deio_shamt          (dereg_shamt),	// Core.scala:39:24
    .io_deio_wb_type        (dereg_wb_type),	// Core.scala:39:24
    .io_deio_sd_type        (dereg_sd_type),	// Core.scala:39:24
    .io_deio_reg2_rdata     (dereg_reg2_rdata),	// Core.scala:39:24
    .io_deio_ld_type        (dereg_ld_type),	// Core.scala:39:24
    .io_deio_csr_t          (dereg_csr_t),	// Core.scala:39:24
    .io_deio_csr_waddr      (dereg_csr_waddr),	// Core.scala:39:24
    .io_deio_csr_wen        (dereg_csr_wen),	// Core.scala:39:24
    .io_deio_has_inst       (dereg_has_inst),	// Core.scala:39:24
    .io_fcex_stall          (_fc_io_fcex_stall),	// Core.scala:92:20
    .io_emio_reg_wdata      (_excute_io_emio_reg_wdata),
    .io_emio_reg_waddr      (_excute_io_emio_reg_waddr),
    .io_emio_wb_type        (_excute_io_emio_wb_type),
    .io_emio_ld_type        (_excute_io_emio_ld_type),
    .io_emio_ld_addr_lowbit (_excute_io_emio_ld_addr_lowbit),
    .io_emio_csr_wdata      (_excute_io_emio_csr_wdata),
    .io_emio_csr_wen        (_excute_io_emio_csr_wen),
    .io_emio_csr_waddr      (_excute_io_emio_csr_waddr),
    .io_emio_has_inst       (_excute_io_emio_has_inst),
    .io_fcex_jump_flag      (_excute_io_fcex_jump_flag),
    .io_fcex_jump_pc        (_excute_io_fcex_jump_pc),
    .io_fcex_mul_div        (_excute_io_fcex_mul_div),
    .io_fcex_mul_div_valid  (_excute_io_fcex_mul_div_valid),
    .io_raddr               (_excute_io_raddr),
    .io_waddr               (_excute_io_waddr),
    .io_wdata               (_excute_io_wdata),
    .io_wmask               (_excute_io_wmask),
    .io_cl_type             (_excute_io_cl_type),
    .io_fwex_reg_waddr      (_excute_io_fwex_reg_waddr),
    .io_fwex_reg_wdata      (_excute_io_fwex_reg_wdata),
    .io_fwex_reg_we         (_excute_io_fwex_reg_we),
    .io_fwex_csr_wdata      (_excute_io_fwex_csr_wdata),
    .io_fwex_csr_wen        (_excute_io_fwex_csr_wen),
    .io_fwex_csr_waddr      (_excute_io_fwex_csr_waddr),
    .io_clex_valid          (_excute_io_clex_valid),
    .io_clex_ld_type        (_excute_io_clex_ld_type),
    .io_clex_raddr          (_excute_io_clex_raddr),
    .io_clex_sd_type        (_excute_io_clex_sd_type),
    .io_clex_waddr          (_excute_io_clex_waddr),
    .io_clex_wmask          (_excute_io_clex_wmask),
    .io_clex_wdata          (_excute_io_clex_wdata)
  );
  Mem mem (	// Core.scala:29:21
    .clock                   (clock),
    .reset                   (reset),
    .io_emio_reg_wdata       (emreg_reg_wdata),	// Core.scala:57:24
    .io_emio_reg_waddr       (emreg_reg_waddr),	// Core.scala:57:24
    .io_emio_wb_type         (emreg_wb_type),	// Core.scala:57:24
    .io_emio_ld_type         (emreg_ld_type),	// Core.scala:57:24
    .io_emio_ld_addr_lowbit  (emreg_ld_addr_lowbit),	// Core.scala:57:24
    .io_emio_csr_wdata       (emreg_csr_wdata),	// Core.scala:57:24
    .io_emio_csr_wen         (emreg_csr_wen),	// Core.scala:57:24
    .io_emio_csr_waddr       (emreg_csr_waddr),	// Core.scala:57:24
    .io_emio_has_inst        (emreg_has_inst),	// Core.scala:57:24
    .io_rdata_valid          (_Dcache_io_cpu_resp_valid),	// Core.scala:105:24
    .io_rdata_bits_data      (_Dcache_io_cpu_resp_bits_data),	// Core.scala:105:24
    .io_rdata_io_data_valid  (_ioformem_io_mem_data_valid),	// Core.scala:108:26
    .io_rdata_io_data_bits   (_ioformem_io_mem_data_bits),	// Core.scala:108:26
    .io_clmem_Clrvalue_valid (_clint_io_clmem_Clrvalue_valid),	// Core.scala:83:23
    .io_clmem_Clrvalue_bits  (_clint_io_clmem_Clrvalue_bits),	// Core.scala:83:23
    .io_stall                (_fc_io_fcmem_stall),	// Core.scala:92:20
    .io_mwio_reg_wdata       (_mem_io_mwio_reg_wdata),
    .io_mwio_reg_waddr       (_mem_io_mwio_reg_waddr),
    .io_mwio_wb_type         (_mem_io_mwio_wb_type),
    .io_mwio_csr_wdata       (_mem_io_mwio_csr_wdata),
    .io_mwio_csr_wen         (_mem_io_mwio_csr_wen),
    .io_mwio_csr_waddr       (_mem_io_mwio_csr_waddr),
    .io_mwio_has_inst        (_mem_io_mwio_has_inst),
    .io_fwmem_reg_waddr      (_mem_io_fwmem_reg_waddr),
    .io_fwmem_reg_wdata      (_mem_io_fwmem_reg_wdata),
    .io_fwmem_reg_we         (_mem_io_fwmem_reg_we),
    .io_fwmem_csr_wdata      (_mem_io_fwmem_csr_wdata),
    .io_fwmem_csr_wen        (_mem_io_fwmem_csr_wen),
    .io_fwmem_csr_waddr      (_mem_io_fwmem_csr_waddr)
  );
  Wb wb (	// Core.scala:30:20
    .io_mwio_reg_wdata (mwreg_reg_wdata),	// Core.scala:71:24
    .io_mwio_reg_waddr (mwreg_reg_waddr),	// Core.scala:71:24
    .io_mwio_wb_type   (mwreg_wb_type),	// Core.scala:71:24
    .io_mwio_csr_wdata (mwreg_csr_wdata),	// Core.scala:71:24
    .io_mwio_csr_wen   (mwreg_csr_wen),	// Core.scala:71:24
    .io_mwio_csr_waddr (mwreg_csr_waddr),	// Core.scala:71:24
    .io_mwio_has_inst  (mwreg_has_inst),	// Core.scala:71:24
    .io_stall          (_fc_io_fcwb_stall),	// Core.scala:92:20
    .io_rfio_rd        (_wb_io_rfio_rd),
    .io_rfio_reg_wen   (_wb_io_rfio_reg_wen),
    .io_rfio_reg_wdata (_wb_io_rfio_reg_wdata),
    .io_fwwb_reg_waddr (_wb_io_fwwb_reg_waddr),
    .io_fwwb_reg_wdata (_wb_io_fwwb_reg_wdata),
    .io_fwwb_reg_we    (_wb_io_fwwb_reg_we),
    .io_fwwb_csr_wdata (_wb_io_fwwb_csr_wdata),
    .io_fwwb_csr_wen   (_wb_io_fwwb_csr_wen),
    .io_fwwb_csr_waddr (_wb_io_fwwb_csr_waddr),
    .io_csrs_rd        (_wb_io_csrs_rd),
    .io_csrs_csr_wen   (_wb_io_csrs_csr_wen),
    .io_csrs_csr_wdata (_wb_io_csrs_csr_wdata)
  );
  CLINT clint (	// Core.scala:83:23
    .clock                   (clock),
    .reset                   (reset),
    .io_clex_valid           (_excute_io_clex_valid),	// Core.scala:27:24
    .io_clex_ld_type         (_excute_io_clex_ld_type),	// Core.scala:27:24
    .io_clex_raddr           (_excute_io_clex_raddr),	// Core.scala:27:24
    .io_clex_sd_type         (_excute_io_clex_sd_type),	// Core.scala:27:24
    .io_clex_waddr           (_excute_io_clex_waddr),	// Core.scala:27:24
    .io_clex_wmask           (_excute_io_clex_wmask),	// Core.scala:27:24
    .io_clex_wdata           (_excute_io_clex_wdata),	// Core.scala:27:24
    .io_clmem_Clrvalue_valid (_clint_io_clmem_Clrvalue_valid),
    .io_clmem_Clrvalue_bits  (_clint_io_clmem_Clrvalue_bits),
    .io_timer_int            (_clint_io_timer_int)
  );
  Forward fw (	// Core.scala:86:20
    .io_fwde_reg1_raddr  (_decode_io_fwde_reg1_raddr),	// Core.scala:26:24
    .io_fwde_reg2_raddr  (_decode_io_fwde_reg2_raddr),	// Core.scala:26:24
    .io_fwde_csr_raddr   (_decode_io_fwde_csr_raddr),	// Core.scala:26:24
    .io_fwex_reg_waddr   (_excute_io_fwex_reg_waddr),	// Core.scala:27:24
    .io_fwex_reg_wdata   (_excute_io_fwex_reg_wdata),	// Core.scala:27:24
    .io_fwex_reg_we      (_excute_io_fwex_reg_we),	// Core.scala:27:24
    .io_fwex_csr_wdata   (_excute_io_fwex_csr_wdata),	// Core.scala:27:24
    .io_fwex_csr_wen     (_excute_io_fwex_csr_wen),	// Core.scala:27:24
    .io_fwex_csr_waddr   (_excute_io_fwex_csr_waddr),	// Core.scala:27:24
    .io_fwmem_reg_waddr  (_mem_io_fwmem_reg_waddr),	// Core.scala:29:21
    .io_fwmem_reg_wdata  (_mem_io_fwmem_reg_wdata),	// Core.scala:29:21
    .io_fwmem_reg_we     (_mem_io_fwmem_reg_we),	// Core.scala:29:21
    .io_fwmem_csr_wdata  (_mem_io_fwmem_csr_wdata),	// Core.scala:29:21
    .io_fwmem_csr_wen    (_mem_io_fwmem_csr_wen),	// Core.scala:29:21
    .io_fwmem_csr_waddr  (_mem_io_fwmem_csr_waddr),	// Core.scala:29:21
    .io_fwwb_reg_waddr   (_wb_io_fwwb_reg_waddr),	// Core.scala:30:20
    .io_fwwb_reg_wdata   (_wb_io_fwwb_reg_wdata),	// Core.scala:30:20
    .io_fwwb_reg_we      (_wb_io_fwwb_reg_we),	// Core.scala:30:20
    .io_fwwb_csr_wdata   (_wb_io_fwwb_csr_wdata),	// Core.scala:30:20
    .io_fwwb_csr_wen     (_wb_io_fwwb_csr_wen),	// Core.scala:30:20
    .io_fwwb_csr_waddr   (_wb_io_fwwb_csr_waddr),	// Core.scala:30:20
    .io_fwde_fw_sel1     (_fw_io_fwde_fw_sel1),
    .io_fwde_fw_sel2     (_fw_io_fwde_fw_sel2),
    .io_fwde_fw_data1    (_fw_io_fwde_fw_data1),
    .io_fwde_fw_data2    (_fw_io_fwde_fw_data2),
    .io_fwde_csr_fw_sel  (_fw_io_fwde_csr_fw_sel),
    .io_fwde_csr_fw_data (_fw_io_fwde_csr_fw_data)
  );
  Regfile regfile (	// Core.scala:89:25
    .clock              (clock),
    .io_RfDe_reg1_raddr (_decode_io_rfio_reg1_raddr),	// Core.scala:26:24
    .io_RfDe_reg2_raddr (_decode_io_rfio_reg2_raddr),	// Core.scala:26:24
    .io_RfWb_rd         (_wb_io_rfio_rd),	// Core.scala:30:20
    .io_RfWb_reg_wen    (_wb_io_rfio_reg_wen),	// Core.scala:30:20
    .io_RfWb_reg_wdata  (_wb_io_rfio_reg_wdata),	// Core.scala:30:20
    .io_RfDe_reg1_rdata (_regfile_io_RfDe_reg1_rdata),
    .io_RfDe_reg2_rdata (_regfile_io_RfDe_reg2_rdata)
  );
  FlowControl fc (	// Core.scala:92:20
    .io_fcde_jump_flag     (_decode_io_jump_flag),	// Core.scala:26:24
    .io_fcde_jump_pc       (_decode_io_jump_pc),	// Core.scala:26:24
    .io_fcde_load_use      (_decode_io_load_use),	// Core.scala:26:24
    .io_fcex_jump_flag     (_excute_io_fcex_jump_flag),	// Core.scala:27:24
    .io_fcex_jump_pc       (_excute_io_fcex_jump_pc),	// Core.scala:27:24
    .io_fcex_mul_div       (_excute_io_fcex_mul_div),	// Core.scala:27:24
    .io_fcex_mul_div_valid (_excute_io_fcex_mul_div_valid),	// Core.scala:27:24
    .io_fctr_pop_NOP       (_trap_io_fctr_pop_NOP),	// Core.scala:98:22
    .io_fctr_trap_state    (_trap_io_fctr_trap_state),	// Core.scala:98:22
    .io_fctr_jump_flag     (_trap_io_fctr_jump_flag),	// Core.scala:98:22
    .io_fctr_jump_pc       (_trap_io_fctr_jump_pc),	// Core.scala:98:22
    .io_fcIcache_state     (_Icache_io_fccache_state),	// Core.scala:104:24
    .io_fcIcache_hit       (_Icache_io_fccache_hit),	// Core.scala:104:24
    .io_fcDcache_state     (_Dcache_io_fccache_state),	// Core.scala:105:24
    .io_fcDcache_hit       (_Dcache_io_fccache_hit),	// Core.scala:105:24
    .io_fcio_req           (_ioformem_io_fc_req),	// Core.scala:108:26
    .io_fcio_state         (_ioformem_io_fc_state),	// Core.scala:108:26
    .io_fcfe_jump_flag     (_fc_io_fcfe_jump_flag),
    .io_fcfe_jump_pc       (_fc_io_fcfe_jump_pc),
    .io_fcfe_flush         (_fc_io_fcfe_flush),
    .io_fcfe_stall         (_fc_io_fcfe_stall),
    .io_fcde_flush         (_fc_io_fcde_flush),
    .io_fcde_stall         (_fc_io_fcde_stall),
    .io_fcex_stall         (_fc_io_fcex_stall),
    .io_fcmem_stall        (_fc_io_fcmem_stall),
    .io_fcwb_stall         (_fc_io_fcwb_stall),
    .io_fcio_stall         (_fc_io_fcio_stall),
    .io_sdb_stall          (_fc_io_sdb_stall)
  );
  CSRs csrs (	// Core.scala:95:22
    .clock              (clock),
    .reset              (reset),
    .io_CSRDe_csr_raddr (_decode_io_csrs_csr_raddr),	// Core.scala:26:24
    .io_CSRWb_rd        (_wb_io_csrs_rd),	// Core.scala:30:20
    .io_CSRWb_csr_wen   (_wb_io_csrs_csr_wen),	// Core.scala:30:20
    .io_CSRWb_csr_wdata (_wb_io_csrs_csr_wdata),	// Core.scala:30:20
    .io_CSRTr_rd        (_trap_io_csrtr_rd),	// Core.scala:98:22
    .io_CSRTr_csr_wen   (_trap_io_csrtr_csr_wen),	// Core.scala:98:22
    .io_CSRTr_csr_wdata (_trap_io_csrtr_csr_wdata),	// Core.scala:98:22
    .io_timer_int       (_clint_io_timer_int),	// Core.scala:83:23
    .io_CSRDe_csr_rdata (_csrs_io_CSRDe_csr_rdata),
    .io_CSRTr_MTVEC     (_csrs_io_CSRTr_MTVEC),
    .io_CSRTr_MCAUSE    (_csrs_io_CSRTr_MCAUSE),
    .io_CSRTr_MEPC      (_csrs_io_CSRTr_MEPC),
    .io_CSRTr_MIE       (_csrs_io_CSRTr_MIE),
    .io_CSRTr_MIP       (_csrs_io_CSRTr_MIP),
    .io_CSRTr_MSTATUS   (_csrs_io_CSRTr_MSTATUS)
  );
  Trap trap (	// Core.scala:98:22
    .clock              (clock),
    .reset              (reset),
    .io_ex_hasinst      (dereg_has_inst),	// Core.scala:39:24
    .io_mem_hasinst     (emreg_has_inst),	// Core.scala:57:24
    .io_wb_hasinst      (mwreg_has_inst),	// Core.scala:71:24
    .io_csrtr_MTVEC     (_csrs_io_CSRTr_MTVEC),	// Core.scala:95:22
    .io_csrtr_MCAUSE    (_csrs_io_CSRTr_MCAUSE),	// Core.scala:95:22
    .io_csrtr_MEPC      (_csrs_io_CSRTr_MEPC),	// Core.scala:95:22
    .io_csrtr_MIE       (_csrs_io_CSRTr_MIE),	// Core.scala:95:22
    .io_csrtr_MIP       (_csrs_io_CSRTr_MIP),	// Core.scala:95:22
    .io_csrtr_MSTATUS   (_csrs_io_CSRTr_MSTATUS),	// Core.scala:95:22
    .io_inst            (_Icache_io_cpu_resp_valid ? _Icache_io_cpu_resp_bits_data[31:0] : 32'h13),	// Core.scala:104:24, :416:24
    .io_pc              (_fetch_io_pc_bits),	// Core.scala:25:23
    .io_csrtr_rd        (_trap_io_csrtr_rd),
    .io_csrtr_csr_wen   (_trap_io_csrtr_csr_wen),
    .io_csrtr_csr_wdata (_trap_io_csrtr_csr_wdata),
    .io_fctr_pop_NOP    (_trap_io_fctr_pop_NOP),
    .io_fctr_trap_state (_trap_io_fctr_trap_state),
    .io_fctr_jump_flag  (_trap_io_fctr_jump_flag),
    .io_fctr_jump_pc    (_trap_io_fctr_jump_pc)
  );
  AXIArbitor arbitor (	// Core.scala:101:25
    .clock                       (clock),
    .reset                       (reset),
    .io_master0_req_valid        (_ioformem_io_axi_req_valid),	// Core.scala:108:26
    .io_master0_req_bits_rw      (_ioformem_io_axi_req_bits_rw),	// Core.scala:108:26
    .io_master0_req_bits_addr    (_ioformem_io_axi_req_bits_addr),	// Core.scala:108:26
    .io_master0_req_bits_data    (_ioformem_io_axi_req_bits_data),	// Core.scala:108:26
    .io_master0_req_bits_mask    (_ioformem_io_axi_req_bits_mask),	// Core.scala:108:26
    .io_master1_req_valid        (_Dcache_io_axi_req_valid),	// Core.scala:105:24
    .io_master1_req_bits_rw      (_Dcache_io_axi_req_bits_rw),	// Core.scala:105:24
    .io_master1_req_bits_addr    (_Dcache_io_axi_req_bits_addr),	// Core.scala:105:24
    .io_master1_req_bits_data    (_Dcache_io_axi_req_bits_data),	// Core.scala:105:24
    .io_master2_req_valid        (_Icache_io_axi_req_valid),	// Core.scala:104:24
    .io_master2_req_bits_rw      (_Icache_io_axi_req_bits_rw),	// Core.scala:104:24
    .io_master2_req_bits_addr    (_Icache_io_axi_req_bits_addr),	// Core.scala:104:24
    .io_master2_req_bits_data    (_Icache_io_axi_req_bits_data),	// Core.scala:104:24
    .io_AXI_O_aw_ready           (io_AXI_Interface_aw_ready),
    .io_AXI_O_w_ready            (io_AXI_Interface_w_ready),
    .io_AXI_O_b_valid            (io_AXI_Interface_b_valid),
    .io_AXI_O_ar_ready           (io_AXI_Interface_ar_ready),
    .io_AXI_O_r_valid            (io_AXI_Interface_r_valid),
    .io_AXI_O_r_bits_data        (io_AXI_Interface_r_bits_data),
    .io_AXI_O_r_bits_last        (io_AXI_Interface_r_bits_last),
    .io_master0_resp_valid       (_arbitor_io_master0_resp_valid),
    .io_master0_resp_bits_data   (_arbitor_io_master0_resp_bits_data),
    .io_master1_resp_valid       (_arbitor_io_master1_resp_valid),
    .io_master1_resp_bits_data   (_arbitor_io_master1_resp_bits_data),
    .io_master1_resp_bits_choose (_arbitor_io_master1_resp_bits_choose),
    .io_master2_resp_valid       (_arbitor_io_master2_resp_valid),
    .io_master2_resp_bits_data   (_arbitor_io_master2_resp_bits_data),
    .io_master2_resp_bits_choose (_arbitor_io_master2_resp_bits_choose),
    .io_AXI_O_aw_valid           (io_AXI_Interface_aw_valid),
    .io_AXI_O_aw_bits_addr       (io_AXI_Interface_aw_bits_addr),
    .io_AXI_O_aw_bits_len        (io_AXI_Interface_aw_bits_len),
    .io_AXI_O_w_valid            (io_AXI_Interface_w_valid),
    .io_AXI_O_w_bits_data        (io_AXI_Interface_w_bits_data),
    .io_AXI_O_w_bits_strb        (io_AXI_Interface_w_bits_strb),
    .io_AXI_O_w_bits_last        (io_AXI_Interface_w_bits_last),
    .io_AXI_O_ar_valid           (io_AXI_Interface_ar_valid),
    .io_AXI_O_ar_bits_addr       (io_AXI_Interface_ar_bits_addr),
    .io_AXI_O_ar_bits_len        (io_AXI_Interface_ar_bits_len)
  );
  Cache Icache (	// Core.scala:104:24
    .clock                   (clock),
    .reset                   (reset),
    .io_cpu_req_valid        (_fetch_io_pc_valid),	// Core.scala:25:23
    .io_cpu_req_bits_addr    (_fetch_io_pc_bits),	// Core.scala:25:23
    .io_cpu_req_bits_data    (64'h0),	// Core.scala:432:36
    .io_cpu_req_bits_mask    (8'h0),	// Core.scala:447:33
    .io_axi_resp_valid       (_arbitor_io_master2_resp_valid),	// Core.scala:101:25
    .io_axi_resp_bits_data   (_arbitor_io_master2_resp_bits_data),	// Core.scala:101:25
    .io_axi_resp_bits_choose (_arbitor_io_master2_resp_bits_choose),	// Core.scala:101:25
    .io_cpu_resp_valid       (_Icache_io_cpu_resp_valid),
    .io_cpu_resp_bits_data   (_Icache_io_cpu_resp_bits_data),
    .io_axi_req_valid        (_Icache_io_axi_req_valid),
    .io_axi_req_bits_rw      (_Icache_io_axi_req_bits_rw),
    .io_axi_req_bits_addr    (_Icache_io_axi_req_bits_addr),
    .io_axi_req_bits_data    (_Icache_io_axi_req_bits_data),
    .io_fccache_state        (_Icache_io_fccache_state),
    .io_fccache_hit          (_Icache_io_fccache_hit)
  );
  Cache Dcache (	// Core.scala:105:24
    .clock                   (clock),
    .reset                   (reset),
    .io_cpu_req_valid        (((|dereg_ld_type) | (|dereg_sd_type)) & _DI_io_mem_addr_T < 64'hA0000000 &
                ~_excute_io_cl_type),	// Core.scala:27:24, :39:24, :454:{47,51,67,93,112,129,133}
    .io_cpu_req_bits_addr    (_DI_io_mem_addr_T[31:0]),	// Core.scala:454:93, :455:33
    .io_cpu_req_bits_data    (_excute_io_wdata),	// Core.scala:27:24
    .io_cpu_req_bits_mask    (_excute_io_wmask),	// Core.scala:27:24
    .io_axi_resp_valid       (_arbitor_io_master1_resp_valid),	// Core.scala:101:25
    .io_axi_resp_bits_data   (_arbitor_io_master1_resp_bits_data),	// Core.scala:101:25
    .io_axi_resp_bits_choose (_arbitor_io_master1_resp_bits_choose),	// Core.scala:101:25
    .io_cpu_resp_valid       (_Dcache_io_cpu_resp_valid),
    .io_cpu_resp_bits_data   (_Dcache_io_cpu_resp_bits_data),
    .io_axi_req_valid        (_Dcache_io_axi_req_valid),
    .io_axi_req_bits_rw      (_Dcache_io_axi_req_bits_rw),
    .io_axi_req_bits_addr    (_Dcache_io_axi_req_bits_addr),
    .io_axi_req_bits_data    (_Dcache_io_axi_req_bits_data),
    .io_fccache_state        (_Dcache_io_fccache_state),
    .io_fccache_hit          (_Dcache_io_fccache_hit)
  );
  IoforMem ioformem (	// Core.scala:108:26
    .clock                 (clock),
    .reset                 (reset),
    .io_axi_resp_valid     (_arbitor_io_master0_resp_valid),	// Core.scala:101:25
    .io_axi_resp_bits_data (_arbitor_io_master0_resp_bits_data),	// Core.scala:101:25
    .io_excute_waddr       (_excute_io_waddr[31:0]),	// Core.scala:27:24, :463:30
    .io_excute_raddr       (_excute_io_raddr[31:0]),	// Core.scala:27:24, :464:30
    .io_excute_wdata       (_excute_io_wdata),	// Core.scala:27:24
    .io_excute_wmask       (_excute_io_wmask),	// Core.scala:27:24
    .io_excute_load        (|dereg_ld_type),	// Core.scala:39:24, :467:55
    .io_excute_store       (|dereg_sd_type),	// Core.scala:39:24, :468:56
    .io_fc_stall           (_fc_io_fcio_stall),	// Core.scala:92:20
    .io_axi_req_valid      (_ioformem_io_axi_req_valid),
    .io_axi_req_bits_rw    (_ioformem_io_axi_req_bits_rw),
    .io_axi_req_bits_addr  (_ioformem_io_axi_req_bits_addr),
    .io_axi_req_bits_data  (_ioformem_io_axi_req_bits_data),
    .io_axi_req_bits_mask  (_ioformem_io_axi_req_bits_mask),
    .io_mem_data_valid     (_ioformem_io_mem_data_valid),
    .io_mem_data_bits      (_ioformem_io_mem_data_bits),
    .io_fc_req             (_ioformem_io_fc_req),
    .io_fc_state           (_ioformem_io_fc_state)
  );
  DebugInterface DI (	// Core.scala:483:19
    .clk        (clock),
    .rst        (reset),
    .pc         (_fetch_io_pc_bits),	// Core.scala:25:23
    .pc_req     (_fetch_io_pc_valid),	// Core.scala:25:23
    .inst       (_Icache_io_cpu_resp_valid ? (fdreg_pc[2] ? _Icache_io_cpu_resp_bits_data[63:32] :
                _Icache_io_cpu_resp_bits_data[31:0]) : 32'h13),	// Core.scala:33:24, :104:24, :416:24, :488:22, :489:{12,21}, :490:41, :491:41
    .inst_valid (_Icache_io_cpu_resp_valid & ~_fc_io_fcde_flush),	// Core.scala:92:20, :104:24, :494:{50,70}
    .load_use   (_decode_io_load_use),	// Core.scala:26:24
    .op_a       (dereg_op_a),	// Core.scala:39:24
    .op_b       (dereg_op_b),	// Core.scala:39:24
    .result     (_excute_io_emio_reg_wdata),	// Core.scala:27:24
    .br_yes     (_excute_io_fcex_jump_flag),	// Core.scala:27:24
    .mem_access ((|dereg_ld_type) | (|dereg_sd_type)),	// Core.scala:39:24, :467:55, :468:56, :500:52
    .mem_addr   (_DI_io_mem_addr_T),	// Core.scala:454:93
    .rd         (_wb_io_rfio_rd),	// Core.scala:30:20
    .reg_wen    (_wb_io_rfio_reg_wen),	// Core.scala:30:20
    .reg_wdata  (_wb_io_rfio_reg_wdata),	// Core.scala:30:20
    .csr_wen    (_wb_io_csrs_csr_wen),	// Core.scala:30:20
    .csr_wdata  (_wb_io_csrs_csr_wdata),	// Core.scala:30:20
    .csr_waddr  (_wb_io_csrs_rd),	// Core.scala:30:20
    .sdb_stall  (_fc_io_sdb_stall),	// Core.scala:92:20
    .trap_state (_trap_io_fctr_trap_state)	// Core.scala:98:22
  );
  Interact interact (	// Core.scala:512:26
    .inst (_Icache_io_cpu_resp_valid & ~_fc_io_fcde_flush ? (fdreg_pc[2] ?
                _Icache_io_cpu_resp_bits_data[63:32] : _Icache_io_cpu_resp_bits_data[31:0]) : 32'h0),	// Core.scala:33:24, :92:20, :104:24, :489:21, :490:41, :491:41, :494:70, :513:{28,54}, :514:12
    .clk  (clock),
    .rst  (reset)
  );
endmodule

// external module Sram

module Soc(	// <stdin>:11294:10
  input clock,
        reset);

  wire        _sram_S_AXI_AWREADY;	// Soc.scala:12:22
  wire        _sram_S_AXI_WREADY;	// Soc.scala:12:22
  wire        _sram_S_AXI_BID;	// Soc.scala:12:22
  wire [1:0]  _sram_S_AXI_BRESP;	// Soc.scala:12:22
  wire        _sram_S_AXI_BVALID;	// Soc.scala:12:22
  wire        _sram_S_AXI_ARREADY;	// Soc.scala:12:22
  wire        _sram_S_AXI_RID;	// Soc.scala:12:22
  wire [63:0] _sram_S_AXI_RDATA;	// Soc.scala:12:22
  wire        _sram_S_AXI_RLAST;	// Soc.scala:12:22
  wire [1:0]  _sram_S_AXI_RRESP;	// Soc.scala:12:22
  wire        _sram_S_AXI_RVALID;	// Soc.scala:12:22
  wire        _core_io_AXI_Interface_aw_valid;	// Soc.scala:11:22
  wire [31:0] _core_io_AXI_Interface_aw_bits_addr;	// Soc.scala:11:22
  wire [7:0]  _core_io_AXI_Interface_aw_bits_len;	// Soc.scala:11:22
  wire        _core_io_AXI_Interface_w_valid;	// Soc.scala:11:22
  wire [63:0] _core_io_AXI_Interface_w_bits_data;	// Soc.scala:11:22
  wire [7:0]  _core_io_AXI_Interface_w_bits_strb;	// Soc.scala:11:22
  wire        _core_io_AXI_Interface_w_bits_last;	// Soc.scala:11:22
  wire        _core_io_AXI_Interface_ar_valid;	// Soc.scala:11:22
  wire [31:0] _core_io_AXI_Interface_ar_bits_addr;	// Soc.scala:11:22
  wire [7:0]  _core_io_AXI_Interface_ar_bits_len;	// Soc.scala:11:22
  Core core (	// Soc.scala:11:22
    .clock                         (clock),
    .reset                         (reset),
    .io_AXI_Interface_aw_ready     (_sram_S_AXI_AWREADY),	// Soc.scala:12:22
    .io_AXI_Interface_w_ready      (_sram_S_AXI_WREADY),	// Soc.scala:12:22
    .io_AXI_Interface_b_valid      (_sram_S_AXI_BVALID),	// Soc.scala:12:22
    .io_AXI_Interface_ar_ready     (_sram_S_AXI_ARREADY),	// Soc.scala:12:22
    .io_AXI_Interface_r_valid      (_sram_S_AXI_RVALID),	// Soc.scala:12:22
    .io_AXI_Interface_r_bits_data  (_sram_S_AXI_RDATA),	// Soc.scala:12:22
    .io_AXI_Interface_r_bits_last  (_sram_S_AXI_RLAST),	// Soc.scala:12:22
    .io_AXI_Interface_aw_valid     (_core_io_AXI_Interface_aw_valid),
    .io_AXI_Interface_aw_bits_addr (_core_io_AXI_Interface_aw_bits_addr),
    .io_AXI_Interface_aw_bits_len  (_core_io_AXI_Interface_aw_bits_len),
    .io_AXI_Interface_w_valid      (_core_io_AXI_Interface_w_valid),
    .io_AXI_Interface_w_bits_data  (_core_io_AXI_Interface_w_bits_data),
    .io_AXI_Interface_w_bits_strb  (_core_io_AXI_Interface_w_bits_strb),
    .io_AXI_Interface_w_bits_last  (_core_io_AXI_Interface_w_bits_last),
    .io_AXI_Interface_ar_valid     (_core_io_AXI_Interface_ar_valid),
    .io_AXI_Interface_ar_bits_addr (_core_io_AXI_Interface_ar_bits_addr),
    .io_AXI_Interface_ar_bits_len  (_core_io_AXI_Interface_ar_bits_len)
  );
  Sram sram (	// Soc.scala:12:22
    .ACLK          (clock),
    .ARESETn       (~reset),	// Soc.scala:15:13
    .S_AXI_AWID    (1'h0),	// Soc.scala:12:22
    .S_AXI_AWADDR  (_core_io_AXI_Interface_aw_bits_addr),	// Soc.scala:11:22
    .S_AXI_AWLEN   (_core_io_AXI_Interface_aw_bits_len),	// Soc.scala:11:22
    .S_AXI_AWSIZE  (3'h3),	// Soc.scala:12:22
    .S_AXI_AWBURST (2'h1),	// Soc.scala:12:22
    .S_AXI_AWLOCK  (1'h0),	// Soc.scala:12:22
    .S_AXI_AWCACHE (4'h2),	// Soc.scala:12:22
    .S_AXI_AWPROT  (3'h0),	// Soc.scala:12:22
    .S_AXI_AWVALID (_core_io_AXI_Interface_aw_valid),	// Soc.scala:11:22
    .S_AXI_WDATA   (_core_io_AXI_Interface_w_bits_data),	// Soc.scala:11:22
    .S_AXI_WSTRB   (_core_io_AXI_Interface_w_bits_strb),	// Soc.scala:11:22
    .S_AXI_WLAST   (_core_io_AXI_Interface_w_bits_last),	// Soc.scala:11:22
    .S_AXI_WVALID  (_core_io_AXI_Interface_w_valid),	// Soc.scala:11:22
    .S_AXI_BREADY  (1'h1),	// Soc.scala:12:22
    .S_AXI_ARID    (1'h0),	// Soc.scala:12:22
    .S_AXI_ARADDR  (_core_io_AXI_Interface_ar_bits_addr),	// Soc.scala:11:22
    .S_AXI_ARLEN   (_core_io_AXI_Interface_ar_bits_len),	// Soc.scala:11:22
    .S_AXI_ARSIZE  (3'h3),	// Soc.scala:12:22
    .S_AXI_ARBURST (2'h1),	// Soc.scala:12:22
    .S_AXI_ARLOCK  (1'h0),	// Soc.scala:12:22
    .S_AXI_ARCACHE (4'h2),	// Soc.scala:12:22
    .S_AXI_ARPROT  (3'h0),	// Soc.scala:12:22
    .S_AXI_ARVALID (_core_io_AXI_Interface_ar_valid),	// Soc.scala:11:22
    .S_AXI_RREADY  (1'h1),	// Soc.scala:12:22
    .S_AXI_AWREADY (_sram_S_AXI_AWREADY),
    .S_AXI_WREADY  (_sram_S_AXI_WREADY),
    .S_AXI_BID     (_sram_S_AXI_BID),
    .S_AXI_BRESP   (_sram_S_AXI_BRESP),
    .S_AXI_BVALID  (_sram_S_AXI_BVALID),
    .S_AXI_ARREADY (_sram_S_AXI_ARREADY),
    .S_AXI_RID     (_sram_S_AXI_RID),
    .S_AXI_RDATA   (_sram_S_AXI_RDATA),
    .S_AXI_RLAST   (_sram_S_AXI_RLAST),
    .S_AXI_RRESP   (_sram_S_AXI_RRESP),
    .S_AXI_RVALID  (_sram_S_AXI_RVALID)
  );
endmodule


// ----- 8< ----- FILE "rv64/./build/DebugInterface.v" ----- 8< -----



import "DPI-C" function void update_debuginfo(input reg[31:0] pc, input pc_req, input reg[31:0] inst, 
  input inst_valid, input load_use, input reg[63:0] op_a, input reg[63:0] op_b, input reg[63:0] result, 
   input br_yes, input reg mem_access, input [63:0] mem_addr,
   input reg[4:0] rd, input reg[63:0] reg_wdata,
  input reg_wen, input csr_wen, input [63:0] csr_wdata, input [11:0] csr_waddr, input sdb_stall, input reg[2:0] trap_state);

module DebugInterface(
                   input        clk,
                   input        rst,            
                   //fetch
                   input [31:0] pc,
                   input        pc_req,

                   input [31:0] inst,
                   input        inst_valid,
                   input        load_use,
                   
                   //decode
                   input [63:0] op_a,
                   input [63:0] op_b,
                   input [63:0] result,

                   //execute
                   input        br_yes,

                   input        mem_access,
                   input [63:0] mem_addr,
       

                   //wb
                   input [4:0] rd,
                   input [63:0] reg_wdata,
                   input        reg_wen,

                   input       csr_wen,
                   input [63:0] csr_wdata,
                   input [11:0]    csr_waddr,

                   input   sdb_stall,

                   input [2:0]  trap_state
);




always@(posedge clk)begin
   if(rst != 'd1)
       update_debuginfo(pc,pc_req,inst,inst_valid,load_use,op_a,op_b,result,br_yes, mem_access, mem_addr, rd,reg_wdata,reg_wen,
       csr_wen,csr_wdata,csr_waddr,sdb_stall,trap_state);
end



endmodule


    

// ----- 8< ----- FILE "rv64/./build/Interact.v" ----- 8< -----


module Interact(input [31:0] inst,
                input  clk,
                input  rst
);
   
   reg ebreak_flag;
   reg [5:0] over_count;

   always@(posedge clk)begin
       if(rst)
           ebreak_flag <= 1'b0;
       else
       if(inst == 32'b00000000000100000000000001110011)begin
           ebreak_flag <= 1'b1;
       end
   end

   always@(posedge clk)begin  //需要等前面指令执行结束，再停止程序
       if(rst)
           over_count <= 'd0;
       else begin
           if(ebreak_flag)begin
               over_count <= over_count + 1'b1;
               if(over_count == 6'd30)begin          
                   $display("ebreak!");
                   $finish;
               end
                   
           end
       end 
           
   end

   
endmodule
        

// ----- 8< ----- FILE "rv64/./build/Sram.v" ----- 8< -----


import "DPI-C" function longint pmem_read(
   input reg[31:0] raddr);

import "DPI-C" function void pmem_write(
   input reg[31:0] waddr, input reg[63:0] wdata, input byte wmask);


module Sram(
   input        ACLK,
   input        ARESETn,

   input       S_AXI_AWID,
   input [31:0] S_AXI_AWADDR,
   input [7:0] S_AXI_AWLEN,
   input [2:0] S_AXI_AWSIZE,
   input [1:0] S_AXI_AWBURST,
   input       S_AXI_AWLOCK,
   input [3:0] S_AXI_AWCACHE,
   input [2:0]  S_AXI_AWPROT,
   input        S_AXI_AWVALID,
   output       S_AXI_AWREADY,

   input [63:0] S_AXI_WDATA,
   input [7:0]  S_AXI_WSTRB,
   input        S_AXI_WLAST,
   input        S_AXI_WVALID,
   output       S_AXI_WREADY,

   output       S_AXI_BID,
   output [1:0] S_AXI_BRESP,
   output       S_AXI_BVALID,
   input        S_AXI_BREADY,

   input        S_AXI_ARID,
   input [31:0] S_AXI_ARADDR,
   input [7:0]  S_AXI_ARLEN,
   input [2:0]  S_AXI_ARSIZE,
   input [1:0]  S_AXI_ARBURST,
   input        S_AXI_ARLOCK,
   input [3:0]  S_AXI_ARCACHE,
   input [2:0]  S_AXI_ARPROT,
   input        S_AXI_ARVALID,
   output       S_AXI_ARREADY,

   output       S_AXI_RID,
   output [63:0]S_AXI_RDATA,
   output       S_AXI_RLAST,
   output [1:0] S_AXI_RRESP,
   output       S_AXI_RVALID,
   input        S_AXI_RREADY
);
//internal reg
reg     [3:0]   w_count;
reg     [3:0]   r_count;

//interface reg_def
reg     [1:0]   bresp;
reg             bvalid;

reg     [63:0]  rdata;
reg             rlast;
reg     [1:0]   rresp;
reg             rvalid;

assign S_AXI_AWREADY = 'd1;  //减少延迟

assign S_AXI_WREADY = 'd1;

assign S_AXI_BID = 'd0;
assign S_AXI_BRESP = bresp;
assign S_AXI_BVALID = bvalid;

assign S_AXI_ARREADY = 'd1;

assign S_AXI_RID = 'd0;
assign S_AXI_RDATA = rdata;
assign S_AXI_RLAST = rlast;
assign S_AXI_RRESP = rresp;
assign S_AXI_RVALID = rvalid;


//aw channel
reg [31:0] awaddr_buffer;

always@(posedge ACLK or negedge ARESETn)begin
    if(!ARESETn)
        awaddr_buffer <= 32'd0;
    else begin
        if(S_AXI_AWVALID && S_AXI_AWREADY)begin
            awaddr_buffer <= S_AXI_AWADDR;
        end
    end
end


//address selection
wire [31:0] awaddr; //True addr
assign awaddr = (S_AXI_WVALID && S_AXI_WREADY && S_AXI_AWVALID && S_AXI_AWREADY) ? S_AXI_AWADDR : awaddr_buffer;

//w channel
always@(posedge ACLK or negedge ARESETn)begin
    if(!ARESETn)begin
        w_count <= 'd0;
    end
    else begin
        if(S_AXI_WVALID && S_AXI_WREADY && S_AXI_WLAST)begin
            w_count <= 'd0;
            pmem_write(awaddr+ w_count*8, S_AXI_WDATA, S_AXI_WSTRB);
        end 
        else if(S_AXI_WVALID && S_AXI_WREADY)begin
            w_count <= w_count + 'd1;
            pmem_write(awaddr+ w_count*8, S_AXI_WDATA, S_AXI_WSTRB);  //应该用size,而不是直接8,方便
        end
        else begin 
            w_count <= w_count;
        end
    end
end

//b channel
wire need_resp;
assign need_resp = (S_AXI_WVALID && S_AXI_WREADY && S_AXI_WLAST) ? 1'd1 : 1'd0;

always@(posedge ACLK or negedge ARESETn)begin
    if(!ARESETn)
        bvalid <= 1'b0;
    else begin
        if(need_resp)begin
            bvalid <= 1'b1;
            bresp <= 2'b00;
        end
        else if(S_AXI_BVALID && S_AXI_BREADY)begin
            bvalid <= 1'b0;
        end
    end
end



//ar channel
reg [31:0] araddr;
reg need_read;

always@(posedge ACLK or negedge ARESETn)begin
    if(!ARESETn)begin
        araddr <= 32'd0;
        need_read <= 1'b0;
    end
    else begin
        if(S_AXI_ARVALID && S_AXI_ARREADY)begin
            araddr <= S_AXI_ARADDR;
            need_read <= 1'b1;
        end
        else if(S_AXI_RLAST)begin
            need_read <= 1'b0;
        end
    end
end

//r channel
always@(posedge ACLK or negedge ARESETn) begin
   if(!ARESETn)begin
       rvalid <= 1'b0;
       rdata <= 64'd0;
       rresp <= 2'd0;
       rlast <= 1'd0;
       r_count <= 'd0;
    end
    else begin
        if(need_read || (S_AXI_ARVALID && S_AXI_ARREADY)) begin //严格最少延迟
            rvalid <= 1'b1;
            //rdata <= (S_AXI_ARVALID && S_AXI_ARREADY) ? pmem_read(S_AXI_ARADDR) : pmem_read(araddr+8*r_count);
            if(S_AXI_ARVALID && S_AXI_ARREADY)
               rdata <= pmem_read(S_AXI_ARADDR);
            else
               rdata <= pmem_read(araddr+8*r_count);
            rresp <= 2'b00;
            r_count <= r_count + 1'd1;  //传出第一个数据时,r_count为1
            rlast <= (r_count == 'd15) ? 1'd1 : 1'd0;
            if(rlast)begin
               rvalid <= 1'b0;
               r_count <= 'd0;
            end
        end
    end 
end



endmodule
    

// ----- 8< ----- FILE "firrtl_black_box_resource_files.f" ----- 8< -----

